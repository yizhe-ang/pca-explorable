import{S as Si,i as bi,s as Ei,k as Xt,e as ru,J as M1,l as qt,h as Tt,n as qe,C as jt,D as No,K as S1,b as Sr,L as Ki,E as Os,F as Fs,G as Bs,H as zs,g as Ut,d as Ot,I as Fa,M as Ui,N as Mn,y as Fn,z as Bn,A as zn,B as Hn,O as md,o as gd,a as Ro,c as Co,f as Tf,P as su,Q as Oo,R as Af,v as Rf,T as b1,t as E1,m as f0,U as w1,w as d0,V as T1,W as A1}from"../chunks/index.8e873301.js";import"../chunks/transform.4d2927c0.js";import{w as Mi,d as _d,r as R1}from"../chunks/index.b02d693d.js";function Ag(s,e,t){const n=s.slice();return n[5]=e[t],n}function Rg(s){let e,t;return{c(){e=Xt("link"),this.h()},l(n){e=qt(n,"LINK",{rel:!0,href:!0,as:!0,type:!0,crossorigin:!0}),this.h()},h(){qe(e,"rel","preload"),qe(e,"href",t=s[5]),qe(e,"as","font"),qe(e,"type","font/woff2"),qe(e,"crossorigin","")},m(n,i){Sr(n,e,i)},p(n,i){i&16&&t!==(t=n[5])&&qe(e,"href",t)},d(n){n&&Tt(e)}}}function C1(s){let e,t,n,i,r,o,l,u,h,d,m,p,g,v,M,y,_,b,S,w,T,L,O,N,A,I;document.title=e=s[0];let K=s[4],ne=[];for(let X=0;X<K.length;X+=1)ne[X]=Rg(Ag(s,K,X));return{c(){t=Xt("meta"),n=Xt("meta"),i=Xt("meta"),r=Xt("meta"),o=Xt("meta"),l=Xt("meta"),u=Xt("meta"),h=Xt("meta"),d=Xt("meta"),m=Xt("meta"),g=Xt("meta"),v=Xt("meta"),M=Xt("meta"),y=Xt("meta"),_=Xt("meta"),b=Xt("meta"),S=Xt("meta"),w=Xt("meta"),T=Xt("meta"),O=Xt("meta"),N=Xt("link");for(let X=0;X<ne.length;X+=1)ne[X].c();I=ru(),this.h()},l(X){const G=M1("svelte-1htu80s",document.head);t=qt(G,"META",{name:!0,content:!0}),n=qt(G,"META",{name:!0,content:!0}),i=qt(G,"META",{name:!0,content:!0}),r=qt(G,"META",{property:!0,content:!0}),o=qt(G,"META",{property:!0,content:!0}),l=qt(G,"META",{property:!0,content:!0}),u=qt(G,"META",{property:!0,content:!0}),h=qt(G,"META",{property:!0,content:!0}),d=qt(G,"META",{property:!0,content:!0}),m=qt(G,"META",{property:!0,content:!0}),g=qt(G,"META",{property:!0,content:!0}),v=qt(G,"META",{property:!0,content:!0}),M=qt(G,"META",{property:!0,content:!0}),y=qt(G,"META",{name:!0,content:!0}),_=qt(G,"META",{name:!0,content:!0}),b=qt(G,"META",{name:!0,content:!0}),S=qt(G,"META",{name:!0,content:!0}),w=qt(G,"META",{name:!0,content:!0}),T=qt(G,"META",{name:!0,content:!0}),O=qt(G,"META",{name:!0,content:!0}),N=qt(G,"LINK",{rel:!0,href:!0});for(let V=0;V<ne.length;V+=1)ne[V].l(G);I=ru(),G.forEach(Tt),this.h()},h(){qe(t,"name","description"),qe(t,"content",s[1]),qe(n,"name","author"),qe(n,"content","The Pudding"),qe(i,"name","news_keywords"),qe(i,"content",s[3]),qe(r,"property","og:title"),qe(r,"content",s[0]),qe(o,"property","og:site_name"),qe(o,"content","The Pudding"),qe(l,"property","og:url"),qe(l,"content",s[2]),qe(u,"property","og:description"),qe(u,"content",s[1]),qe(h,"property","og:type"),qe(h,"content","article"),qe(d,"property","og:locale"),qe(d,"content","en_US"),qe(m,"property","og:image"),qe(m,"content",p=s[2]+"/assets/social-facebook.jpg"),qe(g,"property","og:image:type"),qe(g,"content","image/jpeg"),qe(v,"property","og:image:width"),qe(v,"content","1200"),qe(M,"property","og:image:height"),qe(M,"content","600"),qe(y,"name","twitter:card"),qe(y,"content","summary_large_image"),qe(_,"name","twitter:site"),qe(_,"content","https://pudding.cool"),qe(b,"name","twitter:creator"),qe(b,"content","@puddingviz"),qe(S,"name","twitter:title"),qe(S,"content",s[0]),qe(w,"name","twitter:description"),qe(w,"content",s[1]),qe(T,"name","twitter:image:src"),qe(T,"content",L=s[2]+"/assets/social-twitter.jpg"),qe(O,"name","robots"),qe(O,"content","max-image-preview:large"),qe(N,"rel","canonical"),qe(N,"href",A=s[2]+"/")},m(X,G){jt(document.head,t),jt(document.head,n),jt(document.head,i),jt(document.head,r),jt(document.head,o),jt(document.head,l),jt(document.head,u),jt(document.head,h),jt(document.head,d),jt(document.head,m),jt(document.head,g),jt(document.head,v),jt(document.head,M),jt(document.head,y),jt(document.head,_),jt(document.head,b),jt(document.head,S),jt(document.head,w),jt(document.head,T),jt(document.head,O),jt(document.head,N);for(let V=0;V<ne.length;V+=1)ne[V]&&ne[V].m(document.head,null);jt(document.head,I)},p(X,[G]){if(G&1&&e!==(e=X[0])&&(document.title=e),G&2&&qe(t,"content",X[1]),G&8&&qe(i,"content",X[3]),G&1&&qe(r,"content",X[0]),G&4&&qe(l,"content",X[2]),G&2&&qe(u,"content",X[1]),G&4&&p!==(p=X[2]+"/assets/social-facebook.jpg")&&qe(m,"content",p),G&1&&qe(S,"content",X[0]),G&2&&qe(w,"content",X[1]),G&4&&L!==(L=X[2]+"/assets/social-twitter.jpg")&&qe(T,"content",L),G&4&&A!==(A=X[2]+"/")&&qe(N,"href",A),G&16){K=X[4];let V;for(V=0;V<K.length;V+=1){const fe=Ag(X,K,V);ne[V]?ne[V].p(fe,G):(ne[V]=Rg(fe),ne[V].c(),ne[V].m(I.parentNode,I))}for(;V<ne.length;V+=1)ne[V].d(1);ne.length=K.length}},i:No,o:No,d(X){Tt(t),Tt(n),Tt(i),Tt(r),Tt(o),Tt(l),Tt(u),Tt(h),Tt(d),Tt(m),Tt(g),Tt(v),Tt(M),Tt(y),Tt(_),Tt(b),Tt(S),Tt(w),Tt(T),Tt(O),Tt(N),S1(ne,X),Tt(I)}}}function P1(s,e,t){let{title:n="Title TK"}=e,{description:i="Description TK"}=e,{url:r="https://pudding.cool"}=e,{keywords:o=""}=e,{preloadFont:l=[]}=e;return s.$$set=u=>{"title"in u&&t(0,n=u.title),"description"in u&&t(1,i=u.description),"url"in u&&t(2,r=u.url),"keywords"in u&&t(3,o=u.keywords),"preloadFont"in u&&t(4,l=u.preloadFont)},[n,i,r,o,l]}class L1 extends Si{constructor(e){super(),bi(this,e,P1,C1,Ei,{title:0,description:1,url:2,keywords:3,preloadFont:4})}}var yr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},I1=typeof yr=="object"&&yr&&yr.Object===Object&&yr,U1=typeof self=="object"&&self&&self.Object===Object&&self;I1||U1||Function("return this")();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const hu="153",xs={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Ms={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},p0=0,Cf=1,m0=2,D1=3,N1=0,vd=1,fu=2,Vi=3,Tr=0,kn=1,Wi=2,O1=2,br=0,Cs=1,Pf=2,Lf=3,If=4,g0=5,bs=100,_0=101,v0=102,Uf=103,Df=104,y0=200,x0=201,M0=202,S0=203,yd=204,xd=205,b0=206,E0=207,w0=208,T0=209,A0=210,R0=0,C0=1,P0=2,au=3,L0=4,I0=5,U0=6,D0=7,nl=0,N0=1,O0=2,Yi=0,F0=1,B0=2,z0=3,Md=4,H0=5,du=300,Zr=301,Kr=302,Fo=303,Bo=304,Ga=306,zo=1e3,Cn=1001,Ho=1002,an=1003,ou=1004,F1=1004,Po=1005,B1=1005,on=1006,Sd=1007,z1=1007,Jr=1008,H1=1008,Er=1009,k0=1010,G0=1011,pu=1012,bd=1013,Mr=1014,Xi=1015,Ba=1016,Ed=1017,wd=1018,Xr=1020,V0=1021,si=1023,W0=1024,X0=1025,qr=1026,Is=1027,q0=1028,Td=1029,Y0=1030,Ad=1031,Rd=1033,Kc=33776,Jc=33777,$c=33778,Qc=33779,Nf=35840,Of=35841,Ff=35842,Bf=35843,Z0=36196,zf=37492,Hf=37496,kf=37808,Gf=37809,Vf=37810,Wf=37811,Xf=37812,qf=37813,Yf=37814,Zf=37815,Kf=37816,Jf=37817,$f=37818,Qf=37819,jf=37820,ed=37821,jc=36492,K0=36283,td=36284,nd=36285,id=36286,J0=2200,$0=2201,Q0=2202,ko=2300,Go=2301,eu=2302,ws=2400,Ts=2401,Vo=2402,mu=2500,Cd=2501,k1=0,G1=1,V1=2,Wo=3e3,wr=3001,j0=3200,ev=3201,Qr=0,tv=1,Yr="",ht="srgb",Di="srgb-linear",Pd="display-p3",W1=0,tu=7680,X1=7681,q1=7682,Y1=7683,Z1=34055,K1=34056,J1=5386,$1=512,Q1=513,j1=514,eT=515,tT=516,nT=517,iT=518,nv=519,iv=512,rv=513,sv=514,av=515,ov=516,lv=517,cv=518,uv=519,Xo=35044,rT=35048,sT=35040,aT=35045,oT=35049,lT=35041,cT=35046,uT=35050,hT=35042,fT="100",rd="300 es",lu=1035,qi=2e3,qo=2001;class $i{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,o=i.length;r<o;r++)i[r].call(this,e);e.target=null}}}const An=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Cg=1234567;const Ps=Math.PI/180,za=180/Math.PI;function oi(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(An[s&255]+An[s>>8&255]+An[s>>16&255]+An[s>>24&255]+"-"+An[e&255]+An[e>>8&255]+"-"+An[e>>16&15|64]+An[e>>24&255]+"-"+An[t&63|128]+An[t>>8&255]+"-"+An[t>>16&255]+An[t>>24&255]+An[n&255]+An[n>>8&255]+An[n>>16&255]+An[n>>24&255]).toLowerCase()}function tn(s,e,t){return Math.max(e,Math.min(t,s))}function Ld(s,e){return(s%e+e)%e}function dT(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}function pT(s,e,t){return s!==e?(t-s)/(e-s):0}function Lo(s,e,t){return(1-t)*s+t*e}function mT(s,e,t,n){return Lo(s,e,1-Math.exp(-t*n))}function gT(s,e=1){return e-Math.abs(Ld(s,e*2)-e)}function _T(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}function vT(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}function yT(s,e){return s+Math.floor(Math.random()*(e-s+1))}function xT(s,e){return s+Math.random()*(e-s)}function MT(s){return s*(.5-Math.random())}function ST(s){s!==void 0&&(Cg=s);let e=Cg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function bT(s){return s*Ps}function ET(s){return s*za}function sd(s){return(s&s-1)===0&&s!==0}function hv(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}function cu(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}function wT(s,e,t,n,i){const r=Math.cos,o=Math.sin,l=r(t/2),u=o(t/2),h=r((e+n)/2),d=o((e+n)/2),m=r((e-n)/2),p=o((e-n)/2),g=r((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":s.set(l*d,u*m,u*p,l*h);break;case"YZY":s.set(u*p,l*d,u*m,l*h);break;case"ZXZ":s.set(u*m,u*p,l*d,l*h);break;case"XZX":s.set(l*d,u*v,u*g,l*h);break;case"YXY":s.set(u*g,l*d,u*v,l*h);break;case"ZYZ":s.set(u*v,u*g,l*d,l*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ai(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return s/4294967295;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int32Array:return Math.max(s/2147483647,-1);case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}function gt(s,e){switch(e.constructor){case Float32Array:return s;case Uint32Array:return Math.round(s*4294967295);case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int32Array:return Math.round(s*2147483647);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}const TT={DEG2RAD:Ps,RAD2DEG:za,generateUUID:oi,clamp:tn,euclideanModulo:Ld,mapLinear:dT,inverseLerp:pT,lerp:Lo,damp:mT,pingpong:gT,smoothstep:_T,smootherstep:vT,randInt:yT,randFloat:xT,randFloatSpread:MT,seededRandom:ST,degToRad:bT,radToDeg:ET,isPowerOfTwo:sd,ceilPowerOfTwo:hv,floorPowerOfTwo:cu,setQuaternionFromProperEuler:wT,normalize:gt,denormalize:ai};class ce{constructor(e=0,t=0){ce.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(tn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,o=this.y-e.y;return this.x=r*n-o*i+e.x,this.y=r*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class mt{constructor(e,t,n,i,r,o,l,u,h){mt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,l,u,h)}set(e,t,n,i,r,o,l,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=l,d[3]=t,d[4]=r,d[5]=u,d[6]=n,d[7]=o,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],l=n[3],u=n[6],h=n[1],d=n[4],m=n[7],p=n[2],g=n[5],v=n[8],M=i[0],y=i[3],_=i[6],b=i[1],S=i[4],w=i[7],T=i[2],L=i[5],O=i[8];return r[0]=o*M+l*b+u*T,r[3]=o*y+l*S+u*L,r[6]=o*_+l*w+u*O,r[1]=h*M+d*b+m*T,r[4]=h*y+d*S+m*L,r[7]=h*_+d*w+m*O,r[2]=p*M+g*b+v*T,r[5]=p*y+g*S+v*L,r[8]=p*_+g*w+v*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],l=e[5],u=e[6],h=e[7],d=e[8];return t*o*d-t*l*h-n*r*d+n*l*u+i*r*h-i*o*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],l=e[5],u=e[6],h=e[7],d=e[8],m=d*o-l*h,p=l*u-d*r,g=h*r-o*u,v=t*m+n*p+i*g;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/v;return e[0]=m*M,e[1]=(i*h-d*n)*M,e[2]=(l*n-i*o)*M,e[3]=p*M,e[4]=(d*t-i*u)*M,e[5]=(i*r-l*t)*M,e[6]=g*M,e[7]=(n*u-h*t)*M,e[8]=(o*t-n*r)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,o,l){const u=Math.cos(r),h=Math.sin(r);return this.set(n*u,n*h,-n*(u*o+h*l)+o+e,-i*h,i*u,-i*(-h*o+u*l)+l+t,0,0,1),this}scale(e,t){return this.premultiply(Wh.makeScale(e,t)),this}rotate(e){return this.premultiply(Wh.makeRotation(-e)),this}translate(e,t){return this.premultiply(Wh.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const Wh=new mt;function fv(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}const AT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function La(s,e){return new AT[s](e)}function Yo(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}const Pg={};function Io(s){s in Pg||(Pg[s]=!0,console.warn(s))}function Na(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}function Xh(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}const RT=new mt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),CT=new mt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function PT(s){return s.convertSRGBToLinear().applyMatrix3(CT)}function LT(s){return s.applyMatrix3(RT).convertLinearToSRGB()}const IT={[Di]:s=>s,[ht]:s=>s.convertSRGBToLinear(),[Pd]:PT},UT={[Di]:s=>s,[ht]:s=>s.convertLinearToSRGB(),[Pd]:LT},ri={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(s){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!s},get workingColorSpace(){return Di},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.enabled===!1||e===t||!e||!t)return s;const n=IT[e],i=UT[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(s))},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}};let ca;class Id{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ca===void 0&&(ca=Yo("canvas")),ca.width=e.width,ca.height=e.height;const n=ca.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ca}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Yo("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let o=0;o<r.length;o++)r[o]=Na(r[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Na(t[n]/255)*255):t[n]=Na(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let DT=0;class As{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:DT++}),this.uuid=oi(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let o=0,l=i.length;o<l;o++)i[o].isDataTexture?r.push(qh(i[o].image)):r.push(qh(i[o]))}else r=qh(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function qh(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?Id.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let NT=0;class ln extends $i{constructor(e=ln.DEFAULT_IMAGE,t=ln.DEFAULT_MAPPING,n=Cn,i=Cn,r=on,o=Jr,l=si,u=Er,h=ln.DEFAULT_ANISOTROPY,d=Yr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:NT++}),this.uuid=oi(),this.name="",this.source=new As(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=o,this.anisotropy=h,this.format=l,this.internalFormat=null,this.type=u,this.offset=new ce(0,0),this.repeat=new ce(1,1),this.center=new ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new mt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(Io("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===wr?ht:Yr),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==du)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case zo:e.x=e.x-Math.floor(e.x);break;case Cn:e.x=e.x<0?0:1;break;case Ho:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case zo:e.y=e.y-Math.floor(e.y);break;case Cn:e.y=e.y<0?0:1;break;case Ho:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Io("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ht?wr:Wo}set encoding(e){Io("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===wr?ht:Yr}}ln.DEFAULT_IMAGE=null;ln.DEFAULT_MAPPING=du;ln.DEFAULT_ANISOTROPY=1;class Nt{constructor(e=0,t=0,n=0,i=1){Nt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*r,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*r,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*r,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,h=u[0],d=u[4],m=u[8],p=u[1],g=u[5],v=u[9],M=u[2],y=u[6],_=u[10];if(Math.abs(d-p)<.01&&Math.abs(m-M)<.01&&Math.abs(v-y)<.01){if(Math.abs(d+p)<.1&&Math.abs(m+M)<.1&&Math.abs(v+y)<.1&&Math.abs(h+g+_-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const S=(h+1)/2,w=(g+1)/2,T=(_+1)/2,L=(d+p)/4,O=(m+M)/4,N=(v+y)/4;return S>w&&S>T?S<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(S),i=L/n,r=O/n):w>T?w<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(w),n=L/i,r=N/i):T<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(T),n=O/r,i=N/r),this.set(n,i,r,t),this}let b=Math.sqrt((y-v)*(y-v)+(m-M)*(m-M)+(p-d)*(p-d));return Math.abs(b)<.001&&(b=1),this.x=(y-v)/b,this.y=(m-M)/b,this.z=(p-d)/b,this.w=Math.acos((h+g+_-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Ni extends $i{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Nt(0,0,e,t),this.scissorTest=!1,this.viewport=new Nt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(Io("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===wr?ht:Yr),this.texture=new ln(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:on,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new As(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class gu extends ln{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=an,this.minFilter=an,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class OT extends Ni{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new gu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Ud extends ln{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=an,this.minFilter=an,this.wrapR=Cn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class FT extends Ni{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Ud(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class BT extends Ni{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=r.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Pn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,o,l){let u=n[i+0],h=n[i+1],d=n[i+2],m=n[i+3];const p=r[o+0],g=r[o+1],v=r[o+2],M=r[o+3];if(l===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=m;return}if(l===1){e[t+0]=p,e[t+1]=g,e[t+2]=v,e[t+3]=M;return}if(m!==M||u!==p||h!==g||d!==v){let y=1-l;const _=u*p+h*g+d*v+m*M,b=_>=0?1:-1,S=1-_*_;if(S>Number.EPSILON){const T=Math.sqrt(S),L=Math.atan2(T,_*b);y=Math.sin(y*L)/T,l=Math.sin(l*L)/T}const w=l*b;if(u=u*y+p*w,h=h*y+g*w,d=d*y+v*w,m=m*y+M*w,y===1-l){const T=1/Math.sqrt(u*u+h*h+d*d+m*m);u*=T,h*=T,d*=T,m*=T}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,r,o){const l=n[i],u=n[i+1],h=n[i+2],d=n[i+3],m=r[o],p=r[o+1],g=r[o+2],v=r[o+3];return e[t]=l*v+d*m+u*g-h*p,e[t+1]=u*v+d*p+h*m-l*g,e[t+2]=h*v+d*g+l*p-u*m,e[t+3]=d*v-l*m-u*p-h*g,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,o=e._order,l=Math.cos,u=Math.sin,h=l(n/2),d=l(i/2),m=l(r/2),p=u(n/2),g=u(i/2),v=u(r/2);switch(o){case"XYZ":this._x=p*d*m+h*g*v,this._y=h*g*m-p*d*v,this._z=h*d*v+p*g*m,this._w=h*d*m-p*g*v;break;case"YXZ":this._x=p*d*m+h*g*v,this._y=h*g*m-p*d*v,this._z=h*d*v-p*g*m,this._w=h*d*m+p*g*v;break;case"ZXY":this._x=p*d*m-h*g*v,this._y=h*g*m+p*d*v,this._z=h*d*v+p*g*m,this._w=h*d*m-p*g*v;break;case"ZYX":this._x=p*d*m-h*g*v,this._y=h*g*m+p*d*v,this._z=h*d*v-p*g*m,this._w=h*d*m+p*g*v;break;case"YZX":this._x=p*d*m+h*g*v,this._y=h*g*m+p*d*v,this._z=h*d*v-p*g*m,this._w=h*d*m-p*g*v;break;case"XZY":this._x=p*d*m-h*g*v,this._y=h*g*m-p*d*v,this._z=h*d*v+p*g*m,this._w=h*d*m+p*g*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],o=t[1],l=t[5],u=t[9],h=t[2],d=t[6],m=t[10],p=n+l+m;if(p>0){const g=.5/Math.sqrt(p+1);this._w=.25/g,this._x=(d-u)*g,this._y=(r-h)*g,this._z=(o-i)*g}else if(n>l&&n>m){const g=2*Math.sqrt(1+n-l-m);this._w=(d-u)/g,this._x=.25*g,this._y=(i+o)/g,this._z=(r+h)/g}else if(l>m){const g=2*Math.sqrt(1+l-n-m);this._w=(r-h)/g,this._x=(i+o)/g,this._y=.25*g,this._z=(u+d)/g}else{const g=2*Math.sqrt(1+m-n-l);this._w=(o-i)/g,this._x=(r+h)/g,this._y=(u+d)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,o=e._w,l=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+o*l+i*h-r*u,this._y=i*d+o*u+r*l-n*h,this._z=r*d+o*h+n*u-i*l,this._w=o*d-n*l-i*u-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,o=this._w;let l=o*e._w+n*e._x+i*e._y+r*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=o,this._x=n,this._y=i,this._z=r,this;const u=1-l*l;if(u<=Number.EPSILON){const g=1-t;return this._w=g*o+t*this._w,this._x=g*n+t*this._x,this._y=g*i+t*this._y,this._z=g*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,l),m=Math.sin((1-t)*d)/h,p=Math.sin(t*d)/h;return this._w=o*m+this._w*p,this._x=n*m+this._x*p,this._y=i*m+this._y*p,this._z=r*m+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class U{constructor(e=0,t=0,n=0){U.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(Lg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Lg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,o=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*o,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*o,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,o=e.y,l=e.z,u=e.w,h=u*t+o*i-l*n,d=u*n+l*t-r*i,m=u*i+r*n-o*t,p=-r*t-o*n-l*i;return this.x=h*u+p*-r+d*-l-m*-o,this.y=d*u+p*-o+m*-r-h*-l,this.z=m*u+p*-l+h*-o-d*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,o=t.x,l=t.y,u=t.z;return this.x=i*u-r*l,this.y=r*o-n*u,this.z=n*l-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Yh.copy(this).projectOnVector(e),this.sub(Yh)}reflect(e){return this.sub(Yh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(tn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Yh=new U,Lg=new Pn;class Qi{constructor(e=new U(1/0,1/0,1/0),t=new U(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(fr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(fr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=fr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),ua.copy(e.boundingBox),ua.applyMatrix4(e.matrixWorld),this.union(ua);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const r=i.attributes.position;for(let o=0,l=r.count;o<l;o++)fr.fromBufferAttribute(r,o).applyMatrix4(e.matrixWorld),this.expandByPoint(fr)}else i.boundingBox===null&&i.computeBoundingBox(),ua.copy(i.boundingBox),ua.applyMatrix4(e.matrixWorld),this.union(ua)}const n=e.children;for(let i=0,r=n.length;i<r;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,fr),fr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(go),lc.subVectors(this.max,go),ha.subVectors(e.a,go),fa.subVectors(e.b,go),da.subVectors(e.c,go),zr.subVectors(fa,ha),Hr.subVectors(da,fa),hs.subVectors(ha,da);let t=[0,-zr.z,zr.y,0,-Hr.z,Hr.y,0,-hs.z,hs.y,zr.z,0,-zr.x,Hr.z,0,-Hr.x,hs.z,0,-hs.x,-zr.y,zr.x,0,-Hr.y,Hr.x,0,-hs.y,hs.x,0];return!Zh(t,ha,fa,da,lc)||(t=[1,0,0,0,1,0,0,0,1],!Zh(t,ha,fa,da,lc))?!1:(cc.crossVectors(zr,Hr),t=[cc.x,cc.y,cc.z],Zh(t,ha,fa,da,lc))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,fr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(fr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(hr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),hr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),hr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),hr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),hr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),hr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),hr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),hr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(hr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const hr=[new U,new U,new U,new U,new U,new U,new U,new U],fr=new U,ua=new Qi,ha=new U,fa=new U,da=new U,zr=new U,Hr=new U,hs=new U,go=new U,lc=new U,cc=new U,fs=new U;function Zh(s,e,t,n,i){for(let r=0,o=s.length-3;r<=o;r+=3){fs.fromArray(s,r);const l=i.x*Math.abs(fs.x)+i.y*Math.abs(fs.y)+i.z*Math.abs(fs.z),u=e.dot(fs),h=t.dot(fs),d=n.dot(fs);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>l)return!1}return!0}const zT=new Qi,_o=new U,Kh=new U;class Oi{constructor(e=new U,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):zT.setFromPoints(e).getCenter(n);let i=0;for(let r=0,o=e.length;r<o;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_o.subVectors(e,this.center);const t=_o.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(_o,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Kh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_o.copy(e.center).add(Kh)),this.expandByPoint(_o.copy(e.center).sub(Kh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const dr=new U,Jh=new U,uc=new U,kr=new U,$h=new U,hc=new U,Qh=new U;class Va{constructor(e=new U,t=new U(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,dr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=dr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(dr.copy(this.origin).addScaledVector(this.direction,t),dr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Jh.copy(e).add(t).multiplyScalar(.5),uc.copy(t).sub(e).normalize(),kr.copy(this.origin).sub(Jh);const r=e.distanceTo(t)*.5,o=-this.direction.dot(uc),l=kr.dot(this.direction),u=-kr.dot(uc),h=kr.lengthSq(),d=Math.abs(1-o*o);let m,p,g,v;if(d>0)if(m=o*u-l,p=o*l-u,v=r*d,m>=0)if(p>=-v)if(p<=v){const M=1/d;m*=M,p*=M,g=m*(m+o*p+2*l)+p*(o*m+p+2*u)+h}else p=r,m=Math.max(0,-(o*p+l)),g=-m*m+p*(p+2*u)+h;else p=-r,m=Math.max(0,-(o*p+l)),g=-m*m+p*(p+2*u)+h;else p<=-v?(m=Math.max(0,-(-o*r+l)),p=m>0?-r:Math.min(Math.max(-r,-u),r),g=-m*m+p*(p+2*u)+h):p<=v?(m=0,p=Math.min(Math.max(-r,-u),r),g=p*(p+2*u)+h):(m=Math.max(0,-(o*r+l)),p=m>0?r:Math.min(Math.max(-r,-u),r),g=-m*m+p*(p+2*u)+h);else p=o>0?-r:r,m=Math.max(0,-(o*p+l)),g=-m*m+p*(p+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(Jh).addScaledVector(uc,p),g}intersectSphere(e,t){dr.subVectors(e.center,this.origin);const n=dr.dot(this.direction),i=dr.dot(dr)-n*n,r=e.radius*e.radius;if(i>r)return null;const o=Math.sqrt(r-i),l=n-o,u=n+o;return u<0?null:l<0?this.at(u,t):this.at(l,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,o,l,u;const h=1/this.direction.x,d=1/this.direction.y,m=1/this.direction.z,p=this.origin;return h>=0?(n=(e.min.x-p.x)*h,i=(e.max.x-p.x)*h):(n=(e.max.x-p.x)*h,i=(e.min.x-p.x)*h),d>=0?(r=(e.min.y-p.y)*d,o=(e.max.y-p.y)*d):(r=(e.max.y-p.y)*d,o=(e.min.y-p.y)*d),n>o||r>i||((r>n||isNaN(n))&&(n=r),(o<i||isNaN(i))&&(i=o),m>=0?(l=(e.min.z-p.z)*m,u=(e.max.z-p.z)*m):(l=(e.max.z-p.z)*m,u=(e.min.z-p.z)*m),n>u||l>i)||((l>n||n!==n)&&(n=l),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,dr)!==null}intersectTriangle(e,t,n,i,r){$h.subVectors(t,e),hc.subVectors(n,e),Qh.crossVectors($h,hc);let o=this.direction.dot(Qh),l;if(o>0){if(i)return null;l=1}else if(o<0)l=-1,o=-o;else return null;kr.subVectors(this.origin,e);const u=l*this.direction.dot(hc.crossVectors(kr,hc));if(u<0)return null;const h=l*this.direction.dot($h.cross(kr));if(h<0||u+h>o)return null;const d=-l*kr.dot(Qh);return d<0?null:this.at(d/o,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ot{constructor(e,t,n,i,r,o,l,u,h,d,m,p,g,v,M,y){ot.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,r,o,l,u,h,d,m,p,g,v,M,y)}set(e,t,n,i,r,o,l,u,h,d,m,p,g,v,M,y){const _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=r,_[5]=o,_[9]=l,_[13]=u,_[2]=h,_[6]=d,_[10]=m,_[14]=p,_[3]=g,_[7]=v,_[11]=M,_[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/pa.setFromMatrixColumn(e,0).length(),r=1/pa.setFromMatrixColumn(e,1).length(),o=1/pa.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,o=Math.cos(n),l=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(r),m=Math.sin(r);if(e.order==="XYZ"){const p=o*d,g=o*m,v=l*d,M=l*m;t[0]=u*d,t[4]=-u*m,t[8]=h,t[1]=g+v*h,t[5]=p-M*h,t[9]=-l*u,t[2]=M-p*h,t[6]=v+g*h,t[10]=o*u}else if(e.order==="YXZ"){const p=u*d,g=u*m,v=h*d,M=h*m;t[0]=p+M*l,t[4]=v*l-g,t[8]=o*h,t[1]=o*m,t[5]=o*d,t[9]=-l,t[2]=g*l-v,t[6]=M+p*l,t[10]=o*u}else if(e.order==="ZXY"){const p=u*d,g=u*m,v=h*d,M=h*m;t[0]=p-M*l,t[4]=-o*m,t[8]=v+g*l,t[1]=g+v*l,t[5]=o*d,t[9]=M-p*l,t[2]=-o*h,t[6]=l,t[10]=o*u}else if(e.order==="ZYX"){const p=o*d,g=o*m,v=l*d,M=l*m;t[0]=u*d,t[4]=v*h-g,t[8]=p*h+M,t[1]=u*m,t[5]=M*h+p,t[9]=g*h-v,t[2]=-h,t[6]=l*u,t[10]=o*u}else if(e.order==="YZX"){const p=o*u,g=o*h,v=l*u,M=l*h;t[0]=u*d,t[4]=M-p*m,t[8]=v*m+g,t[1]=m,t[5]=o*d,t[9]=-l*d,t[2]=-h*d,t[6]=g*m+v,t[10]=p-M*m}else if(e.order==="XZY"){const p=o*u,g=o*h,v=l*u,M=l*h;t[0]=u*d,t[4]=-m,t[8]=h*d,t[1]=p*m+M,t[5]=o*d,t[9]=g*m-v,t[2]=v*m-g,t[6]=l*d,t[10]=M*m+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(HT,e,kT)}lookAt(e,t,n){const i=this.elements;return ni.subVectors(e,t),ni.lengthSq()===0&&(ni.z=1),ni.normalize(),Gr.crossVectors(n,ni),Gr.lengthSq()===0&&(Math.abs(n.z)===1?ni.x+=1e-4:ni.z+=1e-4,ni.normalize(),Gr.crossVectors(n,ni)),Gr.normalize(),fc.crossVectors(ni,Gr),i[0]=Gr.x,i[4]=fc.x,i[8]=ni.x,i[1]=Gr.y,i[5]=fc.y,i[9]=ni.y,i[2]=Gr.z,i[6]=fc.z,i[10]=ni.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,o=n[0],l=n[4],u=n[8],h=n[12],d=n[1],m=n[5],p=n[9],g=n[13],v=n[2],M=n[6],y=n[10],_=n[14],b=n[3],S=n[7],w=n[11],T=n[15],L=i[0],O=i[4],N=i[8],A=i[12],I=i[1],K=i[5],ne=i[9],X=i[13],G=i[2],V=i[6],fe=i[10],ie=i[14],le=i[3],me=i[7],_e=i[11],we=i[15];return r[0]=o*L+l*I+u*G+h*le,r[4]=o*O+l*K+u*V+h*me,r[8]=o*N+l*ne+u*fe+h*_e,r[12]=o*A+l*X+u*ie+h*we,r[1]=d*L+m*I+p*G+g*le,r[5]=d*O+m*K+p*V+g*me,r[9]=d*N+m*ne+p*fe+g*_e,r[13]=d*A+m*X+p*ie+g*we,r[2]=v*L+M*I+y*G+_*le,r[6]=v*O+M*K+y*V+_*me,r[10]=v*N+M*ne+y*fe+_*_e,r[14]=v*A+M*X+y*ie+_*we,r[3]=b*L+S*I+w*G+T*le,r[7]=b*O+S*K+w*V+T*me,r[11]=b*N+S*ne+w*fe+T*_e,r[15]=b*A+S*X+w*ie+T*we,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],o=e[1],l=e[5],u=e[9],h=e[13],d=e[2],m=e[6],p=e[10],g=e[14],v=e[3],M=e[7],y=e[11],_=e[15];return v*(+r*u*m-i*h*m-r*l*p+n*h*p+i*l*g-n*u*g)+M*(+t*u*g-t*h*p+r*o*p-i*o*g+i*h*d-r*u*d)+y*(+t*h*m-t*l*g-r*o*m+n*o*g+r*l*d-n*h*d)+_*(-i*l*d-t*u*m+t*l*p+i*o*m-n*o*p+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],o=e[4],l=e[5],u=e[6],h=e[7],d=e[8],m=e[9],p=e[10],g=e[11],v=e[12],M=e[13],y=e[14],_=e[15],b=m*y*h-M*p*h+M*u*g-l*y*g-m*u*_+l*p*_,S=v*p*h-d*y*h-v*u*g+o*y*g+d*u*_-o*p*_,w=d*M*h-v*m*h+v*l*g-o*M*g-d*l*_+o*m*_,T=v*m*u-d*M*u-v*l*p+o*M*p+d*l*y-o*m*y,L=t*b+n*S+i*w+r*T;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const O=1/L;return e[0]=b*O,e[1]=(M*p*r-m*y*r-M*i*g+n*y*g+m*i*_-n*p*_)*O,e[2]=(l*y*r-M*u*r+M*i*h-n*y*h-l*i*_+n*u*_)*O,e[3]=(m*u*r-l*p*r-m*i*h+n*p*h+l*i*g-n*u*g)*O,e[4]=S*O,e[5]=(d*y*r-v*p*r+v*i*g-t*y*g-d*i*_+t*p*_)*O,e[6]=(v*u*r-o*y*r-v*i*h+t*y*h+o*i*_-t*u*_)*O,e[7]=(o*p*r-d*u*r+d*i*h-t*p*h-o*i*g+t*u*g)*O,e[8]=w*O,e[9]=(v*m*r-d*M*r-v*n*g+t*M*g+d*n*_-t*m*_)*O,e[10]=(o*M*r-v*l*r+v*n*h-t*M*h-o*n*_+t*l*_)*O,e[11]=(d*l*r-o*m*r-d*n*h+t*m*h+o*n*g-t*l*g)*O,e[12]=T*O,e[13]=(d*M*i-v*m*i+v*n*p-t*M*p-d*n*y+t*m*y)*O,e[14]=(v*l*i-o*M*i-v*n*u+t*M*u+o*n*y-t*l*y)*O,e[15]=(o*m*i-d*l*i+d*n*u-t*m*u-o*n*p+t*l*p)*O,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,o=e.x,l=e.y,u=e.z,h=r*o,d=r*l;return this.set(h*o+n,h*l-i*u,h*u+i*l,0,h*l+i*u,d*l+n,d*u-i*o,0,h*u-i*l,d*u+i*o,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,o){return this.set(1,n,r,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,o=t._y,l=t._z,u=t._w,h=r+r,d=o+o,m=l+l,p=r*h,g=r*d,v=r*m,M=o*d,y=o*m,_=l*m,b=u*h,S=u*d,w=u*m,T=n.x,L=n.y,O=n.z;return i[0]=(1-(M+_))*T,i[1]=(g+w)*T,i[2]=(v-S)*T,i[3]=0,i[4]=(g-w)*L,i[5]=(1-(p+_))*L,i[6]=(y+b)*L,i[7]=0,i[8]=(v+S)*O,i[9]=(y-b)*O,i[10]=(1-(p+M))*O,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=pa.set(i[0],i[1],i[2]).length();const o=pa.set(i[4],i[5],i[6]).length(),l=pa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],Ci.copy(this);const h=1/r,d=1/o,m=1/l;return Ci.elements[0]*=h,Ci.elements[1]*=h,Ci.elements[2]*=h,Ci.elements[4]*=d,Ci.elements[5]*=d,Ci.elements[6]*=d,Ci.elements[8]*=m,Ci.elements[9]*=m,Ci.elements[10]*=m,t.setFromRotationMatrix(Ci),n.x=r,n.y=o,n.z=l,this}makePerspective(e,t,n,i,r,o,l=qi){const u=this.elements,h=2*r/(t-e),d=2*r/(n-i),m=(t+e)/(t-e),p=(n+i)/(n-i);let g,v;if(l===qi)g=-(o+r)/(o-r),v=-2*o*r/(o-r);else if(l===qo)g=-o/(o-r),v=-o*r/(o-r);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);return u[0]=h,u[4]=0,u[8]=m,u[12]=0,u[1]=0,u[5]=d,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=g,u[14]=v,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,r,o,l=qi){const u=this.elements,h=1/(t-e),d=1/(n-i),m=1/(o-r),p=(t+e)*h,g=(n+i)*d;let v,M;if(l===qi)v=(o+r)*m,M=-2*m;else if(l===qo)v=r*m,M=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-p,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-g,u[2]=0,u[6]=0,u[10]=M,u[14]=-v,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const pa=new U,Ci=new ot,HT=new U(0,0,0),kT=new U(1,1,1),Gr=new U,fc=new U,ni=new U,Ig=new ot,Ug=new Pn;class il{constructor(e=0,t=0,n=0,i=il.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],o=i[4],l=i[8],u=i[1],h=i[5],d=i[9],m=i[2],p=i[6],g=i[10];switch(t){case"XYZ":this._y=Math.asin(tn(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-d,g),this._z=Math.atan2(-o,r)):(this._x=Math.atan2(p,h),this._z=0);break;case"YXZ":this._x=Math.asin(-tn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(l,g),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-m,r),this._z=0);break;case"ZXY":this._x=Math.asin(tn(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-m,g),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-tn(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(p,g),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(tn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-m,r)):(this._x=0,this._y=Math.atan2(l,g));break;case"XZY":this._z=Math.asin(-tn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,h),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-d,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Ig.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Ig,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Ug.setFromEuler(this),this.setFromQuaternion(Ug,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}il.DEFAULT_ORDER="XYZ";class _u{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let GT=0;const Dg=new U,ma=new Pn,pr=new ot,dc=new U,vo=new U,VT=new U,WT=new Pn,Ng=new U(1,0,0),Og=new U(0,1,0),Fg=new U(0,0,1),XT={type:"added"},Bg={type:"removed"};class Ct extends $i{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:GT++}),this.uuid=oi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ct.DEFAULT_UP.clone();const e=new U,t=new il,n=new Pn,i=new U(1,1,1);function r(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ot},normalMatrix:{value:new mt}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=Ct.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new _u,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return ma.setFromAxisAngle(e,t),this.quaternion.multiply(ma),this}rotateOnWorldAxis(e,t){return ma.setFromAxisAngle(e,t),this.quaternion.premultiply(ma),this}rotateX(e){return this.rotateOnAxis(Ng,e)}rotateY(e){return this.rotateOnAxis(Og,e)}rotateZ(e){return this.rotateOnAxis(Fg,e)}translateOnAxis(e,t){return Dg.copy(e).applyQuaternion(this.quaternion),this.position.add(Dg.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ng,e)}translateY(e){return this.translateOnAxis(Og,e)}translateZ(e){return this.translateOnAxis(Fg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(pr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?dc.copy(e):dc.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),vo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?pr.lookAt(vo,dc,this.up):pr.lookAt(dc,vo,this.up),this.quaternion.setFromRotationMatrix(pr),i&&(pr.extractRotation(i.matrixWorld),ma.setFromRotationMatrix(pr),this.quaternion.premultiply(ma.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(XT)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Bg)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Bg)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),pr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),pr.multiply(e.parent.matrixWorld)),e.applyMatrix4(pr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectsByProperty(e,t);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(vo,e,VT),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(vo,WT,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,o=i.length;r<o;r++){const l=i[r];l.matrixWorldAutoUpdate===!0&&l.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(l,u){return l[u.uuid]===void 0&&(l[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const u=l.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const m=u[h];r(e.shapes,m)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let u=0,h=this.material.length;u<h;u++)l.push(r(e.materials,this.material[u]));i.material=l}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let l=0;l<this.children.length;l++)i.children.push(this.children[l].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let l=0;l<this.animations.length;l++){const u=this.animations[l];i.animations.push(r(e.animations,u))}}if(t){const l=o(e.geometries),u=o(e.materials),h=o(e.textures),d=o(e.images),m=o(e.shapes),p=o(e.skeletons),g=o(e.animations),v=o(e.nodes);l.length>0&&(n.geometries=l),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),m.length>0&&(n.shapes=m),p.length>0&&(n.skeletons=p),g.length>0&&(n.animations=g),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(l){const u=[];for(const h in l){const d=l[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ct.DEFAULT_UP=new U(0,1,0);Ct.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Pi=new U,mr=new U,jh=new U,gr=new U,ga=new U,_a=new U,zg=new U,ef=new U,tf=new U,nf=new U;let pc=!1;class Kn{constructor(e=new U,t=new U,n=new U){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Pi.subVectors(e,t),i.cross(Pi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){Pi.subVectors(i,t),mr.subVectors(n,t),jh.subVectors(e,t);const o=Pi.dot(Pi),l=Pi.dot(mr),u=Pi.dot(jh),h=mr.dot(mr),d=mr.dot(jh),m=o*h-l*l;if(m===0)return r.set(-2,-1,-1);const p=1/m,g=(h*u-l*d)*p,v=(o*d-l*u)*p;return r.set(1-g-v,v,g)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,gr),gr.x>=0&&gr.y>=0&&gr.x+gr.y<=1}static getUV(e,t,n,i,r,o,l,u){return pc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),pc=!0),this.getInterpolation(e,t,n,i,r,o,l,u)}static getInterpolation(e,t,n,i,r,o,l,u){return this.getBarycoord(e,t,n,i,gr),u.setScalar(0),u.addScaledVector(r,gr.x),u.addScaledVector(o,gr.y),u.addScaledVector(l,gr.z),u}static isFrontFacing(e,t,n,i){return Pi.subVectors(n,t),mr.subVectors(e,t),Pi.cross(mr).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Pi.subVectors(this.c,this.b),mr.subVectors(this.a,this.b),Pi.cross(mr).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Kn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Kn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return pc===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),pc=!0),Kn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return Kn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return Kn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Kn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let o,l;ga.subVectors(i,n),_a.subVectors(r,n),ef.subVectors(e,n);const u=ga.dot(ef),h=_a.dot(ef);if(u<=0&&h<=0)return t.copy(n);tf.subVectors(e,i);const d=ga.dot(tf),m=_a.dot(tf);if(d>=0&&m<=d)return t.copy(i);const p=u*m-d*h;if(p<=0&&u>=0&&d<=0)return o=u/(u-d),t.copy(n).addScaledVector(ga,o);nf.subVectors(e,r);const g=ga.dot(nf),v=_a.dot(nf);if(v>=0&&g<=v)return t.copy(r);const M=g*h-u*v;if(M<=0&&h>=0&&v<=0)return l=h/(h-v),t.copy(n).addScaledVector(_a,l);const y=d*v-g*m;if(y<=0&&m-d>=0&&g-v>=0)return zg.subVectors(r,i),l=(m-d)/(m-d+(g-v)),t.copy(i).addScaledVector(zg,l);const _=1/(y+M+p);return o=M*_,l=p*_,t.copy(n).addScaledVector(ga,o).addScaledVector(_a,l)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let qT=0;class Ln extends $i{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:qT++}),this.uuid=oi(),this.name="",this.type="Material",this.blending=Cs,this.side=Tr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=yd,this.blendDst=xd,this.blendEquation=bs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=au,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=nv,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=tu,this.stencilZFail=tu,this.stencilZPass=tu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Cs&&(n.blending=this.blending),this.side!==Tr&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(r){const o=[];for(const l in r){const u=r[l];delete u.metadata,o.push(u)}return o}if(t){const r=i(e.textures),o=i(e.images);r.length>0&&(n.textures=r),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const dv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Li={h:0,s:0,l:0},mc={h:0,s:0,l:0};function rf(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}class Oe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ht){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ri.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=ri.workingColorSpace){return this.r=e,this.g=t,this.b=n,ri.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=ri.workingColorSpace){if(e=Ld(e,1),t=tn(t,0,1),n=tn(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,o=2*n-r;this.r=rf(o,r,e+1/3),this.g=rf(o,r,e),this.b=rf(o,r,e-1/3)}return ri.toWorkingColorSpace(this,i),this}setStyle(e,t=ht){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const o=i[1],l=i[2];switch(o){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],o=r.length;if(o===3)return this.setRGB(parseInt(r.charAt(0),16)/15,parseInt(r.charAt(1),16)/15,parseInt(r.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(r,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ht){const n=dv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Na(e.r),this.g=Na(e.g),this.b=Na(e.b),this}copyLinearToSRGB(e){return this.r=Xh(e.r),this.g=Xh(e.g),this.b=Xh(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ht){return ri.fromWorkingColorSpace(Rn.copy(this),e),Math.round(tn(Rn.r*255,0,255))*65536+Math.round(tn(Rn.g*255,0,255))*256+Math.round(tn(Rn.b*255,0,255))}getHexString(e=ht){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ri.workingColorSpace){ri.fromWorkingColorSpace(Rn.copy(this),t);const n=Rn.r,i=Rn.g,r=Rn.b,o=Math.max(n,i,r),l=Math.min(n,i,r);let u,h;const d=(l+o)/2;if(l===o)u=0,h=0;else{const m=o-l;switch(h=d<=.5?m/(o+l):m/(2-o-l),o){case n:u=(i-r)/m+(i<r?6:0);break;case i:u=(r-n)/m+2;break;case r:u=(n-i)/m+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=ri.workingColorSpace){return ri.fromWorkingColorSpace(Rn.copy(this),t),e.r=Rn.r,e.g=Rn.g,e.b=Rn.b,e}getStyle(e=ht){ri.fromWorkingColorSpace(Rn.copy(this),e);const t=Rn.r,n=Rn.g,i=Rn.b;return e!==ht?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Li),Li.h+=e,Li.s+=t,Li.l+=n,this.setHSL(Li.h,Li.s,Li.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Li),e.getHSL(mc);const n=Lo(Li.h,mc.h,t),i=Lo(Li.s,mc.s,t),r=Lo(Li.l,mc.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Rn=new Oe;Oe.NAMES=dv;class jr extends Ln{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=nl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const xr=YT();function YT(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const r=new Uint32Array(2048),o=new Uint32Array(64),l=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,r[u]=h|d}for(let u=1024;u<2048;++u)r[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)o[u]=u<<23;o[31]=1199570944,o[32]=2147483648;for(let u=33;u<63;++u)o[u]=2147483648+(u-32<<23);o[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(l[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:o,offsetTable:l}}function Zn(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=tn(s,-65504,65504),xr.floatView[0]=s;const e=xr.uint32View[0],t=e>>23&511;return xr.baseTable[t]+((e&8388607)>>xr.shiftTable[t])}function To(s){const e=s>>10;return xr.uint32View[0]=xr.mantissaTable[xr.offsetTable[e]+(s&1023)]+xr.exponentTable[e],xr.floatView[0]}const ZT={toHalfFloat:Zn,fromHalfFloat:To},un=new U,gc=new ce;class zt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=Xo,this.updateRange={offset:0,count:-1},this.gpuType=Xi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)gc.fromBufferAttribute(this,t),gc.applyMatrix3(e),this.setXY(t,gc.x,gc.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix3(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyMatrix4(e),this.setXYZ(t,un.x,un.y,un.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.applyNormalMatrix(e),this.setXYZ(t,un.x,un.y,un.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)un.fromBufferAttribute(this,t),un.transformDirection(e),this.setXYZ(t,un.x,un.y,un.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),r=gt(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Xo&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class KT extends zt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class JT extends zt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class $T extends zt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class QT extends zt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Dd extends zt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class jT extends zt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Nd extends zt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class eA extends zt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=To(this.array[e*this.itemSize]);return this.normalized&&(t=ai(t,this.array)),t}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize]=Zn(t),this}getY(e){let t=To(this.array[e*this.itemSize+1]);return this.normalized&&(t=ai(t,this.array)),t}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+1]=Zn(t),this}getZ(e){let t=To(this.array[e*this.itemSize+2]);return this.normalized&&(t=ai(t,this.array)),t}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+2]=Zn(t),this}getW(e){let t=To(this.array[e*this.itemSize+3]);return this.normalized&&(t=ai(t,this.array)),t}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.array[e*this.itemSize+3]=Zn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this.array[e+2]=Zn(i),this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),r=gt(r,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this.array[e+2]=Zn(i),this.array[e+3]=Zn(r),this}}class We extends zt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class tA extends zt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let nA=0;const yi=new ot,sf=new Ct,va=new U,ii=new Qi,yo=new Qi,vn=new U;class yt extends $i{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:nA++}),this.uuid=oi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(fv(e)?Nd:Dd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new mt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return yi.makeRotationFromQuaternion(e),this.applyMatrix4(yi),this}rotateX(e){return yi.makeRotationX(e),this.applyMatrix4(yi),this}rotateY(e){return yi.makeRotationY(e),this.applyMatrix4(yi),this}rotateZ(e){return yi.makeRotationZ(e),this.applyMatrix4(yi),this}translate(e,t,n){return yi.makeTranslation(e,t,n),this.applyMatrix4(yi),this}scale(e,t,n){return yi.makeScale(e,t,n),this.applyMatrix4(yi),this}lookAt(e){return sf.lookAt(e),sf.updateMatrix(),this.applyMatrix4(sf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(va).negate(),this.translate(va.x,va.y,va.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new We(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Qi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new U(-1/0,-1/0,-1/0),new U(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];ii.setFromBufferAttribute(r),this.morphTargetsRelative?(vn.addVectors(this.boundingBox.min,ii.min),this.boundingBox.expandByPoint(vn),vn.addVectors(this.boundingBox.max,ii.max),this.boundingBox.expandByPoint(vn)):(this.boundingBox.expandByPoint(ii.min),this.boundingBox.expandByPoint(ii.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Oi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new U,1/0);return}if(e){const n=this.boundingSphere.center;if(ii.setFromBufferAttribute(e),t)for(let r=0,o=t.length;r<o;r++){const l=t[r];yo.setFromBufferAttribute(l),this.morphTargetsRelative?(vn.addVectors(ii.min,yo.min),ii.expandByPoint(vn),vn.addVectors(ii.max,yo.max),ii.expandByPoint(vn)):(ii.expandByPoint(yo.min),ii.expandByPoint(yo.max))}ii.getCenter(n);let i=0;for(let r=0,o=e.count;r<o;r++)vn.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(vn));if(t)for(let r=0,o=t.length;r<o;r++){const l=t[r],u=this.morphTargetsRelative;for(let h=0,d=l.count;h<d;h++)vn.fromBufferAttribute(l,h),u&&(va.fromBufferAttribute(e,h),vn.add(va)),i=Math.max(i,n.distanceToSquared(vn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,o=t.uv.array,l=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new zt(new Float32Array(4*l),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let I=0;I<l;I++)h[I]=new U,d[I]=new U;const m=new U,p=new U,g=new U,v=new ce,M=new ce,y=new ce,_=new U,b=new U;function S(I,K,ne){m.fromArray(i,I*3),p.fromArray(i,K*3),g.fromArray(i,ne*3),v.fromArray(o,I*2),M.fromArray(o,K*2),y.fromArray(o,ne*2),p.sub(m),g.sub(m),M.sub(v),y.sub(v);const X=1/(M.x*y.y-y.x*M.y);isFinite(X)&&(_.copy(p).multiplyScalar(y.y).addScaledVector(g,-M.y).multiplyScalar(X),b.copy(g).multiplyScalar(M.x).addScaledVector(p,-y.x).multiplyScalar(X),h[I].add(_),h[K].add(_),h[ne].add(_),d[I].add(b),d[K].add(b),d[ne].add(b))}let w=this.groups;w.length===0&&(w=[{start:0,count:n.length}]);for(let I=0,K=w.length;I<K;++I){const ne=w[I],X=ne.start,G=ne.count;for(let V=X,fe=X+G;V<fe;V+=3)S(n[V+0],n[V+1],n[V+2])}const T=new U,L=new U,O=new U,N=new U;function A(I){O.fromArray(r,I*3),N.copy(O);const K=h[I];T.copy(K),T.sub(O.multiplyScalar(O.dot(K))).normalize(),L.crossVectors(N,K);const X=L.dot(d[I])<0?-1:1;u[I*4]=T.x,u[I*4+1]=T.y,u[I*4+2]=T.z,u[I*4+3]=X}for(let I=0,K=w.length;I<K;++I){const ne=w[I],X=ne.start,G=ne.count;for(let V=X,fe=X+G;V<fe;V+=3)A(n[V+0]),A(n[V+1]),A(n[V+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new zt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let p=0,g=n.count;p<g;p++)n.setXYZ(p,0,0,0);const i=new U,r=new U,o=new U,l=new U,u=new U,h=new U,d=new U,m=new U;if(e)for(let p=0,g=e.count;p<g;p+=3){const v=e.getX(p+0),M=e.getX(p+1),y=e.getX(p+2);i.fromBufferAttribute(t,v),r.fromBufferAttribute(t,M),o.fromBufferAttribute(t,y),d.subVectors(o,r),m.subVectors(i,r),d.cross(m),l.fromBufferAttribute(n,v),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,y),l.add(d),u.add(d),h.add(d),n.setXYZ(v,l.x,l.y,l.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let p=0,g=t.count;p<g;p+=3)i.fromBufferAttribute(t,p+0),r.fromBufferAttribute(t,p+1),o.fromBufferAttribute(t,p+2),d.subVectors(o,r),m.subVectors(i,r),d.cross(m),n.setXYZ(p+0,d.x,d.y,d.z),n.setXYZ(p+1,d.x,d.y,d.z),n.setXYZ(p+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)vn.fromBufferAttribute(e,t),vn.normalize(),e.setXYZ(t,vn.x,vn.y,vn.z)}toNonIndexed(){function e(l,u){const h=l.array,d=l.itemSize,m=l.normalized,p=new h.constructor(u.length*d);let g=0,v=0;for(let M=0,y=u.length;M<y;M++){l.isInterleavedBufferAttribute?g=u[M]*l.data.stride+l.offset:g=u[M]*d;for(let _=0;_<d;_++)p[v++]=h[g++]}return new zt(p,d,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new yt,n=this.index.array,i=this.attributes;for(const l in i){const u=i[l],h=e(u,n);t.setAttribute(l,h)}const r=this.morphAttributes;for(const l in r){const u=[],h=r[l];for(let d=0,m=h.length;d<m;d++){const p=h[d],g=e(p,n);u.push(g)}t.morphAttributes[l]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let l=0,u=o.length;l<u;l++){const h=o[l];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let m=0,p=h.length;m<p;m++){const g=h[m];d.push(g.toJSON(e.data))}d.length>0&&(i[u]=d,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const l=this.boundingSphere;return l!==null&&(e.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const r=e.morphAttributes;for(const h in r){const d=[],m=r[h];for(let p=0,g=m.length;p<g;p++)d.push(m[p].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,d=o.length;h<d;h++){const m=o[h];this.addGroup(m.start,m.count,m.materialIndex)}const l=e.boundingBox;l!==null&&(this.boundingBox=l.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Hg=new ot,ds=new Va,_c=new Oi,kg=new U,ya=new U,xa=new U,Ma=new U,af=new U,vc=new U,yc=new ce,xc=new ce,Mc=new ce,Gg=new U,Vg=new U,Wg=new U,Sc=new U,bc=new U;class xn extends Ct{constructor(e=new yt,t=new jr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const l=this.morphTargetInfluences;if(r&&l){vc.set(0,0,0);for(let u=0,h=r.length;u<h;u++){const d=l[u],m=r[u];d!==0&&(af.fromBufferAttribute(m,e),o?vc.addScaledVector(af,d):vc.addScaledVector(af.sub(t),d))}t.add(vc)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),_c.copy(n.boundingSphere),_c.applyMatrix4(r),ds.copy(e.ray).recast(e.near),!(_c.containsPoint(ds.origin)===!1&&(ds.intersectSphere(_c,kg)===null||ds.origin.distanceToSquared(kg)>(e.far-e.near)**2))&&(Hg.copy(r).invert(),ds.copy(e.ray).applyMatrix4(Hg),!(n.boundingBox!==null&&ds.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,ds)))}_computeIntersections(e,t,n){let i;const r=this.geometry,o=this.material,l=r.index,u=r.attributes.position,h=r.attributes.uv,d=r.attributes.uv1,m=r.attributes.normal,p=r.groups,g=r.drawRange;if(l!==null)if(Array.isArray(o))for(let v=0,M=p.length;v<M;v++){const y=p[v],_=o[y.materialIndex],b=Math.max(y.start,g.start),S=Math.min(l.count,Math.min(y.start+y.count,g.start+g.count));for(let w=b,T=S;w<T;w+=3){const L=l.getX(w),O=l.getX(w+1),N=l.getX(w+2);i=Ec(this,_,e,n,h,d,m,L,O,N),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),M=Math.min(l.count,g.start+g.count);for(let y=v,_=M;y<_;y+=3){const b=l.getX(y),S=l.getX(y+1),w=l.getX(y+2);i=Ec(this,o,e,n,h,d,m,b,S,w),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(o))for(let v=0,M=p.length;v<M;v++){const y=p[v],_=o[y.materialIndex],b=Math.max(y.start,g.start),S=Math.min(u.count,Math.min(y.start+y.count,g.start+g.count));for(let w=b,T=S;w<T;w+=3){const L=w,O=w+1,N=w+2;i=Ec(this,_,e,n,h,d,m,L,O,N),i&&(i.faceIndex=Math.floor(w/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,g.start),M=Math.min(u.count,g.start+g.count);for(let y=v,_=M;y<_;y+=3){const b=y,S=y+1,w=y+2;i=Ec(this,o,e,n,h,d,m,b,S,w),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}}}function iA(s,e,t,n,i,r,o,l){let u;if(e.side===kn?u=n.intersectTriangle(o,r,i,!0,l):u=n.intersectTriangle(i,r,o,e.side===Tr,l),u===null)return null;bc.copy(l),bc.applyMatrix4(s.matrixWorld);const h=t.ray.origin.distanceTo(bc);return h<t.near||h>t.far?null:{distance:h,point:bc.clone(),object:s}}function Ec(s,e,t,n,i,r,o,l,u,h){s.getVertexPosition(l,ya),s.getVertexPosition(u,xa),s.getVertexPosition(h,Ma);const d=iA(s,e,t,n,ya,xa,Ma,Sc);if(d){i&&(yc.fromBufferAttribute(i,l),xc.fromBufferAttribute(i,u),Mc.fromBufferAttribute(i,h),d.uv=Kn.getInterpolation(Sc,ya,xa,Ma,yc,xc,Mc,new ce)),r&&(yc.fromBufferAttribute(r,l),xc.fromBufferAttribute(r,u),Mc.fromBufferAttribute(r,h),d.uv1=Kn.getInterpolation(Sc,ya,xa,Ma,yc,xc,Mc,new ce),d.uv2=d.uv1),o&&(Gg.fromBufferAttribute(o,l),Vg.fromBufferAttribute(o,u),Wg.fromBufferAttribute(o,h),d.normal=Kn.getInterpolation(Sc,ya,xa,Ma,Gg,Vg,Wg,new U),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const m={a:l,b:u,c:h,normal:new U,materialIndex:0};Kn.getNormal(ya,xa,Ma,m.normal),d.face=m}return d}class es extends yt{constructor(e=1,t=1,n=1,i=1,r=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:o};const l=this;i=Math.floor(i),r=Math.floor(r),o=Math.floor(o);const u=[],h=[],d=[],m=[];let p=0,g=0;v("z","y","x",-1,-1,n,t,e,o,r,0),v("z","y","x",1,-1,n,t,-e,o,r,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,r,4),v("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new We(h,3)),this.setAttribute("normal",new We(d,3)),this.setAttribute("uv",new We(m,2));function v(M,y,_,b,S,w,T,L,O,N,A){const I=w/O,K=T/N,ne=w/2,X=T/2,G=L/2,V=O+1,fe=N+1;let ie=0,le=0;const me=new U;for(let _e=0;_e<fe;_e++){const we=_e*K-X;for(let j=0;j<V;j++){const ve=j*I-ne;me[M]=ve*b,me[y]=we*S,me[_]=G,h.push(me.x,me.y,me.z),me[M]=0,me[y]=0,me[_]=L>0?1:-1,d.push(me.x,me.y,me.z),m.push(j/O),m.push(1-_e/N),ie+=1}}for(let _e=0;_e<N;_e++)for(let we=0;we<O;we++){const j=p+we+V*_e,ve=p+we+V*(_e+1),Me=p+(we+1)+V*(_e+1),Re=p+(we+1)+V*_e;u.push(j,ve,Re),u.push(ve,Me,Re),le+=6}l.addGroup(g,le,A),g+=le,p+=ie}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new es(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Ha(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function On(s){const e={};for(let t=0;t<s.length;t++){const n=Ha(s[t]);for(const i in n)e[i]=n[i]}return e}function rA(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}function pv(s){return s.getRenderTarget()===null?s.outputColorSpace:Di}const mv={clone:Ha,merge:On};var sA=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,aA=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ji extends Ln{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=sA,this.fragmentShader=aA,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Ha(e.uniforms),this.uniformsGroups=rA(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class rl extends Ct{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot,this.coordinateSystem=qi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class yn extends rl{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=za*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ps*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return za*2*Math.atan(Math.tan(Ps*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ps*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,h=o.fullHeight;r+=o.offsetX*i/u,t-=o.offsetY*n/h,i*=o.width/u,n*=o.height/h}const l=this.filmOffset;l!==0&&(r+=e*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Sa=-90,ba=1;class gv extends Ct{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new yn(Sa,ba,e,t);i.layers=this.layers,this.add(i);const r=new yn(Sa,ba,e,t);r.layers=this.layers,this.add(r);const o=new yn(Sa,ba,e,t);o.layers=this.layers,this.add(o);const l=new yn(Sa,ba,e,t);l.layers=this.layers,this.add(l);const u=new yn(Sa,ba,e,t);u.layers=this.layers,this.add(u);const h=new yn(Sa,ba,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,r,o,l,u]=t;for(const h of t)this.remove(h);if(e===qi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),r.up.set(0,0,-1),r.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===qo)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),r.up.set(0,0,1),r.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,r,o,l,u,h]=this.children,d=e.getRenderTarget(),m=e.toneMapping,p=e.xr.enabled;e.toneMapping=Yi,e.xr.enabled=!1;const g=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,l),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=g,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=m,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class sl extends ln{constructor(e,t,n,i,r,o,l,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:Zr,super(e,t,n,i,r,o,l,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class _v extends Ni{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(Io("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===wr?ht:Yr),this.texture=new sl(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:on}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new es(5,5,5),r=new Ji({name:"CubemapFromEquirect",uniforms:Ha(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:kn,blending:br});r.uniforms.tEquirect.value=t;const o=new xn(i,r),l=t.minFilter;return t.minFilter===Jr&&(t.minFilter=on),new gv(1,10,this).update(e,o),t.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(r)}}const of=new U,oA=new U,lA=new mt;class Wr{constructor(e=new U(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=of.subVectors(n,t).cross(oA.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(of),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||lA.getNormalMatrix(e),i=this.coplanarPoint(of).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ps=new Oi,wc=new U;class vu{constructor(e=new Wr,t=new Wr,n=new Wr,i=new Wr,r=new Wr,o=new Wr){this.planes=[e,t,n,i,r,o]}set(e,t,n,i,r,o){const l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(i),l[4].copy(r),l[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=qi){const n=this.planes,i=e.elements,r=i[0],o=i[1],l=i[2],u=i[3],h=i[4],d=i[5],m=i[6],p=i[7],g=i[8],v=i[9],M=i[10],y=i[11],_=i[12],b=i[13],S=i[14],w=i[15];if(n[0].setComponents(u-r,p-h,y-g,w-_).normalize(),n[1].setComponents(u+r,p+h,y+g,w+_).normalize(),n[2].setComponents(u+o,p+d,y+v,w+b).normalize(),n[3].setComponents(u-o,p-d,y-v,w-b).normalize(),n[4].setComponents(u-l,p-m,y-M,w-S).normalize(),t===qi)n[5].setComponents(u+l,p+m,y+M,w+S).normalize();else if(t===qo)n[5].setComponents(l,m,M,S).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),ps.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),ps.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(ps)}intersectsSprite(e){return ps.center.set(0,0,0),ps.radius=.7071067811865476,ps.applyMatrix4(e.matrixWorld),this.intersectsSphere(ps)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(wc.x=i.normal.x>0?e.max.x:e.min.x,wc.y=i.normal.y>0?e.max.y:e.min.y,wc.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(wc)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function vv(){let s=null,e=!1,t=null,n=null;function i(r,o){t(r,o),n=s.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}function cA(s,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const m=h.array,p=h.usage,g=s.createBuffer();s.bindBuffer(d,g),s.bufferData(d,m,p),h.onUploadCallback();let v;if(m instanceof Float32Array)v=s.FLOAT;else if(m instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=s.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=s.UNSIGNED_SHORT;else if(m instanceof Int16Array)v=s.SHORT;else if(m instanceof Uint32Array)v=s.UNSIGNED_INT;else if(m instanceof Int32Array)v=s.INT;else if(m instanceof Int8Array)v=s.BYTE;else if(m instanceof Uint8Array)v=s.UNSIGNED_BYTE;else if(m instanceof Uint8ClampedArray)v=s.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:g,type:v,bytesPerElement:m.BYTES_PER_ELEMENT,version:h.version}}function r(h,d,m){const p=d.array,g=d.updateRange;s.bindBuffer(m,h),g.count===-1?s.bufferSubData(m,0,p):(t?s.bufferSubData(m,g.offset*p.BYTES_PER_ELEMENT,p,g.offset,g.count):s.bufferSubData(m,g.offset*p.BYTES_PER_ELEMENT,p.subarray(g.offset,g.offset+g.count)),g.count=-1),d.onUploadCallback()}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function l(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(s.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const p=n.get(h);(!p||p.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const m=n.get(h);m===void 0?n.set(h,i(h,d)):m.version<h.version&&(r(m.buffer,h,d),m.version=h.version)}return{get:o,remove:l,update:u}}class Wa extends yt{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,o=t/2,l=Math.floor(n),u=Math.floor(i),h=l+1,d=u+1,m=e/l,p=t/u,g=[],v=[],M=[],y=[];for(let _=0;_<d;_++){const b=_*p-o;for(let S=0;S<h;S++){const w=S*m-r;v.push(w,-b,0),M.push(0,0,1),y.push(S/l),y.push(1-_/u)}}for(let _=0;_<u;_++)for(let b=0;b<l;b++){const S=b+h*_,w=b+h*(_+1),T=b+1+h*(_+1),L=b+1+h*_;g.push(S,w,L),g.push(w,T,L)}this.setIndex(g),this.setAttribute("position",new We(v,3)),this.setAttribute("normal",new We(M,3)),this.setAttribute("uv",new We(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wa(e.width,e.height,e.widthSegments,e.heightSegments)}}var uA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,hA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,fA=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,dA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,pA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,mA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,gA="vec3 transformed = vec3( position );",_A=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,vA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,yA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,xA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,MA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,SA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,bA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,EA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,wA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,TA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,AA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,RA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,CA=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,PA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,LA=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,IA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,UA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,DA=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,NA=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,OA="gl_FragColor = linearToOutputTexel( gl_FragColor );",FA=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,BA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,zA=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,HA=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,kA=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,GA=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,VA=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,WA=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,XA=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,qA=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,YA=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,ZA=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,KA=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,JA=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,$A=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,QA=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,jA=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,eR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,tR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,nR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,iR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,rR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,sR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,aR=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,oR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,lR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,cR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,uR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,hR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,fR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,dR=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,pR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,mR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,gR=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,_R=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,vR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,yR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,xR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,MR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,SR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,bR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,ER=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,wR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,TR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,AR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,RR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,CR=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,PR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,LR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,IR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,UR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,DR=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,NR=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,OR=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,FR=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,BR=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,zR=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,HR=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,kR=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,GR=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,VR=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,WR=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,XR=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,qR=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,YR=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,ZR=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,KR=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,JR=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,$R=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,QR=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,jR=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,eC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,tC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,nC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,iC=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,rC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const sC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,aC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,oC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,lC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,uC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,hC=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,fC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,dC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,pC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,mC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,gC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,_C=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,vC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,yC=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,xC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,MC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,SC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,EC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,wC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,TC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,AC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,RC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,CC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,PC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,LC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,IC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,UC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,DC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,NC=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,OC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,FC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,BC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,pt={alphamap_fragment:uA,alphamap_pars_fragment:hA,alphatest_fragment:fA,alphatest_pars_fragment:dA,aomap_fragment:pA,aomap_pars_fragment:mA,begin_vertex:gA,beginnormal_vertex:_A,bsdfs:vA,iridescence_fragment:yA,bumpmap_pars_fragment:xA,clipping_planes_fragment:MA,clipping_planes_pars_fragment:SA,clipping_planes_pars_vertex:bA,clipping_planes_vertex:EA,color_fragment:wA,color_pars_fragment:TA,color_pars_vertex:AA,color_vertex:RA,common:CA,cube_uv_reflection_fragment:PA,defaultnormal_vertex:LA,displacementmap_pars_vertex:IA,displacementmap_vertex:UA,emissivemap_fragment:DA,emissivemap_pars_fragment:NA,encodings_fragment:OA,encodings_pars_fragment:FA,envmap_fragment:BA,envmap_common_pars_fragment:zA,envmap_pars_fragment:HA,envmap_pars_vertex:kA,envmap_physical_pars_fragment:jA,envmap_vertex:GA,fog_vertex:VA,fog_pars_vertex:WA,fog_fragment:XA,fog_pars_fragment:qA,gradientmap_pars_fragment:YA,lightmap_fragment:ZA,lightmap_pars_fragment:KA,lights_lambert_fragment:JA,lights_lambert_pars_fragment:$A,lights_pars_begin:QA,lights_toon_fragment:eR,lights_toon_pars_fragment:tR,lights_phong_fragment:nR,lights_phong_pars_fragment:iR,lights_physical_fragment:rR,lights_physical_pars_fragment:sR,lights_fragment_begin:aR,lights_fragment_maps:oR,lights_fragment_end:lR,logdepthbuf_fragment:cR,logdepthbuf_pars_fragment:uR,logdepthbuf_pars_vertex:hR,logdepthbuf_vertex:fR,map_fragment:dR,map_pars_fragment:pR,map_particle_fragment:mR,map_particle_pars_fragment:gR,metalnessmap_fragment:_R,metalnessmap_pars_fragment:vR,morphcolor_vertex:yR,morphnormal_vertex:xR,morphtarget_pars_vertex:MR,morphtarget_vertex:SR,normal_fragment_begin:bR,normal_fragment_maps:ER,normal_pars_fragment:wR,normal_pars_vertex:TR,normal_vertex:AR,normalmap_pars_fragment:RR,clearcoat_normal_fragment_begin:CR,clearcoat_normal_fragment_maps:PR,clearcoat_pars_fragment:LR,iridescence_pars_fragment:IR,output_fragment:UR,packing:DR,premultiplied_alpha_fragment:NR,project_vertex:OR,dithering_fragment:FR,dithering_pars_fragment:BR,roughnessmap_fragment:zR,roughnessmap_pars_fragment:HR,shadowmap_pars_fragment:kR,shadowmap_pars_vertex:GR,shadowmap_vertex:VR,shadowmask_pars_fragment:WR,skinbase_vertex:XR,skinning_pars_vertex:qR,skinning_vertex:YR,skinnormal_vertex:ZR,specularmap_fragment:KR,specularmap_pars_fragment:JR,tonemapping_fragment:$R,tonemapping_pars_fragment:QR,transmission_fragment:jR,transmission_pars_fragment:eC,uv_pars_fragment:tC,uv_pars_vertex:nC,uv_vertex:iC,worldpos_vertex:rC,background_vert:sC,background_frag:aC,backgroundCube_vert:oC,backgroundCube_frag:lC,cube_vert:cC,cube_frag:uC,depth_vert:hC,depth_frag:fC,distanceRGBA_vert:dC,distanceRGBA_frag:pC,equirect_vert:mC,equirect_frag:gC,linedashed_vert:_C,linedashed_frag:vC,meshbasic_vert:yC,meshbasic_frag:xC,meshlambert_vert:MC,meshlambert_frag:SC,meshmatcap_vert:bC,meshmatcap_frag:EC,meshnormal_vert:wC,meshnormal_frag:TC,meshphong_vert:AC,meshphong_frag:RC,meshphysical_vert:CC,meshphysical_frag:PC,meshtoon_vert:LC,meshtoon_frag:IC,points_vert:UC,points_frag:DC,shadow_vert:NC,shadow_frag:OC,sprite_vert:FC,sprite_frag:BC},Ae={common:{diffuse:{value:new Oe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new mt},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new mt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new mt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new mt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new mt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new mt},normalScale:{value:new ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new mt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new mt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new mt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new mt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Oe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Oe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0},uvTransform:{value:new mt}},sprite:{diffuse:{value:new Oe(16777215)},opacity:{value:1},center:{value:new ce(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new mt},alphaMap:{value:null},alphaMapTransform:{value:new mt},alphaTest:{value:0}}},Ii={basic:{uniforms:On([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.fog]),vertexShader:pt.meshbasic_vert,fragmentShader:pt.meshbasic_frag},lambert:{uniforms:On([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)}}]),vertexShader:pt.meshlambert_vert,fragmentShader:pt.meshlambert_frag},phong:{uniforms:On([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)},specular:{value:new Oe(1118481)},shininess:{value:30}}]),vertexShader:pt.meshphong_vert,fragmentShader:pt.meshphong_frag},standard:{uniforms:On([Ae.common,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.roughnessmap,Ae.metalnessmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:pt.meshphysical_vert,fragmentShader:pt.meshphysical_frag},toon:{uniforms:On([Ae.common,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.gradientmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)}}]),vertexShader:pt.meshtoon_vert,fragmentShader:pt.meshtoon_frag},matcap:{uniforms:On([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,{matcap:{value:null}}]),vertexShader:pt.meshmatcap_vert,fragmentShader:pt.meshmatcap_frag},points:{uniforms:On([Ae.points,Ae.fog]),vertexShader:pt.points_vert,fragmentShader:pt.points_frag},dashed:{uniforms:On([Ae.common,Ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:pt.linedashed_vert,fragmentShader:pt.linedashed_frag},depth:{uniforms:On([Ae.common,Ae.displacementmap]),vertexShader:pt.depth_vert,fragmentShader:pt.depth_frag},normal:{uniforms:On([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,{opacity:{value:1}}]),vertexShader:pt.meshnormal_vert,fragmentShader:pt.meshnormal_frag},sprite:{uniforms:On([Ae.sprite,Ae.fog]),vertexShader:pt.sprite_vert,fragmentShader:pt.sprite_frag},background:{uniforms:{uvTransform:{value:new mt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:pt.background_vert,fragmentShader:pt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:pt.backgroundCube_vert,fragmentShader:pt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:pt.cube_vert,fragmentShader:pt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:pt.equirect_vert,fragmentShader:pt.equirect_frag},distanceRGBA:{uniforms:On([Ae.common,Ae.displacementmap,{referencePosition:{value:new U},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:pt.distanceRGBA_vert,fragmentShader:pt.distanceRGBA_frag},shadow:{uniforms:On([Ae.lights,Ae.fog,{color:{value:new Oe(0)},opacity:{value:1}}]),vertexShader:pt.shadow_vert,fragmentShader:pt.shadow_frag}};Ii.physical={uniforms:On([Ii.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new mt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new mt},clearcoatNormalScale:{value:new ce(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new mt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new mt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new mt},sheen:{value:0},sheenColor:{value:new Oe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new mt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new mt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new mt},transmissionSamplerSize:{value:new ce},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new mt},attenuationDistance:{value:0},attenuationColor:{value:new Oe(0)},specularColor:{value:new Oe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new mt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new mt},anisotropyVector:{value:new ce},anisotropyMap:{value:null},anisotropyMapTransform:{value:new mt}}]),vertexShader:pt.meshphysical_vert,fragmentShader:pt.meshphysical_frag};const Tc={r:0,b:0,g:0};function zC(s,e,t,n,i,r,o){const l=new Oe(0);let u=r===!0?0:1,h,d,m=null,p=0,g=null;function v(y,_){let b=!1,S=_.isScene===!0?_.background:null;switch(S&&S.isTexture&&(S=(_.backgroundBlurriness>0?t:e).get(S)),S===null?M(l,u):S&&S.isColor&&(M(S,1),b=!0),s.xr.getEnvironmentBlendMode()){case"opaque":b=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,o),b=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,o),b=!0;break}(s.autoClear||b)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),S&&(S.isCubeTexture||S.mapping===Ga)?(d===void 0&&(d=new xn(new es(1,1,1),new Ji({name:"BackgroundCubeMaterial",uniforms:Ha(Ii.backgroundCube.uniforms),vertexShader:Ii.backgroundCube.vertexShader,fragmentShader:Ii.backgroundCube.fragmentShader,side:kn,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(L,O,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=S,d.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,d.material.toneMapped=S.colorSpace!==ht,(m!==S||p!==S.version||g!==s.toneMapping)&&(d.material.needsUpdate=!0,m=S,p=S.version,g=s.toneMapping),d.layers.enableAll(),y.unshift(d,d.geometry,d.material,0,0,null)):S&&S.isTexture&&(h===void 0&&(h=new xn(new Wa(2,2),new Ji({name:"BackgroundMaterial",uniforms:Ha(Ii.background.uniforms),vertexShader:Ii.background.vertexShader,fragmentShader:Ii.background.fragmentShader,side:Tr,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=S,h.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,h.material.toneMapped=S.colorSpace!==ht,S.matrixAutoUpdate===!0&&S.updateMatrix(),h.material.uniforms.uvTransform.value.copy(S.matrix),(m!==S||p!==S.version||g!==s.toneMapping)&&(h.material.needsUpdate=!0,m=S,p=S.version,g=s.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null))}function M(y,_){y.getRGB(Tc,pv(s)),n.buffers.color.setClear(Tc.r,Tc.g,Tc.b,_,o)}return{getClearColor:function(){return l},setClearColor:function(y,_=1){l.set(y),u=_,M(l,u)},getClearAlpha:function(){return u},setClearAlpha:function(y){u=y,M(l,u)},render:v}}function HC(s,e,t,n){const i=s.getParameter(s.MAX_VERTEX_ATTRIBS),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||r!==null,l={},u=y(null);let h=u,d=!1;function m(G,V,fe,ie,le){let me=!1;if(o){const _e=M(ie,fe,V);h!==_e&&(h=_e,g(h.object)),me=_(G,ie,fe,le),me&&b(G,ie,fe,le)}else{const _e=V.wireframe===!0;(h.geometry!==ie.id||h.program!==fe.id||h.wireframe!==_e)&&(h.geometry=ie.id,h.program=fe.id,h.wireframe=_e,me=!0)}le!==null&&t.update(le,s.ELEMENT_ARRAY_BUFFER),(me||d)&&(d=!1,N(G,V,fe,ie),le!==null&&s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,t.get(le).buffer))}function p(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}function g(G){return n.isWebGL2?s.bindVertexArray(G):r.bindVertexArrayOES(G)}function v(G){return n.isWebGL2?s.deleteVertexArray(G):r.deleteVertexArrayOES(G)}function M(G,V,fe){const ie=fe.wireframe===!0;let le=l[G.id];le===void 0&&(le={},l[G.id]=le);let me=le[V.id];me===void 0&&(me={},le[V.id]=me);let _e=me[ie];return _e===void 0&&(_e=y(p()),me[ie]=_e),_e}function y(G){const V=[],fe=[],ie=[];for(let le=0;le<i;le++)V[le]=0,fe[le]=0,ie[le]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:V,enabledAttributes:fe,attributeDivisors:ie,object:G,attributes:{},index:null}}function _(G,V,fe,ie){const le=h.attributes,me=V.attributes;let _e=0;const we=fe.getAttributes();for(const j in we)if(we[j].location>=0){const Me=le[j];let Re=me[j];if(Re===void 0&&(j==="instanceMatrix"&&G.instanceMatrix&&(Re=G.instanceMatrix),j==="instanceColor"&&G.instanceColor&&(Re=G.instanceColor)),Me===void 0||Me.attribute!==Re||Re&&Me.data!==Re.data)return!0;_e++}return h.attributesNum!==_e||h.index!==ie}function b(G,V,fe,ie){const le={},me=V.attributes;let _e=0;const we=fe.getAttributes();for(const j in we)if(we[j].location>=0){let Me=me[j];Me===void 0&&(j==="instanceMatrix"&&G.instanceMatrix&&(Me=G.instanceMatrix),j==="instanceColor"&&G.instanceColor&&(Me=G.instanceColor));const Re={};Re.attribute=Me,Me&&Me.data&&(Re.data=Me.data),le[j]=Re,_e++}h.attributes=le,h.attributesNum=_e,h.index=ie}function S(){const G=h.newAttributes;for(let V=0,fe=G.length;V<fe;V++)G[V]=0}function w(G){T(G,0)}function T(G,V){const fe=h.newAttributes,ie=h.enabledAttributes,le=h.attributeDivisors;fe[G]=1,ie[G]===0&&(s.enableVertexAttribArray(G),ie[G]=1),le[G]!==V&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](G,V),le[G]=V)}function L(){const G=h.newAttributes,V=h.enabledAttributes;for(let fe=0,ie=V.length;fe<ie;fe++)V[fe]!==G[fe]&&(s.disableVertexAttribArray(fe),V[fe]=0)}function O(G,V,fe,ie,le,me,_e){_e===!0?s.vertexAttribIPointer(G,V,fe,le,me):s.vertexAttribPointer(G,V,fe,ie,le,me)}function N(G,V,fe,ie){if(n.isWebGL2===!1&&(G.isInstancedMesh||ie.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;S();const le=ie.attributes,me=fe.getAttributes(),_e=V.defaultAttributeValues;for(const we in me){const j=me[we];if(j.location>=0){let ve=le[we];if(ve===void 0&&(we==="instanceMatrix"&&G.instanceMatrix&&(ve=G.instanceMatrix),we==="instanceColor"&&G.instanceColor&&(ve=G.instanceColor)),ve!==void 0){const Me=ve.normalized,Re=ve.itemSize,Ie=t.get(ve);if(Ie===void 0)continue;const Ge=Ie.buffer,et=Ie.type,Ze=Ie.bytesPerElement,At=n.isWebGL2===!0&&(et===s.INT||et===s.UNSIGNED_INT||ve.gpuType===bd);if(ve.isInterleavedBufferAttribute){const Je=ve.data,H=Je.stride,Ee=ve.offset;if(Je.isInstancedInterleavedBuffer){for(let re=0;re<j.locationSize;re++)T(j.location+re,Je.meshPerAttribute);G.isInstancedMesh!==!0&&ie._maxInstanceCount===void 0&&(ie._maxInstanceCount=Je.meshPerAttribute*Je.count)}else for(let re=0;re<j.locationSize;re++)w(j.location+re);s.bindBuffer(s.ARRAY_BUFFER,Ge);for(let re=0;re<j.locationSize;re++)O(j.location+re,Re/j.locationSize,et,Me,H*Ze,(Ee+Re/j.locationSize*re)*Ze,At)}else{if(ve.isInstancedBufferAttribute){for(let Je=0;Je<j.locationSize;Je++)T(j.location+Je,ve.meshPerAttribute);G.isInstancedMesh!==!0&&ie._maxInstanceCount===void 0&&(ie._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let Je=0;Je<j.locationSize;Je++)w(j.location+Je);s.bindBuffer(s.ARRAY_BUFFER,Ge);for(let Je=0;Je<j.locationSize;Je++)O(j.location+Je,Re/j.locationSize,et,Me,Re*Ze,Re/j.locationSize*Je*Ze,At)}}else if(_e!==void 0){const Me=_e[we];if(Me!==void 0)switch(Me.length){case 2:s.vertexAttrib2fv(j.location,Me);break;case 3:s.vertexAttrib3fv(j.location,Me);break;case 4:s.vertexAttrib4fv(j.location,Me);break;default:s.vertexAttrib1fv(j.location,Me)}}}}L()}function A(){ne();for(const G in l){const V=l[G];for(const fe in V){const ie=V[fe];for(const le in ie)v(ie[le].object),delete ie[le];delete V[fe]}delete l[G]}}function I(G){if(l[G.id]===void 0)return;const V=l[G.id];for(const fe in V){const ie=V[fe];for(const le in ie)v(ie[le].object),delete ie[le];delete V[fe]}delete l[G.id]}function K(G){for(const V in l){const fe=l[V];if(fe[G.id]===void 0)continue;const ie=fe[G.id];for(const le in ie)v(ie[le].object),delete ie[le];delete fe[G.id]}}function ne(){X(),d=!0,h!==u&&(h=u,g(h.object))}function X(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:m,reset:ne,resetDefaultState:X,dispose:A,releaseStatesOfGeometry:I,releaseStatesOfProgram:K,initAttributes:S,enableAttribute:w,disableUnusedAttributes:L}}function kC(s,e,t,n){const i=n.isWebGL2;let r;function o(h){r=h}function l(h,d){s.drawArrays(r,h,d),t.update(d,r,1)}function u(h,d,m){if(m===0)return;let p,g;if(i)p=s,g="drawArraysInstanced";else if(p=e.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[g](r,h,d,m),t.update(d,r,m)}this.setMode=o,this.render=l,this.renderInstances=u}function GC(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const O=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(O.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(O){if(O==="highp"){if(s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.HIGH_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.HIGH_FLOAT).precision>0)return"highp";O="mediump"}return O==="mediump"&&s.getShaderPrecisionFormat(s.VERTEX_SHADER,s.MEDIUM_FLOAT).precision>0&&s.getShaderPrecisionFormat(s.FRAGMENT_SHADER,s.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&s.constructor.name==="WebGL2RenderingContext";let l=t.precision!==void 0?t.precision:"highp";const u=r(l);u!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",u,"instead."),l=u);const h=o||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,m=s.getParameter(s.MAX_TEXTURE_IMAGE_UNITS),p=s.getParameter(s.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=s.getParameter(s.MAX_TEXTURE_SIZE),v=s.getParameter(s.MAX_CUBE_MAP_TEXTURE_SIZE),M=s.getParameter(s.MAX_VERTEX_ATTRIBS),y=s.getParameter(s.MAX_VERTEX_UNIFORM_VECTORS),_=s.getParameter(s.MAX_VARYING_VECTORS),b=s.getParameter(s.MAX_FRAGMENT_UNIFORM_VECTORS),S=p>0,w=o||e.has("OES_texture_float"),T=S&&w,L=o?s.getParameter(s.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:l,logarithmicDepthBuffer:d,maxTextures:m,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:v,maxAttributes:M,maxVertexUniforms:y,maxVaryings:_,maxFragmentUniforms:b,vertexTextures:S,floatFragmentTextures:w,floatVertexTextures:T,maxSamples:L}}function VC(s){const e=this;let t=null,n=0,i=!1,r=!1;const o=new Wr,l=new mt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,p){const g=m.length!==0||p||n!==0||i;return i=p,n=m.length,g},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1},this.setGlobalState=function(m,p){t=d(m,p,0)},this.setState=function(m,p,g){const v=m.clippingPlanes,M=m.clipIntersection,y=m.clipShadows,_=s.get(m);if(!i||v===null||v.length===0||r&&!y)r?d(null):h();else{const b=r?0:n,S=b*4;let w=_.clippingState||null;u.value=w,w=d(v,p,S,g);for(let T=0;T!==S;++T)w[T]=t[T];_.clippingState=w,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=b}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(m,p,g,v){const M=m!==null?m.length:0;let y=null;if(M!==0){if(y=u.value,v!==!0||y===null){const _=g+M*4,b=p.matrixWorldInverse;l.getNormalMatrix(b),(y===null||y.length<_)&&(y=new Float32Array(_));for(let S=0,w=g;S!==M;++S,w+=4)o.copy(m[S]).applyMatrix4(b,l),o.normal.toArray(y,w),y[w+3]=o.constant}u.value=y,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,y}}function WC(s){let e=new WeakMap;function t(o,l){return l===Fo?o.mapping=Zr:l===Bo&&(o.mapping=Kr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const l=o.mapping;if(l===Fo||l===Bo)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const h=new _v(u.height/2);return h.fromEquirectangularTexture(s,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const l=o.target;l.removeEventListener("dispose",i);const u=e.get(l);u!==void 0&&(e.delete(l),u.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class yu extends rl{constructor(e=-1,t=1,n=1,i=-1,r=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,o=n+e,l=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,o=r+h*this.view.width,l-=d*this.view.offsetY,u=l-d*this.view.height}this.projectionMatrix.makeOrthographic(r,o,l,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ia=4,Xg=[.125,.215,.35,.446,.526,.582],Es=20,lf=new yu,qg=new Oe;let cf=null;const Ss=(1+Math.sqrt(5))/2,Ea=1/Ss,Yg=[new U(1,1,1),new U(-1,1,1),new U(1,1,-1),new U(-1,1,-1),new U(0,Ss,Ea),new U(0,Ss,-Ea),new U(Ea,0,Ss),new U(-Ea,0,Ss),new U(Ss,Ea,0),new U(-Ss,Ea,0)];class ad{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){cf=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Jg(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Kg(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(cf),e.scissorTest=!1,Ac(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Zr||e.mapping===Kr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),cf=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:on,minFilter:on,generateMipmaps:!1,type:Ba,format:si,colorSpace:Di,depthBuffer:!1},i=Zg(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Zg(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=XC(r)),this._blurMaterial=qC(r,e,t)}return i}_compileMaterial(e){const t=new xn(this._lodPlanes[0],e);this._renderer.compile(t,lf)}_sceneToCubeUV(e,t,n,i){const l=new yn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,m=d.autoClear,p=d.toneMapping;d.getClearColor(qg),d.toneMapping=Yi,d.autoClear=!1;const g=new jr({name:"PMREM.Background",side:kn,depthWrite:!1,depthTest:!1}),v=new xn(new es,g);let M=!1;const y=e.background;y?y.isColor&&(g.color.copy(y),e.background=null,M=!0):(g.color.copy(qg),M=!0);for(let _=0;_<6;_++){const b=_%3;b===0?(l.up.set(0,u[_],0),l.lookAt(h[_],0,0)):b===1?(l.up.set(0,0,u[_]),l.lookAt(0,h[_],0)):(l.up.set(0,u[_],0),l.lookAt(0,0,h[_]));const S=this._cubeSize;Ac(i,b*S,_>2?S:0,S,S),d.setRenderTarget(i),M&&d.render(v,l),d.render(e,l)}v.geometry.dispose(),v.material.dispose(),d.toneMapping=p,d.autoClear=m,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Zr||e.mapping===Kr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Jg()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Kg());const r=i?this._cubemapMaterial:this._equirectMaterial,o=new xn(this._lodPlanes[0],r),l=r.uniforms;l.envMap.value=e;const u=this._cubeSize;Ac(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,lf)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=Yg[(i-1)%Yg.length];this._blur(e,i-1,i,r,o)}t.autoClear=n}_blur(e,t,n,i,r){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",r),this._halfBlur(o,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,o,l){const u=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,m=new xn(this._lodPlanes[i],h),p=h.uniforms,g=this._sizeLods[n]-1,v=isFinite(r)?Math.PI/(2*g):2*Math.PI/(2*Es-1),M=r/v,y=isFinite(r)?1+Math.floor(d*M):Es;y>Es&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Es}`);const _=[];let b=0;for(let O=0;O<Es;++O){const N=O/M,A=Math.exp(-N*N/2);_.push(A),O===0?b+=A:O<y&&(b+=2*A)}for(let O=0;O<_.length;O++)_[O]=_[O]/b;p.envMap.value=e.texture,p.samples.value=y,p.weights.value=_,p.latitudinal.value=o==="latitudinal",l&&(p.poleAxis.value=l);const{_lodMax:S}=this;p.dTheta.value=v,p.mipInt.value=S-n;const w=this._sizeLods[i],T=3*w*(i>S-Ia?i-S+Ia:0),L=4*(this._cubeSize-w);Ac(t,T,L,3*w,2*w),u.setRenderTarget(t),u.render(m,lf)}}function XC(s){const e=[],t=[],n=[];let i=s;const r=s-Ia+1+Xg.length;for(let o=0;o<r;o++){const l=Math.pow(2,i);t.push(l);let u=1/l;o>s-Ia?u=Xg[o-s+Ia-1]:o===0&&(u=0),n.push(u);const h=1/(l-2),d=-h,m=1+h,p=[d,d,m,d,m,m,d,d,m,m,d,m],g=6,v=6,M=3,y=2,_=1,b=new Float32Array(M*v*g),S=new Float32Array(y*v*g),w=new Float32Array(_*v*g);for(let L=0;L<g;L++){const O=L%3*2/3-1,N=L>2?0:-1,A=[O,N,0,O+2/3,N,0,O+2/3,N+1,0,O,N,0,O+2/3,N+1,0,O,N+1,0];b.set(A,M*v*L),S.set(p,y*v*L);const I=[L,L,L,L,L,L];w.set(I,_*v*L)}const T=new yt;T.setAttribute("position",new zt(b,M)),T.setAttribute("uv",new zt(S,y)),T.setAttribute("faceIndex",new zt(w,_)),e.push(T),i>Ia&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Zg(s,e,t){const n=new Ni(s,e,t);return n.texture.mapping=Ga,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ac(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}function qC(s,e,t){const n=new Float32Array(Es),i=new U(0,1,0);return new Ji({name:"SphericalGaussianBlur",defines:{n:Es,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Od(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:br,depthTest:!1,depthWrite:!1})}function Kg(){return new Ji({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Od(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:br,depthTest:!1,depthWrite:!1})}function Jg(){return new Ji({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Od(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:br,depthTest:!1,depthWrite:!1})}function Od(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function YC(s){let e=new WeakMap,t=null;function n(l){if(l&&l.isTexture){const u=l.mapping,h=u===Fo||u===Bo,d=u===Zr||u===Kr;if(h||d)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let m=e.get(l);return t===null&&(t=new ad(s)),m=h?t.fromEquirectangular(l,m):t.fromCubemap(l,m),e.set(l,m),m.texture}else{if(e.has(l))return e.get(l).texture;{const m=l.image;if(h&&m&&m.height>0||d&&m&&i(m)){t===null&&(t=new ad(s));const p=h?t.fromEquirectangular(l):t.fromCubemap(l);return e.set(l,p),l.addEventListener("dispose",r),p.texture}else return null}}}return l}function i(l){let u=0;const h=6;for(let d=0;d<h;d++)l[d]!==void 0&&u++;return u===h}function r(l){const u=l.target;u.removeEventListener("dispose",r);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function ZC(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function KC(s,e,t,n){const i={},r=new WeakMap;function o(m){const p=m.target;p.index!==null&&e.remove(p.index);for(const v in p.attributes)e.remove(p.attributes[v]);for(const v in p.morphAttributes){const M=p.morphAttributes[v];for(let y=0,_=M.length;y<_;y++)e.remove(M[y])}p.removeEventListener("dispose",o),delete i[p.id];const g=r.get(p);g&&(e.remove(g),r.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function l(m,p){return i[p.id]===!0||(p.addEventListener("dispose",o),i[p.id]=!0,t.memory.geometries++),p}function u(m){const p=m.attributes;for(const v in p)e.update(p[v],s.ARRAY_BUFFER);const g=m.morphAttributes;for(const v in g){const M=g[v];for(let y=0,_=M.length;y<_;y++)e.update(M[y],s.ARRAY_BUFFER)}}function h(m){const p=[],g=m.index,v=m.attributes.position;let M=0;if(g!==null){const b=g.array;M=g.version;for(let S=0,w=b.length;S<w;S+=3){const T=b[S+0],L=b[S+1],O=b[S+2];p.push(T,L,L,O,O,T)}}else{const b=v.array;M=v.version;for(let S=0,w=b.length/3-1;S<w;S+=3){const T=S+0,L=S+1,O=S+2;p.push(T,L,L,O,O,T)}}const y=new(fv(p)?Nd:Dd)(p,1);y.version=M;const _=r.get(m);_&&e.remove(_),r.set(m,y)}function d(m){const p=r.get(m);if(p){const g=m.index;g!==null&&p.version<g.version&&h(m)}else h(m);return r.get(m)}return{get:l,update:u,getWireframeAttribute:d}}function JC(s,e,t,n){const i=n.isWebGL2;let r;function o(p){r=p}let l,u;function h(p){l=p.type,u=p.bytesPerElement}function d(p,g){s.drawElements(r,g,l,p*u),t.update(g,r,1)}function m(p,g,v){if(v===0)return;let M,y;if(i)M=s,y="drawElementsInstanced";else if(M=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",M===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}M[y](r,g,l,p*u,v),t.update(g,r,v)}this.setMode=o,this.setIndex=h,this.render=d,this.renderInstances=m}function $C(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,o,l){switch(t.calls++,o){case s.TRIANGLES:t.triangles+=l*(r/3);break;case s.LINES:t.lines+=l*(r/2);break;case s.LINE_STRIP:t.lines+=l*(r-1);break;case s.LINE_LOOP:t.lines+=l*r;break;case s.POINTS:t.points+=l*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function QC(s,e){return s[0]-e[0]}function jC(s,e){return Math.abs(e[1])-Math.abs(s[1])}function eP(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,o=new Nt,l=[];for(let h=0;h<8;h++)l[h]=[h,0];function u(h,d,m){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const g=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,v=g!==void 0?g.length:0;let M=r.get(d);if(M===void 0||M.count!==v){let G=function(){ne.dispose(),r.delete(d),d.removeEventListener("dispose",G)};M!==void 0&&M.texture.dispose();const b=d.morphAttributes.position!==void 0,S=d.morphAttributes.normal!==void 0,w=d.morphAttributes.color!==void 0,T=d.morphAttributes.position||[],L=d.morphAttributes.normal||[],O=d.morphAttributes.color||[];let N=0;b===!0&&(N=1),S===!0&&(N=2),w===!0&&(N=3);let A=d.attributes.position.count*N,I=1;A>e.maxTextureSize&&(I=Math.ceil(A/e.maxTextureSize),A=e.maxTextureSize);const K=new Float32Array(A*I*4*v),ne=new gu(K,A,I,v);ne.type=Xi,ne.needsUpdate=!0;const X=N*4;for(let V=0;V<v;V++){const fe=T[V],ie=L[V],le=O[V],me=A*I*4*V;for(let _e=0;_e<fe.count;_e++){const we=_e*X;b===!0&&(o.fromBufferAttribute(fe,_e),K[me+we+0]=o.x,K[me+we+1]=o.y,K[me+we+2]=o.z,K[me+we+3]=0),S===!0&&(o.fromBufferAttribute(ie,_e),K[me+we+4]=o.x,K[me+we+5]=o.y,K[me+we+6]=o.z,K[me+we+7]=0),w===!0&&(o.fromBufferAttribute(le,_e),K[me+we+8]=o.x,K[me+we+9]=o.y,K[me+we+10]=o.z,K[me+we+11]=le.itemSize===4?o.w:1)}}M={count:v,texture:ne,size:new ce(A,I)},r.set(d,M),d.addEventListener("dispose",G)}let y=0;for(let b=0;b<p.length;b++)y+=p[b];const _=d.morphTargetsRelative?1:1-y;m.getUniforms().setValue(s,"morphTargetBaseInfluence",_),m.getUniforms().setValue(s,"morphTargetInfluences",p),m.getUniforms().setValue(s,"morphTargetsTexture",M.texture,t),m.getUniforms().setValue(s,"morphTargetsTextureSize",M.size)}else{const g=p===void 0?0:p.length;let v=n[d.id];if(v===void 0||v.length!==g){v=[];for(let S=0;S<g;S++)v[S]=[S,0];n[d.id]=v}for(let S=0;S<g;S++){const w=v[S];w[0]=S,w[1]=p[S]}v.sort(jC);for(let S=0;S<8;S++)S<g&&v[S][1]?(l[S][0]=v[S][0],l[S][1]=v[S][1]):(l[S][0]=Number.MAX_SAFE_INTEGER,l[S][1]=0);l.sort(QC);const M=d.morphAttributes.position,y=d.morphAttributes.normal;let _=0;for(let S=0;S<8;S++){const w=l[S],T=w[0],L=w[1];T!==Number.MAX_SAFE_INTEGER&&L?(M&&d.getAttribute("morphTarget"+S)!==M[T]&&d.setAttribute("morphTarget"+S,M[T]),y&&d.getAttribute("morphNormal"+S)!==y[T]&&d.setAttribute("morphNormal"+S,y[T]),i[S]=L,_+=L):(M&&d.hasAttribute("morphTarget"+S)===!0&&d.deleteAttribute("morphTarget"+S),y&&d.hasAttribute("morphNormal"+S)===!0&&d.deleteAttribute("morphNormal"+S),i[S]=0)}const b=d.morphTargetsRelative?1:1-_;m.getUniforms().setValue(s,"morphTargetBaseInfluence",b),m.getUniforms().setValue(s,"morphTargetInfluences",i)}}return{update:u}}function tP(s,e,t,n){let i=new WeakMap;function r(u){const h=n.render.frame,d=u.geometry,m=e.get(u,d);return i.get(m)!==h&&(e.update(m),i.set(m,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",l)===!1&&u.addEventListener("dispose",l),t.update(u.instanceMatrix,s.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,s.ARRAY_BUFFER)),m}function o(){i=new WeakMap}function l(u){const h=u.target;h.removeEventListener("dispose",l),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:o}}const yv=new ln,xv=new gu,Mv=new Ud,Sv=new sl,$g=[],Qg=[],jg=new Float32Array(16),e_=new Float32Array(9),t_=new Float32Array(4);function Xa(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=$g[i];if(r===void 0&&(r=new Float32Array(i),$g[i]=r),e!==0){n.toArray(r,0);for(let o=1,l=0;o!==e;++o)l+=t,s[o].toArray(r,l)}return r}function pn(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function mn(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}function xu(s,e){let t=Qg[e];t===void 0&&(t=new Int32Array(e),Qg[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}function nP(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}function iP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pn(t,e))return;s.uniform2fv(this.addr,e),mn(t,e)}}function rP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(pn(t,e))return;s.uniform3fv(this.addr,e),mn(t,e)}}function sP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pn(t,e))return;s.uniform4fv(this.addr,e),mn(t,e)}}function aP(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(pn(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),mn(t,e)}else{if(pn(t,n))return;t_.set(n),s.uniformMatrix2fv(this.addr,!1,t_),mn(t,n)}}function oP(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(pn(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),mn(t,e)}else{if(pn(t,n))return;e_.set(n),s.uniformMatrix3fv(this.addr,!1,e_),mn(t,n)}}function lP(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(pn(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),mn(t,e)}else{if(pn(t,n))return;jg.set(n),s.uniformMatrix4fv(this.addr,!1,jg),mn(t,n)}}function cP(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}function uP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pn(t,e))return;s.uniform2iv(this.addr,e),mn(t,e)}}function hP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pn(t,e))return;s.uniform3iv(this.addr,e),mn(t,e)}}function fP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pn(t,e))return;s.uniform4iv(this.addr,e),mn(t,e)}}function dP(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}function pP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(pn(t,e))return;s.uniform2uiv(this.addr,e),mn(t,e)}}function mP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(pn(t,e))return;s.uniform3uiv(this.addr,e),mn(t,e)}}function gP(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(pn(t,e))return;s.uniform4uiv(this.addr,e),mn(t,e)}}function _P(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||yv,i)}function vP(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Mv,i)}function yP(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Sv,i)}function xP(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||xv,i)}function MP(s){switch(s){case 5126:return nP;case 35664:return iP;case 35665:return rP;case 35666:return sP;case 35674:return aP;case 35675:return oP;case 35676:return lP;case 5124:case 35670:return cP;case 35667:case 35671:return uP;case 35668:case 35672:return hP;case 35669:case 35673:return fP;case 5125:return dP;case 36294:return pP;case 36295:return mP;case 36296:return gP;case 35678:case 36198:case 36298:case 36306:case 35682:return _P;case 35679:case 36299:case 36307:return vP;case 35680:case 36300:case 36308:case 36293:return yP;case 36289:case 36303:case 36311:case 36292:return xP}}function SP(s,e){s.uniform1fv(this.addr,e)}function bP(s,e){const t=Xa(e,this.size,2);s.uniform2fv(this.addr,t)}function EP(s,e){const t=Xa(e,this.size,3);s.uniform3fv(this.addr,t)}function wP(s,e){const t=Xa(e,this.size,4);s.uniform4fv(this.addr,t)}function TP(s,e){const t=Xa(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}function AP(s,e){const t=Xa(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}function RP(s,e){const t=Xa(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}function CP(s,e){s.uniform1iv(this.addr,e)}function PP(s,e){s.uniform2iv(this.addr,e)}function LP(s,e){s.uniform3iv(this.addr,e)}function IP(s,e){s.uniform4iv(this.addr,e)}function UP(s,e){s.uniform1uiv(this.addr,e)}function DP(s,e){s.uniform2uiv(this.addr,e)}function NP(s,e){s.uniform3uiv(this.addr,e)}function OP(s,e){s.uniform4uiv(this.addr,e)}function FP(s,e,t){const n=this.cache,i=e.length,r=xu(t,i);pn(n,r)||(s.uniform1iv(this.addr,r),mn(n,r));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||yv,r[o])}function BP(s,e,t){const n=this.cache,i=e.length,r=xu(t,i);pn(n,r)||(s.uniform1iv(this.addr,r),mn(n,r));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||Mv,r[o])}function zP(s,e,t){const n=this.cache,i=e.length,r=xu(t,i);pn(n,r)||(s.uniform1iv(this.addr,r),mn(n,r));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Sv,r[o])}function HP(s,e,t){const n=this.cache,i=e.length,r=xu(t,i);pn(n,r)||(s.uniform1iv(this.addr,r),mn(n,r));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||xv,r[o])}function kP(s){switch(s){case 5126:return SP;case 35664:return bP;case 35665:return EP;case 35666:return wP;case 35674:return TP;case 35675:return AP;case 35676:return RP;case 5124:case 35670:return CP;case 35667:case 35671:return PP;case 35668:case 35672:return LP;case 35669:case 35673:return IP;case 5125:return UP;case 36294:return DP;case 36295:return NP;case 36296:return OP;case 35678:case 36198:case 36298:case 36306:case 35682:return FP;case 35679:case 36299:case 36307:return BP;case 35680:case 36300:case 36308:case 36293:return zP;case 36289:case 36303:case 36311:case 36292:return HP}}class GP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=MP(t.type)}}class VP{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=kP(t.type)}}class WP{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,o=i.length;r!==o;++r){const l=i[r];l.setValue(e,t[l.id],n)}}}const uf=/(\w+)(\])?(\[|\.)?/g;function n_(s,e){s.seq.push(e),s.map[e.id]=e}function XP(s,e,t){const n=s.name,i=n.length;for(uf.lastIndex=0;;){const r=uf.exec(n),o=uf.lastIndex;let l=r[1];const u=r[2]==="]",h=r[3];if(u&&(l=l|0),h===void 0||h==="["&&o+2===i){n_(t,h===void 0?new GP(l,s,e):new VP(l,s,e));break}else{let m=t.map[l];m===void 0&&(m=new WP(l),n_(t,m)),t=m}}}class nu{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),o=e.getUniformLocation(t,r.name);XP(r,o,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,o=t.length;r!==o;++r){const l=t[r],u=n[l.id];u.needsUpdate!==!1&&l.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function i_(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}let qP=0;function YP(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let o=i;o<r;o++){const l=o+1;n.push(`${l===e?">":" "} ${l}: ${t[o]}`)}return n.join(`
`)}function ZP(s){switch(s){case Di:return["Linear","( value )"];case ht:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",s),["Linear","( value )"]}}function r_(s,e,t){const n=s.getShaderParameter(e,s.COMPILE_STATUS),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const o=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+YP(s.getShaderSource(e),o)}else return i}function KP(s,e){const t=ZP(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function JP(s,e){let t;switch(e){case F0:t="Linear";break;case B0:t="Reinhard";break;case z0:t="OptimizedCineon";break;case Md:t="ACESFilmic";break;case H0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function $P(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.normalMapTangentSpace||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ao).join(`
`)}function QP(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function jP(s,e){const t={},n=s.getProgramParameter(e,s.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),o=r.name;let l=1;r.type===s.FLOAT_MAT2&&(l=2),r.type===s.FLOAT_MAT3&&(l=3),r.type===s.FLOAT_MAT4&&(l=4),t[o]={type:r.type,location:s.getAttribLocation(e,o),locationSize:l}}return t}function Ao(s){return s!==""}function s_(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function a_(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const eL=/^[ \t]*#include +<([\w\d./]+)>/gm;function od(s){return s.replace(eL,tL)}function tL(s,e){const t=pt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return od(t)}const nL=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function o_(s){return s.replace(nL,iL)}function iL(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function l_(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function rL(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===vd?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===fu?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Vi&&(e="SHADOWMAP_TYPE_VSM"),e}function sL(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case Zr:case Kr:e="ENVMAP_TYPE_CUBE";break;case Ga:e="ENVMAP_TYPE_CUBE_UV";break}return e}function aL(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Kr:e="ENVMAP_MODE_REFRACTION";break}return e}function oL(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case nl:e="ENVMAP_BLENDING_MULTIPLY";break;case N0:e="ENVMAP_BLENDING_MIX";break;case O0:e="ENVMAP_BLENDING_ADD";break}return e}function lL(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function cL(s,e,t,n){const i=s.getContext(),r=t.defines;let o=t.vertexShader,l=t.fragmentShader;const u=rL(t),h=sL(t),d=aL(t),m=oL(t),p=lL(t),g=t.isWebGL2?"":$P(t),v=QP(r),M=i.createProgram();let y,_,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(Ao).join(`
`),y.length>0&&(y+=`
`),_=[g,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(Ao).join(`
`),_.length>0&&(_+=`
`)):(y=[l_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ao).join(`
`),_=[g,l_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+m:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Yi?"#define TONE_MAPPING":"",t.toneMapping!==Yi?pt.tonemapping_pars_fragment:"",t.toneMapping!==Yi?JP("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",pt.encodings_pars_fragment,KP("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Ao).join(`
`)),o=od(o),o=s_(o,t),o=a_(o,t),l=od(l),l=s_(l,t),l=a_(l,t),o=o_(o),l=o_(l),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,_=["#define varying in",t.glslVersion===rd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===rd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+_);const S=b+y+o,w=b+_+l,T=i_(i,i.VERTEX_SHADER,S),L=i_(i,i.FRAGMENT_SHADER,w);if(i.attachShader(M,T),i.attachShader(M,L),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M),s.debug.checkShaderErrors){const A=i.getProgramInfoLog(M).trim(),I=i.getShaderInfoLog(T).trim(),K=i.getShaderInfoLog(L).trim();let ne=!0,X=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(ne=!1,typeof s.debug.onShaderError=="function")s.debug.onShaderError(i,M,T,L);else{const G=r_(i,T,"vertex"),V=r_(i,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Program Info Log: `+A+`
`+G+`
`+V)}else A!==""?console.warn("THREE.WebGLProgram: Program Info Log:",A):(I===""||K==="")&&(X=!1);X&&(this.diagnostics={runnable:ne,programLog:A,vertexShader:{log:I,prefix:y},fragmentShader:{log:K,prefix:_}})}i.deleteShader(T),i.deleteShader(L);let O;this.getUniforms=function(){return O===void 0&&(O=new nu(i,M)),O};let N;return this.getAttributes=function(){return N===void 0&&(N=jP(i,M)),N},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=qP++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=T,this.fragmentShader=L,this}let uL=0;class hL{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(r)===!1&&(o.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new fL(e),t.set(e,n)),n}}class fL{constructor(e){this.id=uL++,this.code=e,this.usedTimes=0}}function dL(s,e,t,n,i,r,o){const l=new _u,u=new hL,h=[],d=i.isWebGL2,m=i.logarithmicDepthBuffer,p=i.vertexTextures;let g=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(A){return A===0?"uv":`uv${A}`}function y(A,I,K,ne,X){const G=ne.fog,V=X.geometry,fe=A.isMeshStandardMaterial?ne.environment:null,ie=(A.isMeshStandardMaterial?t:e).get(A.envMap||fe),le=ie&&ie.mapping===Ga?ie.image.height:null,me=v[A.type];A.precision!==null&&(g=i.getMaxPrecision(A.precision),g!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",g,"instead."));const _e=V.morphAttributes.position||V.morphAttributes.normal||V.morphAttributes.color,we=_e!==void 0?_e.length:0;let j=0;V.morphAttributes.position!==void 0&&(j=1),V.morphAttributes.normal!==void 0&&(j=2),V.morphAttributes.color!==void 0&&(j=3);let ve,Me,Re,Ie;if(me){const $t=Ii[me];ve=$t.vertexShader,Me=$t.fragmentShader}else ve=A.vertexShader,Me=A.fragmentShader,u.update(A),Re=u.getVertexShaderID(A),Ie=u.getFragmentShaderID(A);const Ge=s.getRenderTarget(),et=X.isInstancedMesh===!0,Ze=!!A.map,At=!!A.matcap,Je=!!ie,H=!!A.aoMap,Ee=!!A.lightMap,re=!!A.bumpMap,Se=!!A.normalMap,de=!!A.displacementMap,De=!!A.emissiveMap,Ue=!!A.metalnessMap,Ne=!!A.roughnessMap,Ke=A.anisotropy>0,it=A.clearcoat>0,Lt=A.iridescence>0,F=A.sheen>0,P=A.transmission>0,te=Ke&&!!A.anisotropyMap,be=it&&!!A.clearcoatMap,ye=it&&!!A.clearcoatNormalMap,z=it&&!!A.clearcoatRoughnessMap,pe=Lt&&!!A.iridescenceMap,xe=Lt&&!!A.iridescenceThicknessMap,$=F&&!!A.sheenColorMap,ze=F&&!!A.sheenRoughnessMap,Ye=!!A.specularMap,Ve=!!A.specularColorMap,He=!!A.specularIntensityMap,Fe=P&&!!A.transmissionMap,Qe=P&&!!A.thicknessMap,xt=!!A.gradientMap,W=!!A.alphaMap,Ce=A.alphaTest>0,ee=!!A.extensions,Te=!!V.attributes.uv1,Le=!!V.attributes.uv2,wt=!!V.attributes.uv3;return{isWebGL2:d,shaderID:me,shaderType:A.type,shaderName:A.name,vertexShader:ve,fragmentShader:Me,defines:A.defines,customVertexShaderID:Re,customFragmentShaderID:Ie,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:g,instancing:et,instancingColor:et&&X.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:Ge===null?s.outputColorSpace:Ge.isXRRenderTarget===!0?Ge.texture.colorSpace:Di,map:Ze,matcap:At,envMap:Je,envMapMode:Je&&ie.mapping,envMapCubeUVHeight:le,aoMap:H,lightMap:Ee,bumpMap:re,normalMap:Se,displacementMap:p&&de,emissiveMap:De,normalMapObjectSpace:Se&&A.normalMapType===tv,normalMapTangentSpace:Se&&A.normalMapType===Qr,metalnessMap:Ue,roughnessMap:Ne,anisotropy:Ke,anisotropyMap:te,clearcoat:it,clearcoatMap:be,clearcoatNormalMap:ye,clearcoatRoughnessMap:z,iridescence:Lt,iridescenceMap:pe,iridescenceThicknessMap:xe,sheen:F,sheenColorMap:$,sheenRoughnessMap:ze,specularMap:Ye,specularColorMap:Ve,specularIntensityMap:He,transmission:P,transmissionMap:Fe,thicknessMap:Qe,gradientMap:xt,opaque:A.transparent===!1&&A.blending===Cs,alphaMap:W,alphaTest:Ce,combine:A.combine,mapUv:Ze&&M(A.map.channel),aoMapUv:H&&M(A.aoMap.channel),lightMapUv:Ee&&M(A.lightMap.channel),bumpMapUv:re&&M(A.bumpMap.channel),normalMapUv:Se&&M(A.normalMap.channel),displacementMapUv:de&&M(A.displacementMap.channel),emissiveMapUv:De&&M(A.emissiveMap.channel),metalnessMapUv:Ue&&M(A.metalnessMap.channel),roughnessMapUv:Ne&&M(A.roughnessMap.channel),anisotropyMapUv:te&&M(A.anisotropyMap.channel),clearcoatMapUv:be&&M(A.clearcoatMap.channel),clearcoatNormalMapUv:ye&&M(A.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:z&&M(A.clearcoatRoughnessMap.channel),iridescenceMapUv:pe&&M(A.iridescenceMap.channel),iridescenceThicknessMapUv:xe&&M(A.iridescenceThicknessMap.channel),sheenColorMapUv:$&&M(A.sheenColorMap.channel),sheenRoughnessMapUv:ze&&M(A.sheenRoughnessMap.channel),specularMapUv:Ye&&M(A.specularMap.channel),specularColorMapUv:Ve&&M(A.specularColorMap.channel),specularIntensityMapUv:He&&M(A.specularIntensityMap.channel),transmissionMapUv:Fe&&M(A.transmissionMap.channel),thicknessMapUv:Qe&&M(A.thicknessMap.channel),alphaMapUv:W&&M(A.alphaMap.channel),vertexTangents:!!V.attributes.tangent&&(Se||Ke),vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!V.attributes.color&&V.attributes.color.itemSize===4,vertexUv1s:Te,vertexUv2s:Le,vertexUv3s:wt,pointsUvs:X.isPoints===!0&&!!V.attributes.uv&&(Ze||W),fog:!!G,useFog:A.fog===!0,fogExp2:G&&G.isFogExp2,flatShading:A.flatShading===!0,sizeAttenuation:A.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:X.isSkinnedMesh===!0,morphTargets:V.morphAttributes.position!==void 0,morphNormals:V.morphAttributes.normal!==void 0,morphColors:V.morphAttributes.color!==void 0,morphTargetsCount:we,morphTextureStride:j,numDirLights:I.directional.length,numPointLights:I.point.length,numSpotLights:I.spot.length,numSpotLightMaps:I.spotLightMap.length,numRectAreaLights:I.rectArea.length,numHemiLights:I.hemi.length,numDirLightShadows:I.directionalShadowMap.length,numPointLightShadows:I.pointShadowMap.length,numSpotLightShadows:I.spotShadowMap.length,numSpotLightShadowsWithMaps:I.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:A.dithering,shadowMapEnabled:s.shadowMap.enabled&&K.length>0,shadowMapType:s.shadowMap.type,toneMapping:A.toneMapped?s.toneMapping:Yi,useLegacyLights:s.useLegacyLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Wi,flipSided:A.side===kn,useDepthPacking:A.depthPacking>=0,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:ee&&A.extensions.derivatives===!0,extensionFragDepth:ee&&A.extensions.fragDepth===!0,extensionDrawBuffers:ee&&A.extensions.drawBuffers===!0,extensionShaderTextureLOD:ee&&A.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function _(A){const I=[];if(A.shaderID?I.push(A.shaderID):(I.push(A.customVertexShaderID),I.push(A.customFragmentShaderID)),A.defines!==void 0)for(const K in A.defines)I.push(K),I.push(A.defines[K]);return A.isRawShaderMaterial===!1&&(b(I,A),S(I,A),I.push(s.outputColorSpace)),I.push(A.customProgramCacheKey),I.join()}function b(A,I){A.push(I.precision),A.push(I.outputColorSpace),A.push(I.envMapMode),A.push(I.envMapCubeUVHeight),A.push(I.mapUv),A.push(I.alphaMapUv),A.push(I.lightMapUv),A.push(I.aoMapUv),A.push(I.bumpMapUv),A.push(I.normalMapUv),A.push(I.displacementMapUv),A.push(I.emissiveMapUv),A.push(I.metalnessMapUv),A.push(I.roughnessMapUv),A.push(I.anisotropyMapUv),A.push(I.clearcoatMapUv),A.push(I.clearcoatNormalMapUv),A.push(I.clearcoatRoughnessMapUv),A.push(I.iridescenceMapUv),A.push(I.iridescenceThicknessMapUv),A.push(I.sheenColorMapUv),A.push(I.sheenRoughnessMapUv),A.push(I.specularMapUv),A.push(I.specularColorMapUv),A.push(I.specularIntensityMapUv),A.push(I.transmissionMapUv),A.push(I.thicknessMapUv),A.push(I.combine),A.push(I.fogExp2),A.push(I.sizeAttenuation),A.push(I.morphTargetsCount),A.push(I.morphAttributeCount),A.push(I.numDirLights),A.push(I.numPointLights),A.push(I.numSpotLights),A.push(I.numSpotLightMaps),A.push(I.numHemiLights),A.push(I.numRectAreaLights),A.push(I.numDirLightShadows),A.push(I.numPointLightShadows),A.push(I.numSpotLightShadows),A.push(I.numSpotLightShadowsWithMaps),A.push(I.shadowMapType),A.push(I.toneMapping),A.push(I.numClippingPlanes),A.push(I.numClipIntersection),A.push(I.depthPacking)}function S(A,I){l.disableAll(),I.isWebGL2&&l.enable(0),I.supportsVertexTextures&&l.enable(1),I.instancing&&l.enable(2),I.instancingColor&&l.enable(3),I.matcap&&l.enable(4),I.envMap&&l.enable(5),I.normalMapObjectSpace&&l.enable(6),I.normalMapTangentSpace&&l.enable(7),I.clearcoat&&l.enable(8),I.iridescence&&l.enable(9),I.alphaTest&&l.enable(10),I.vertexColors&&l.enable(11),I.vertexAlphas&&l.enable(12),I.vertexUv1s&&l.enable(13),I.vertexUv2s&&l.enable(14),I.vertexUv3s&&l.enable(15),I.vertexTangents&&l.enable(16),I.anisotropy&&l.enable(17),A.push(l.mask),l.disableAll(),I.fog&&l.enable(0),I.useFog&&l.enable(1),I.flatShading&&l.enable(2),I.logarithmicDepthBuffer&&l.enable(3),I.skinning&&l.enable(4),I.morphTargets&&l.enable(5),I.morphNormals&&l.enable(6),I.morphColors&&l.enable(7),I.premultipliedAlpha&&l.enable(8),I.shadowMapEnabled&&l.enable(9),I.useLegacyLights&&l.enable(10),I.doubleSided&&l.enable(11),I.flipSided&&l.enable(12),I.useDepthPacking&&l.enable(13),I.dithering&&l.enable(14),I.transmission&&l.enable(15),I.sheen&&l.enable(16),I.opaque&&l.enable(17),I.pointsUvs&&l.enable(18),A.push(l.mask)}function w(A){const I=v[A.type];let K;if(I){const ne=Ii[I];K=mv.clone(ne.uniforms)}else K=A.uniforms;return K}function T(A,I){let K;for(let ne=0,X=h.length;ne<X;ne++){const G=h[ne];if(G.cacheKey===I){K=G,++K.usedTimes;break}}return K===void 0&&(K=new cL(s,I,A,r),h.push(K)),K}function L(A){if(--A.usedTimes===0){const I=h.indexOf(A);h[I]=h[h.length-1],h.pop(),A.destroy()}}function O(A){u.remove(A)}function N(){u.dispose()}return{getParameters:y,getProgramCacheKey:_,getUniforms:w,acquireProgram:T,releaseProgram:L,releaseShaderCache:O,programs:h,dispose:N}}function pL(){let s=new WeakMap;function e(r){let o=s.get(r);return o===void 0&&(o={},s.set(r,o)),o}function t(r){s.delete(r)}function n(r,o,l){s.get(r)[o]=l}function i(){s=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function mL(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}function c_(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}function u_(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function o(m,p,g,v,M,y){let _=s[e];return _===void 0?(_={id:m.id,object:m,geometry:p,material:g,groupOrder:v,renderOrder:m.renderOrder,z:M,group:y},s[e]=_):(_.id=m.id,_.object=m,_.geometry=p,_.material=g,_.groupOrder=v,_.renderOrder=m.renderOrder,_.z=M,_.group=y),e++,_}function l(m,p,g,v,M,y){const _=o(m,p,g,v,M,y);g.transmission>0?n.push(_):g.transparent===!0?i.push(_):t.push(_)}function u(m,p,g,v,M,y){const _=o(m,p,g,v,M,y);g.transmission>0?n.unshift(_):g.transparent===!0?i.unshift(_):t.unshift(_)}function h(m,p){t.length>1&&t.sort(m||mL),n.length>1&&n.sort(p||c_),i.length>1&&i.sort(p||c_)}function d(){for(let m=e,p=s.length;m<p;m++){const g=s[m];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:l,unshift:u,finish:d,sort:h}}function gL(){let s=new WeakMap;function e(n,i){const r=s.get(n);let o;return r===void 0?(o=new u_,s.set(n,[o])):i>=r.length?(o=new u_,r.push(o)):o=r[i],o}function t(){s=new WeakMap}return{get:e,dispose:t}}function _L(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new U,color:new Oe};break;case"SpotLight":t={position:new U,direction:new U,color:new Oe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new U,color:new Oe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new U,skyColor:new Oe,groundColor:new Oe};break;case"RectAreaLight":t={color:new Oe,position:new U,halfWidth:new U,halfHeight:new U};break}return s[e.id]=t,t}}}function vL(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}let yL=0;function xL(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}function ML(s,e){const t=new _L,n=vL(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new U);const r=new U,o=new ot,l=new ot;function u(d,m){let p=0,g=0,v=0;for(let K=0;K<9;K++)i.probe[K].set(0,0,0);let M=0,y=0,_=0,b=0,S=0,w=0,T=0,L=0,O=0,N=0;d.sort(xL);const A=m===!0?Math.PI:1;for(let K=0,ne=d.length;K<ne;K++){const X=d[K],G=X.color,V=X.intensity,fe=X.distance,ie=X.shadow&&X.shadow.map?X.shadow.map.texture:null;if(X.isAmbientLight)p+=G.r*V*A,g+=G.g*V*A,v+=G.b*V*A;else if(X.isLightProbe)for(let le=0;le<9;le++)i.probe[le].addScaledVector(X.sh.coefficients[le],V);else if(X.isDirectionalLight){const le=t.get(X);if(le.color.copy(X.color).multiplyScalar(X.intensity*A),X.castShadow){const me=X.shadow,_e=n.get(X);_e.shadowBias=me.bias,_e.shadowNormalBias=me.normalBias,_e.shadowRadius=me.radius,_e.shadowMapSize=me.mapSize,i.directionalShadow[M]=_e,i.directionalShadowMap[M]=ie,i.directionalShadowMatrix[M]=X.shadow.matrix,w++}i.directional[M]=le,M++}else if(X.isSpotLight){const le=t.get(X);le.position.setFromMatrixPosition(X.matrixWorld),le.color.copy(G).multiplyScalar(V*A),le.distance=fe,le.coneCos=Math.cos(X.angle),le.penumbraCos=Math.cos(X.angle*(1-X.penumbra)),le.decay=X.decay,i.spot[_]=le;const me=X.shadow;if(X.map&&(i.spotLightMap[O]=X.map,O++,me.updateMatrices(X),X.castShadow&&N++),i.spotLightMatrix[_]=me.matrix,X.castShadow){const _e=n.get(X);_e.shadowBias=me.bias,_e.shadowNormalBias=me.normalBias,_e.shadowRadius=me.radius,_e.shadowMapSize=me.mapSize,i.spotShadow[_]=_e,i.spotShadowMap[_]=ie,L++}_++}else if(X.isRectAreaLight){const le=t.get(X);le.color.copy(G).multiplyScalar(V),le.halfWidth.set(X.width*.5,0,0),le.halfHeight.set(0,X.height*.5,0),i.rectArea[b]=le,b++}else if(X.isPointLight){const le=t.get(X);if(le.color.copy(X.color).multiplyScalar(X.intensity*A),le.distance=X.distance,le.decay=X.decay,X.castShadow){const me=X.shadow,_e=n.get(X);_e.shadowBias=me.bias,_e.shadowNormalBias=me.normalBias,_e.shadowRadius=me.radius,_e.shadowMapSize=me.mapSize,_e.shadowCameraNear=me.camera.near,_e.shadowCameraFar=me.camera.far,i.pointShadow[y]=_e,i.pointShadowMap[y]=ie,i.pointShadowMatrix[y]=X.shadow.matrix,T++}i.point[y]=le,y++}else if(X.isHemisphereLight){const le=t.get(X);le.skyColor.copy(X.color).multiplyScalar(V*A),le.groundColor.copy(X.groundColor).multiplyScalar(V*A),i.hemi[S]=le,S++}}b>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_FLOAT_1,i.rectAreaLTC2=Ae.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_HALF_1,i.rectAreaLTC2=Ae.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=p,i.ambient[1]=g,i.ambient[2]=v;const I=i.hash;(I.directionalLength!==M||I.pointLength!==y||I.spotLength!==_||I.rectAreaLength!==b||I.hemiLength!==S||I.numDirectionalShadows!==w||I.numPointShadows!==T||I.numSpotShadows!==L||I.numSpotMaps!==O)&&(i.directional.length=M,i.spot.length=_,i.rectArea.length=b,i.point.length=y,i.hemi.length=S,i.directionalShadow.length=w,i.directionalShadowMap.length=w,i.pointShadow.length=T,i.pointShadowMap.length=T,i.spotShadow.length=L,i.spotShadowMap.length=L,i.directionalShadowMatrix.length=w,i.pointShadowMatrix.length=T,i.spotLightMatrix.length=L+O-N,i.spotLightMap.length=O,i.numSpotLightShadowsWithMaps=N,I.directionalLength=M,I.pointLength=y,I.spotLength=_,I.rectAreaLength=b,I.hemiLength=S,I.numDirectionalShadows=w,I.numPointShadows=T,I.numSpotShadows=L,I.numSpotMaps=O,i.version=yL++)}function h(d,m){let p=0,g=0,v=0,M=0,y=0;const _=m.matrixWorldInverse;for(let b=0,S=d.length;b<S;b++){const w=d[b];if(w.isDirectionalLight){const T=i.directional[p];T.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(_),p++}else if(w.isSpotLight){const T=i.spot[v];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(_),T.direction.setFromMatrixPosition(w.matrixWorld),r.setFromMatrixPosition(w.target.matrixWorld),T.direction.sub(r),T.direction.transformDirection(_),v++}else if(w.isRectAreaLight){const T=i.rectArea[M];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(_),l.identity(),o.copy(w.matrixWorld),o.premultiply(_),l.extractRotation(o),T.halfWidth.set(w.width*.5,0,0),T.halfHeight.set(0,w.height*.5,0),T.halfWidth.applyMatrix4(l),T.halfHeight.applyMatrix4(l),M++}else if(w.isPointLight){const T=i.point[g];T.position.setFromMatrixPosition(w.matrixWorld),T.position.applyMatrix4(_),g++}else if(w.isHemisphereLight){const T=i.hemi[y];T.direction.setFromMatrixPosition(w.matrixWorld),T.direction.transformDirection(_),y++}}}return{setup:u,setupView:h,state:i}}function h_(s,e){const t=new ML(s,e),n=[],i=[];function r(){n.length=0,i.length=0}function o(m){n.push(m)}function l(m){i.push(m)}function u(m){t.setup(n,m)}function h(m){t.setupView(n,m)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:o,pushShadow:l}}function SL(s,e){let t=new WeakMap;function n(r,o=0){const l=t.get(r);let u;return l===void 0?(u=new h_(s,e),t.set(r,[u])):o>=l.length?(u=new h_(s,e),l.push(u)):u=l[o],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Fd extends Ln{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=j0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Bd extends Ln{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const bL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,EL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function wL(s,e,t){let n=new vu;const i=new ce,r=new ce,o=new Nt,l=new Fd({depthPacking:ev}),u=new Bd,h={},d=t.maxTextureSize,m={[Tr]:kn,[kn]:Tr,[Wi]:Wi},p=new Ji({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ce},radius:{value:4}},vertexShader:bL,fragmentShader:EL}),g=p.clone();g.defines.HORIZONTAL_PASS=1;const v=new yt;v.setAttribute("position",new zt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new xn(v,p),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=vd;let _=this.type;this.render=function(T,L,O){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||T.length===0)return;const N=s.getRenderTarget(),A=s.getActiveCubeFace(),I=s.getActiveMipmapLevel(),K=s.state;K.setBlending(br),K.buffers.color.setClear(1,1,1,1),K.buffers.depth.setTest(!0),K.setScissorTest(!1);const ne=_!==Vi&&this.type===Vi,X=_===Vi&&this.type!==Vi;for(let G=0,V=T.length;G<V;G++){const fe=T[G],ie=fe.shadow;if(ie===void 0){console.warn("THREE.WebGLShadowMap:",fe,"has no shadow.");continue}if(ie.autoUpdate===!1&&ie.needsUpdate===!1)continue;i.copy(ie.mapSize);const le=ie.getFrameExtents();if(i.multiply(le),r.copy(ie.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/le.x),i.x=r.x*le.x,ie.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/le.y),i.y=r.y*le.y,ie.mapSize.y=r.y)),ie.map===null||ne===!0||X===!0){const _e=this.type!==Vi?{minFilter:an,magFilter:an}:{};ie.map!==null&&ie.map.dispose(),ie.map=new Ni(i.x,i.y,_e),ie.map.texture.name=fe.name+".shadowMap",ie.camera.updateProjectionMatrix()}s.setRenderTarget(ie.map),s.clear();const me=ie.getViewportCount();for(let _e=0;_e<me;_e++){const we=ie.getViewport(_e);o.set(r.x*we.x,r.y*we.y,r.x*we.z,r.y*we.w),K.viewport(o),ie.updateMatrices(fe,_e),n=ie.getFrustum(),w(L,O,ie.camera,fe,this.type)}ie.isPointLightShadow!==!0&&this.type===Vi&&b(ie,O),ie.needsUpdate=!1}_=this.type,y.needsUpdate=!1,s.setRenderTarget(N,A,I)};function b(T,L){const O=e.update(M);p.defines.VSM_SAMPLES!==T.blurSamples&&(p.defines.VSM_SAMPLES=T.blurSamples,g.defines.VSM_SAMPLES=T.blurSamples,p.needsUpdate=!0,g.needsUpdate=!0),T.mapPass===null&&(T.mapPass=new Ni(i.x,i.y)),p.uniforms.shadow_pass.value=T.map.texture,p.uniforms.resolution.value=T.mapSize,p.uniforms.radius.value=T.radius,s.setRenderTarget(T.mapPass),s.clear(),s.renderBufferDirect(L,null,O,p,M,null),g.uniforms.shadow_pass.value=T.mapPass.texture,g.uniforms.resolution.value=T.mapSize,g.uniforms.radius.value=T.radius,s.setRenderTarget(T.map),s.clear(),s.renderBufferDirect(L,null,O,g,M,null)}function S(T,L,O,N){let A=null;const I=O.isPointLight===!0?T.customDistanceMaterial:T.customDepthMaterial;if(I!==void 0)A=I;else if(A=O.isPointLight===!0?u:l,s.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const K=A.uuid,ne=L.uuid;let X=h[K];X===void 0&&(X={},h[K]=X);let G=X[ne];G===void 0&&(G=A.clone(),X[ne]=G),A=G}if(A.visible=L.visible,A.wireframe=L.wireframe,N===Vi?A.side=L.shadowSide!==null?L.shadowSide:L.side:A.side=L.shadowSide!==null?L.shadowSide:m[L.side],A.alphaMap=L.alphaMap,A.alphaTest=L.alphaTest,A.map=L.map,A.clipShadows=L.clipShadows,A.clippingPlanes=L.clippingPlanes,A.clipIntersection=L.clipIntersection,A.displacementMap=L.displacementMap,A.displacementScale=L.displacementScale,A.displacementBias=L.displacementBias,A.wireframeLinewidth=L.wireframeLinewidth,A.linewidth=L.linewidth,O.isPointLight===!0&&A.isMeshDistanceMaterial===!0){const K=s.properties.get(A);K.light=O}return A}function w(T,L,O,N,A){if(T.visible===!1)return;if(T.layers.test(L.layers)&&(T.isMesh||T.isLine||T.isPoints)&&(T.castShadow||T.receiveShadow&&A===Vi)&&(!T.frustumCulled||n.intersectsObject(T))){T.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,T.matrixWorld);const ne=e.update(T),X=T.material;if(Array.isArray(X)){const G=ne.groups;for(let V=0,fe=G.length;V<fe;V++){const ie=G[V],le=X[ie.materialIndex];if(le&&le.visible){const me=S(T,le,N,A);s.renderBufferDirect(O,null,ne,me,T,ie)}}}else if(X.visible){const G=S(T,X,N,A);s.renderBufferDirect(O,null,ne,G,T,null)}}const K=T.children;for(let ne=0,X=K.length;ne<X;ne++)w(K[ne],L,O,N,A)}}function TL(s,e,t){const n=t.isWebGL2;function i(){let W=!1;const Ce=new Nt;let ee=null;const Te=new Nt(0,0,0,0);return{setMask:function(Le){ee!==Le&&!W&&(s.colorMask(Le,Le,Le,Le),ee=Le)},setLocked:function(Le){W=Le},setClear:function(Le,wt,Gt,$t,zi){zi===!0&&(Le*=$t,wt*=$t,Gt*=$t),Ce.set(Le,wt,Gt,$t),Te.equals(Ce)===!1&&(s.clearColor(Le,wt,Gt,$t),Te.copy(Ce))},reset:function(){W=!1,ee=null,Te.set(-1,0,0,0)}}}function r(){let W=!1,Ce=null,ee=null,Te=null;return{setTest:function(Le){Le?Ge(s.DEPTH_TEST):et(s.DEPTH_TEST)},setMask:function(Le){Ce!==Le&&!W&&(s.depthMask(Le),Ce=Le)},setFunc:function(Le){if(ee!==Le){switch(Le){case R0:s.depthFunc(s.NEVER);break;case C0:s.depthFunc(s.ALWAYS);break;case P0:s.depthFunc(s.LESS);break;case au:s.depthFunc(s.LEQUAL);break;case L0:s.depthFunc(s.EQUAL);break;case I0:s.depthFunc(s.GEQUAL);break;case U0:s.depthFunc(s.GREATER);break;case D0:s.depthFunc(s.NOTEQUAL);break;default:s.depthFunc(s.LEQUAL)}ee=Le}},setLocked:function(Le){W=Le},setClear:function(Le){Te!==Le&&(s.clearDepth(Le),Te=Le)},reset:function(){W=!1,Ce=null,ee=null,Te=null}}}function o(){let W=!1,Ce=null,ee=null,Te=null,Le=null,wt=null,Gt=null,$t=null,zi=null;return{setTest:function(Vt){W||(Vt?Ge(s.STENCIL_TEST):et(s.STENCIL_TEST))},setMask:function(Vt){Ce!==Vt&&!W&&(s.stencilMask(Vt),Ce=Vt)},setFunc:function(Vt,ci,Sn){(ee!==Vt||Te!==ci||Le!==Sn)&&(s.stencilFunc(Vt,ci,Sn),ee=Vt,Te=ci,Le=Sn)},setOp:function(Vt,ci,Sn){(wt!==Vt||Gt!==ci||$t!==Sn)&&(s.stencilOp(Vt,ci,Sn),wt=Vt,Gt=ci,$t=Sn)},setLocked:function(Vt){W=Vt},setClear:function(Vt){zi!==Vt&&(s.clearStencil(Vt),zi=Vt)},reset:function(){W=!1,Ce=null,ee=null,Te=null,Le=null,wt=null,Gt=null,$t=null,zi=null}}}const l=new i,u=new r,h=new o,d=new WeakMap,m=new WeakMap;let p={},g={},v=new WeakMap,M=[],y=null,_=!1,b=null,S=null,w=null,T=null,L=null,O=null,N=null,A=!1,I=null,K=null,ne=null,X=null,G=null;const V=s.getParameter(s.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let fe=!1,ie=0;const le=s.getParameter(s.VERSION);le.indexOf("WebGL")!==-1?(ie=parseFloat(/^WebGL (\d)/.exec(le)[1]),fe=ie>=1):le.indexOf("OpenGL ES")!==-1&&(ie=parseFloat(/^OpenGL ES (\d)/.exec(le)[1]),fe=ie>=2);let me=null,_e={};const we=s.getParameter(s.SCISSOR_BOX),j=s.getParameter(s.VIEWPORT),ve=new Nt().fromArray(we),Me=new Nt().fromArray(j);function Re(W,Ce,ee,Te){const Le=new Uint8Array(4),wt=s.createTexture();s.bindTexture(W,wt),s.texParameteri(W,s.TEXTURE_MIN_FILTER,s.NEAREST),s.texParameteri(W,s.TEXTURE_MAG_FILTER,s.NEAREST);for(let Gt=0;Gt<ee;Gt++)n&&(W===s.TEXTURE_3D||W===s.TEXTURE_2D_ARRAY)?s.texImage3D(Ce,0,s.RGBA,1,1,Te,0,s.RGBA,s.UNSIGNED_BYTE,Le):s.texImage2D(Ce+Gt,0,s.RGBA,1,1,0,s.RGBA,s.UNSIGNED_BYTE,Le);return wt}const Ie={};Ie[s.TEXTURE_2D]=Re(s.TEXTURE_2D,s.TEXTURE_2D,1),Ie[s.TEXTURE_CUBE_MAP]=Re(s.TEXTURE_CUBE_MAP,s.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Ie[s.TEXTURE_2D_ARRAY]=Re(s.TEXTURE_2D_ARRAY,s.TEXTURE_2D_ARRAY,1,1),Ie[s.TEXTURE_3D]=Re(s.TEXTURE_3D,s.TEXTURE_3D,1,1)),l.setClear(0,0,0,1),u.setClear(1),h.setClear(0),Ge(s.DEPTH_TEST),u.setFunc(au),de(!1),De(Cf),Ge(s.CULL_FACE),re(br);function Ge(W){p[W]!==!0&&(s.enable(W),p[W]=!0)}function et(W){p[W]!==!1&&(s.disable(W),p[W]=!1)}function Ze(W,Ce){return g[W]!==Ce?(s.bindFramebuffer(W,Ce),g[W]=Ce,n&&(W===s.DRAW_FRAMEBUFFER&&(g[s.FRAMEBUFFER]=Ce),W===s.FRAMEBUFFER&&(g[s.DRAW_FRAMEBUFFER]=Ce)),!0):!1}function At(W,Ce){let ee=M,Te=!1;if(W)if(ee=v.get(Ce),ee===void 0&&(ee=[],v.set(Ce,ee)),W.isWebGLMultipleRenderTargets){const Le=W.texture;if(ee.length!==Le.length||ee[0]!==s.COLOR_ATTACHMENT0){for(let wt=0,Gt=Le.length;wt<Gt;wt++)ee[wt]=s.COLOR_ATTACHMENT0+wt;ee.length=Le.length,Te=!0}}else ee[0]!==s.COLOR_ATTACHMENT0&&(ee[0]=s.COLOR_ATTACHMENT0,Te=!0);else ee[0]!==s.BACK&&(ee[0]=s.BACK,Te=!0);Te&&(t.isWebGL2?s.drawBuffers(ee):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ee))}function Je(W){return y!==W?(s.useProgram(W),y=W,!0):!1}const H={[bs]:s.FUNC_ADD,[_0]:s.FUNC_SUBTRACT,[v0]:s.FUNC_REVERSE_SUBTRACT};if(n)H[Uf]=s.MIN,H[Df]=s.MAX;else{const W=e.get("EXT_blend_minmax");W!==null&&(H[Uf]=W.MIN_EXT,H[Df]=W.MAX_EXT)}const Ee={[y0]:s.ZERO,[x0]:s.ONE,[M0]:s.SRC_COLOR,[yd]:s.SRC_ALPHA,[A0]:s.SRC_ALPHA_SATURATE,[w0]:s.DST_COLOR,[b0]:s.DST_ALPHA,[S0]:s.ONE_MINUS_SRC_COLOR,[xd]:s.ONE_MINUS_SRC_ALPHA,[T0]:s.ONE_MINUS_DST_COLOR,[E0]:s.ONE_MINUS_DST_ALPHA};function re(W,Ce,ee,Te,Le,wt,Gt,$t){if(W===br){_===!0&&(et(s.BLEND),_=!1);return}if(_===!1&&(Ge(s.BLEND),_=!0),W!==g0){if(W!==b||$t!==A){if((S!==bs||L!==bs)&&(s.blendEquation(s.FUNC_ADD),S=bs,L=bs),$t)switch(W){case Cs:s.blendFuncSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Pf:s.blendFunc(s.ONE,s.ONE);break;case Lf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case If:s.blendFuncSeparate(s.ZERO,s.SRC_COLOR,s.ZERO,s.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}else switch(W){case Cs:s.blendFuncSeparate(s.SRC_ALPHA,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA);break;case Pf:s.blendFunc(s.SRC_ALPHA,s.ONE);break;case Lf:s.blendFuncSeparate(s.ZERO,s.ONE_MINUS_SRC_COLOR,s.ZERO,s.ONE);break;case If:s.blendFunc(s.ZERO,s.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",W);break}w=null,T=null,O=null,N=null,b=W,A=$t}return}Le=Le||Ce,wt=wt||ee,Gt=Gt||Te,(Ce!==S||Le!==L)&&(s.blendEquationSeparate(H[Ce],H[Le]),S=Ce,L=Le),(ee!==w||Te!==T||wt!==O||Gt!==N)&&(s.blendFuncSeparate(Ee[ee],Ee[Te],Ee[wt],Ee[Gt]),w=ee,T=Te,O=wt,N=Gt),b=W,A=!1}function Se(W,Ce){W.side===Wi?et(s.CULL_FACE):Ge(s.CULL_FACE);let ee=W.side===kn;Ce&&(ee=!ee),de(ee),W.blending===Cs&&W.transparent===!1?re(br):re(W.blending,W.blendEquation,W.blendSrc,W.blendDst,W.blendEquationAlpha,W.blendSrcAlpha,W.blendDstAlpha,W.premultipliedAlpha),u.setFunc(W.depthFunc),u.setTest(W.depthTest),u.setMask(W.depthWrite),l.setMask(W.colorWrite);const Te=W.stencilWrite;h.setTest(Te),Te&&(h.setMask(W.stencilWriteMask),h.setFunc(W.stencilFunc,W.stencilRef,W.stencilFuncMask),h.setOp(W.stencilFail,W.stencilZFail,W.stencilZPass)),Ne(W.polygonOffset,W.polygonOffsetFactor,W.polygonOffsetUnits),W.alphaToCoverage===!0?Ge(s.SAMPLE_ALPHA_TO_COVERAGE):et(s.SAMPLE_ALPHA_TO_COVERAGE)}function de(W){I!==W&&(W?s.frontFace(s.CW):s.frontFace(s.CCW),I=W)}function De(W){W!==p0?(Ge(s.CULL_FACE),W!==K&&(W===Cf?s.cullFace(s.BACK):W===m0?s.cullFace(s.FRONT):s.cullFace(s.FRONT_AND_BACK))):et(s.CULL_FACE),K=W}function Ue(W){W!==ne&&(fe&&s.lineWidth(W),ne=W)}function Ne(W,Ce,ee){W?(Ge(s.POLYGON_OFFSET_FILL),(X!==Ce||G!==ee)&&(s.polygonOffset(Ce,ee),X=Ce,G=ee)):et(s.POLYGON_OFFSET_FILL)}function Ke(W){W?Ge(s.SCISSOR_TEST):et(s.SCISSOR_TEST)}function it(W){W===void 0&&(W=s.TEXTURE0+V-1),me!==W&&(s.activeTexture(W),me=W)}function Lt(W,Ce,ee){ee===void 0&&(me===null?ee=s.TEXTURE0+V-1:ee=me);let Te=_e[ee];Te===void 0&&(Te={type:void 0,texture:void 0},_e[ee]=Te),(Te.type!==W||Te.texture!==Ce)&&(me!==ee&&(s.activeTexture(ee),me=ee),s.bindTexture(W,Ce||Ie[W]),Te.type=W,Te.texture=Ce)}function F(){const W=_e[me];W!==void 0&&W.type!==void 0&&(s.bindTexture(W.type,null),W.type=void 0,W.texture=void 0)}function P(){try{s.compressedTexImage2D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function te(){try{s.compressedTexImage3D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function be(){try{s.texSubImage2D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function ye(){try{s.texSubImage3D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function z(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function pe(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function xe(){try{s.texStorage2D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function $(){try{s.texStorage3D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function ze(){try{s.texImage2D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ye(){try{s.texImage3D.apply(s,arguments)}catch(W){console.error("THREE.WebGLState:",W)}}function Ve(W){ve.equals(W)===!1&&(s.scissor(W.x,W.y,W.z,W.w),ve.copy(W))}function He(W){Me.equals(W)===!1&&(s.viewport(W.x,W.y,W.z,W.w),Me.copy(W))}function Fe(W,Ce){let ee=m.get(Ce);ee===void 0&&(ee=new WeakMap,m.set(Ce,ee));let Te=ee.get(W);Te===void 0&&(Te=s.getUniformBlockIndex(Ce,W.name),ee.set(W,Te))}function Qe(W,Ce){const Te=m.get(Ce).get(W);d.get(Ce)!==Te&&(s.uniformBlockBinding(Ce,Te,W.__bindingPointIndex),d.set(Ce,Te))}function xt(){s.disable(s.BLEND),s.disable(s.CULL_FACE),s.disable(s.DEPTH_TEST),s.disable(s.POLYGON_OFFSET_FILL),s.disable(s.SCISSOR_TEST),s.disable(s.STENCIL_TEST),s.disable(s.SAMPLE_ALPHA_TO_COVERAGE),s.blendEquation(s.FUNC_ADD),s.blendFunc(s.ONE,s.ZERO),s.blendFuncSeparate(s.ONE,s.ZERO,s.ONE,s.ZERO),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(s.LESS),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(s.ALWAYS,0,4294967295),s.stencilOp(s.KEEP,s.KEEP,s.KEEP),s.clearStencil(0),s.cullFace(s.BACK),s.frontFace(s.CCW),s.polygonOffset(0,0),s.activeTexture(s.TEXTURE0),s.bindFramebuffer(s.FRAMEBUFFER,null),n===!0&&(s.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),s.bindFramebuffer(s.READ_FRAMEBUFFER,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),p={},me=null,_e={},g={},v=new WeakMap,M=[],y=null,_=!1,b=null,S=null,w=null,T=null,L=null,O=null,N=null,A=!1,I=null,K=null,ne=null,X=null,G=null,ve.set(0,0,s.canvas.width,s.canvas.height),Me.set(0,0,s.canvas.width,s.canvas.height),l.reset(),u.reset(),h.reset()}return{buffers:{color:l,depth:u,stencil:h},enable:Ge,disable:et,bindFramebuffer:Ze,drawBuffers:At,useProgram:Je,setBlending:re,setMaterial:Se,setFlipSided:de,setCullFace:De,setLineWidth:Ue,setPolygonOffset:Ne,setScissorTest:Ke,activeTexture:it,bindTexture:Lt,unbindTexture:F,compressedTexImage2D:P,compressedTexImage3D:te,texImage2D:ze,texImage3D:Ye,updateUBOMapping:Fe,uniformBlockBinding:Qe,texStorage2D:xe,texStorage3D:$,texSubImage2D:be,texSubImage3D:ye,compressedTexSubImage2D:z,compressedTexSubImage3D:pe,scissor:Ve,viewport:He,reset:xt}}function AL(s,e,t,n,i,r,o){const l=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,m=i.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let M;const y=new WeakMap;let _=!1;try{_=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(F,P){return _?new OffscreenCanvas(F,P):Yo("canvas")}function S(F,P,te,be){let ye=1;if((F.width>be||F.height>be)&&(ye=be/Math.max(F.width,F.height)),ye<1||P===!0)if(typeof HTMLImageElement<"u"&&F instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&F instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&F instanceof ImageBitmap){const z=P?cu:Math.floor,pe=z(ye*F.width),xe=z(ye*F.height);M===void 0&&(M=b(pe,xe));const $=te?b(pe,xe):M;return $.width=pe,$.height=xe,$.getContext("2d").drawImage(F,0,0,pe,xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+F.width+"x"+F.height+") to ("+pe+"x"+xe+")."),$}else return"data"in F&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+F.width+"x"+F.height+")."),F;return F}function w(F){return sd(F.width)&&sd(F.height)}function T(F){return l?!1:F.wrapS!==Cn||F.wrapT!==Cn||F.minFilter!==an&&F.minFilter!==on}function L(F,P){return F.generateMipmaps&&P&&F.minFilter!==an&&F.minFilter!==on}function O(F){s.generateMipmap(F)}function N(F,P,te,be,ye=!1){if(l===!1)return P;if(F!==null){if(s[F]!==void 0)return s[F];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+F+"'")}let z=P;return P===s.RED&&(te===s.FLOAT&&(z=s.R32F),te===s.HALF_FLOAT&&(z=s.R16F),te===s.UNSIGNED_BYTE&&(z=s.R8)),P===s.RG&&(te===s.FLOAT&&(z=s.RG32F),te===s.HALF_FLOAT&&(z=s.RG16F),te===s.UNSIGNED_BYTE&&(z=s.RG8)),P===s.RGBA&&(te===s.FLOAT&&(z=s.RGBA32F),te===s.HALF_FLOAT&&(z=s.RGBA16F),te===s.UNSIGNED_BYTE&&(z=be===ht&&ye===!1?s.SRGB8_ALPHA8:s.RGBA8),te===s.UNSIGNED_SHORT_4_4_4_4&&(z=s.RGBA4),te===s.UNSIGNED_SHORT_5_5_5_1&&(z=s.RGB5_A1)),(z===s.R16F||z===s.R32F||z===s.RG16F||z===s.RG32F||z===s.RGBA16F||z===s.RGBA32F)&&e.get("EXT_color_buffer_float"),z}function A(F,P,te){return L(F,te)===!0||F.isFramebufferTexture&&F.minFilter!==an&&F.minFilter!==on?Math.log2(Math.max(P.width,P.height))+1:F.mipmaps!==void 0&&F.mipmaps.length>0?F.mipmaps.length:F.isCompressedTexture&&Array.isArray(F.image)?P.mipmaps.length:1}function I(F){return F===an||F===ou||F===Po?s.NEAREST:s.LINEAR}function K(F){const P=F.target;P.removeEventListener("dispose",K),X(P),P.isVideoTexture&&v.delete(P)}function ne(F){const P=F.target;P.removeEventListener("dispose",ne),V(P)}function X(F){const P=n.get(F);if(P.__webglInit===void 0)return;const te=F.source,be=y.get(te);if(be){const ye=be[P.__cacheKey];ye.usedTimes--,ye.usedTimes===0&&G(F),Object.keys(be).length===0&&y.delete(te)}n.remove(F)}function G(F){const P=n.get(F);s.deleteTexture(P.__webglTexture);const te=F.source,be=y.get(te);delete be[P.__cacheKey],o.memory.textures--}function V(F){const P=F.texture,te=n.get(F),be=n.get(P);if(be.__webglTexture!==void 0&&(s.deleteTexture(be.__webglTexture),o.memory.textures--),F.depthTexture&&F.depthTexture.dispose(),F.isWebGLCubeRenderTarget)for(let ye=0;ye<6;ye++)s.deleteFramebuffer(te.__webglFramebuffer[ye]),te.__webglDepthbuffer&&s.deleteRenderbuffer(te.__webglDepthbuffer[ye]);else{if(s.deleteFramebuffer(te.__webglFramebuffer),te.__webglDepthbuffer&&s.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&s.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer)for(let ye=0;ye<te.__webglColorRenderbuffer.length;ye++)te.__webglColorRenderbuffer[ye]&&s.deleteRenderbuffer(te.__webglColorRenderbuffer[ye]);te.__webglDepthRenderbuffer&&s.deleteRenderbuffer(te.__webglDepthRenderbuffer)}if(F.isWebGLMultipleRenderTargets)for(let ye=0,z=P.length;ye<z;ye++){const pe=n.get(P[ye]);pe.__webglTexture&&(s.deleteTexture(pe.__webglTexture),o.memory.textures--),n.remove(P[ye])}n.remove(P),n.remove(F)}let fe=0;function ie(){fe=0}function le(){const F=fe;return F>=u&&console.warn("THREE.WebGLTextures: Trying to use "+F+" texture units while this GPU supports only "+u),fe+=1,F}function me(F){const P=[];return P.push(F.wrapS),P.push(F.wrapT),P.push(F.wrapR||0),P.push(F.magFilter),P.push(F.minFilter),P.push(F.anisotropy),P.push(F.internalFormat),P.push(F.format),P.push(F.type),P.push(F.generateMipmaps),P.push(F.premultiplyAlpha),P.push(F.flipY),P.push(F.unpackAlignment),P.push(F.colorSpace),P.join()}function _e(F,P){const te=n.get(F);if(F.isVideoTexture&&it(F),F.isRenderTargetTexture===!1&&F.version>0&&te.__version!==F.version){const be=F.image;if(be===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(be.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ze(te,F,P);return}}t.bindTexture(s.TEXTURE_2D,te.__webglTexture,s.TEXTURE0+P)}function we(F,P){const te=n.get(F);if(F.version>0&&te.__version!==F.version){Ze(te,F,P);return}t.bindTexture(s.TEXTURE_2D_ARRAY,te.__webglTexture,s.TEXTURE0+P)}function j(F,P){const te=n.get(F);if(F.version>0&&te.__version!==F.version){Ze(te,F,P);return}t.bindTexture(s.TEXTURE_3D,te.__webglTexture,s.TEXTURE0+P)}function ve(F,P){const te=n.get(F);if(F.version>0&&te.__version!==F.version){At(te,F,P);return}t.bindTexture(s.TEXTURE_CUBE_MAP,te.__webglTexture,s.TEXTURE0+P)}const Me={[zo]:s.REPEAT,[Cn]:s.CLAMP_TO_EDGE,[Ho]:s.MIRRORED_REPEAT},Re={[an]:s.NEAREST,[ou]:s.NEAREST_MIPMAP_NEAREST,[Po]:s.NEAREST_MIPMAP_LINEAR,[on]:s.LINEAR,[Sd]:s.LINEAR_MIPMAP_NEAREST,[Jr]:s.LINEAR_MIPMAP_LINEAR},Ie={[iv]:s.NEVER,[uv]:s.ALWAYS,[rv]:s.LESS,[av]:s.LEQUAL,[sv]:s.EQUAL,[cv]:s.GEQUAL,[ov]:s.GREATER,[lv]:s.NOTEQUAL};function Ge(F,P,te){if(te?(s.texParameteri(F,s.TEXTURE_WRAP_S,Me[P.wrapS]),s.texParameteri(F,s.TEXTURE_WRAP_T,Me[P.wrapT]),(F===s.TEXTURE_3D||F===s.TEXTURE_2D_ARRAY)&&s.texParameteri(F,s.TEXTURE_WRAP_R,Me[P.wrapR]),s.texParameteri(F,s.TEXTURE_MAG_FILTER,Re[P.magFilter]),s.texParameteri(F,s.TEXTURE_MIN_FILTER,Re[P.minFilter])):(s.texParameteri(F,s.TEXTURE_WRAP_S,s.CLAMP_TO_EDGE),s.texParameteri(F,s.TEXTURE_WRAP_T,s.CLAMP_TO_EDGE),(F===s.TEXTURE_3D||F===s.TEXTURE_2D_ARRAY)&&s.texParameteri(F,s.TEXTURE_WRAP_R,s.CLAMP_TO_EDGE),(P.wrapS!==Cn||P.wrapT!==Cn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(F,s.TEXTURE_MAG_FILTER,I(P.magFilter)),s.texParameteri(F,s.TEXTURE_MIN_FILTER,I(P.minFilter)),P.minFilter!==an&&P.minFilter!==on&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(s.texParameteri(F,s.TEXTURE_COMPARE_MODE,s.COMPARE_REF_TO_TEXTURE),s.texParameteri(F,s.TEXTURE_COMPARE_FUNC,Ie[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const be=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===an||P.minFilter!==Po&&P.minFilter!==Jr||P.type===Xi&&e.has("OES_texture_float_linear")===!1||l===!1&&P.type===Ba&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(s.texParameterf(F,be.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function et(F,P){let te=!1;F.__webglInit===void 0&&(F.__webglInit=!0,P.addEventListener("dispose",K));const be=P.source;let ye=y.get(be);ye===void 0&&(ye={},y.set(be,ye));const z=me(P);if(z!==F.__cacheKey){ye[z]===void 0&&(ye[z]={texture:s.createTexture(),usedTimes:0},o.memory.textures++,te=!0),ye[z].usedTimes++;const pe=ye[F.__cacheKey];pe!==void 0&&(ye[F.__cacheKey].usedTimes--,pe.usedTimes===0&&G(P)),F.__cacheKey=z,F.__webglTexture=ye[z].texture}return te}function Ze(F,P,te){let be=s.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(be=s.TEXTURE_2D_ARRAY),P.isData3DTexture&&(be=s.TEXTURE_3D);const ye=et(F,P),z=P.source;t.bindTexture(be,F.__webglTexture,s.TEXTURE0+te);const pe=n.get(z);if(z.version!==pe.__version||ye===!0){t.activeTexture(s.TEXTURE0+te),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,P.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,P.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const xe=T(P)&&w(P.image)===!1;let $=S(P.image,xe,!1,d);$=Lt(P,$);const ze=w($)||l,Ye=r.convert(P.format,P.colorSpace);let Ve=r.convert(P.type),He=N(P.internalFormat,Ye,Ve,P.colorSpace);Ge(be,P,ze);let Fe;const Qe=P.mipmaps,xt=l&&P.isVideoTexture!==!0,W=pe.__version===void 0||ye===!0,Ce=A(P,$,ze);if(P.isDepthTexture)He=s.DEPTH_COMPONENT,l?P.type===Xi?He=s.DEPTH_COMPONENT32F:P.type===Mr?He=s.DEPTH_COMPONENT24:P.type===Xr?He=s.DEPTH24_STENCIL8:He=s.DEPTH_COMPONENT16:P.type===Xi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===qr&&He===s.DEPTH_COMPONENT&&P.type!==pu&&P.type!==Mr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=Mr,Ve=r.convert(P.type)),P.format===Is&&He===s.DEPTH_COMPONENT&&(He=s.DEPTH_STENCIL,P.type!==Xr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=Xr,Ve=r.convert(P.type))),W&&(xt?t.texStorage2D(s.TEXTURE_2D,1,He,$.width,$.height):t.texImage2D(s.TEXTURE_2D,0,He,$.width,$.height,0,Ye,Ve,null));else if(P.isDataTexture)if(Qe.length>0&&ze){xt&&W&&t.texStorage2D(s.TEXTURE_2D,Ce,He,Qe[0].width,Qe[0].height);for(let ee=0,Te=Qe.length;ee<Te;ee++)Fe=Qe[ee],xt?t.texSubImage2D(s.TEXTURE_2D,ee,0,0,Fe.width,Fe.height,Ye,Ve,Fe.data):t.texImage2D(s.TEXTURE_2D,ee,He,Fe.width,Fe.height,0,Ye,Ve,Fe.data);P.generateMipmaps=!1}else xt?(W&&t.texStorage2D(s.TEXTURE_2D,Ce,He,$.width,$.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,$.width,$.height,Ye,Ve,$.data)):t.texImage2D(s.TEXTURE_2D,0,He,$.width,$.height,0,Ye,Ve,$.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){xt&&W&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ce,He,Qe[0].width,Qe[0].height,$.depth);for(let ee=0,Te=Qe.length;ee<Te;ee++)Fe=Qe[ee],P.format!==si?Ye!==null?xt?t.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,ee,0,0,0,Fe.width,Fe.height,$.depth,Ye,Fe.data,0,0):t.compressedTexImage3D(s.TEXTURE_2D_ARRAY,ee,He,Fe.width,Fe.height,$.depth,0,Fe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):xt?t.texSubImage3D(s.TEXTURE_2D_ARRAY,ee,0,0,0,Fe.width,Fe.height,$.depth,Ye,Ve,Fe.data):t.texImage3D(s.TEXTURE_2D_ARRAY,ee,He,Fe.width,Fe.height,$.depth,0,Ye,Ve,Fe.data)}else{xt&&W&&t.texStorage2D(s.TEXTURE_2D,Ce,He,Qe[0].width,Qe[0].height);for(let ee=0,Te=Qe.length;ee<Te;ee++)Fe=Qe[ee],P.format!==si?Ye!==null?xt?t.compressedTexSubImage2D(s.TEXTURE_2D,ee,0,0,Fe.width,Fe.height,Ye,Fe.data):t.compressedTexImage2D(s.TEXTURE_2D,ee,He,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):xt?t.texSubImage2D(s.TEXTURE_2D,ee,0,0,Fe.width,Fe.height,Ye,Ve,Fe.data):t.texImage2D(s.TEXTURE_2D,ee,He,Fe.width,Fe.height,0,Ye,Ve,Fe.data)}else if(P.isDataArrayTexture)xt?(W&&t.texStorage3D(s.TEXTURE_2D_ARRAY,Ce,He,$.width,$.height,$.depth),t.texSubImage3D(s.TEXTURE_2D_ARRAY,0,0,0,0,$.width,$.height,$.depth,Ye,Ve,$.data)):t.texImage3D(s.TEXTURE_2D_ARRAY,0,He,$.width,$.height,$.depth,0,Ye,Ve,$.data);else if(P.isData3DTexture)xt?(W&&t.texStorage3D(s.TEXTURE_3D,Ce,He,$.width,$.height,$.depth),t.texSubImage3D(s.TEXTURE_3D,0,0,0,0,$.width,$.height,$.depth,Ye,Ve,$.data)):t.texImage3D(s.TEXTURE_3D,0,He,$.width,$.height,$.depth,0,Ye,Ve,$.data);else if(P.isFramebufferTexture){if(W)if(xt)t.texStorage2D(s.TEXTURE_2D,Ce,He,$.width,$.height);else{let ee=$.width,Te=$.height;for(let Le=0;Le<Ce;Le++)t.texImage2D(s.TEXTURE_2D,Le,He,ee,Te,0,Ye,Ve,null),ee>>=1,Te>>=1}}else if(Qe.length>0&&ze){xt&&W&&t.texStorage2D(s.TEXTURE_2D,Ce,He,Qe[0].width,Qe[0].height);for(let ee=0,Te=Qe.length;ee<Te;ee++)Fe=Qe[ee],xt?t.texSubImage2D(s.TEXTURE_2D,ee,0,0,Ye,Ve,Fe):t.texImage2D(s.TEXTURE_2D,ee,He,Ye,Ve,Fe);P.generateMipmaps=!1}else xt?(W&&t.texStorage2D(s.TEXTURE_2D,Ce,He,$.width,$.height),t.texSubImage2D(s.TEXTURE_2D,0,0,0,Ye,Ve,$)):t.texImage2D(s.TEXTURE_2D,0,He,Ye,Ve,$);L(P,ze)&&O(be),pe.__version=z.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function At(F,P,te){if(P.image.length!==6)return;const be=et(F,P),ye=P.source;t.bindTexture(s.TEXTURE_CUBE_MAP,F.__webglTexture,s.TEXTURE0+te);const z=n.get(ye);if(ye.version!==z.__version||be===!0){t.activeTexture(s.TEXTURE0+te),s.pixelStorei(s.UNPACK_FLIP_Y_WEBGL,P.flipY),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),s.pixelStorei(s.UNPACK_ALIGNMENT,P.unpackAlignment),s.pixelStorei(s.UNPACK_COLORSPACE_CONVERSION_WEBGL,s.NONE);const pe=P.isCompressedTexture||P.image[0].isCompressedTexture,xe=P.image[0]&&P.image[0].isDataTexture,$=[];for(let ee=0;ee<6;ee++)!pe&&!xe?$[ee]=S(P.image[ee],!1,!0,h):$[ee]=xe?P.image[ee].image:P.image[ee],$[ee]=Lt(P,$[ee]);const ze=$[0],Ye=w(ze)||l,Ve=r.convert(P.format,P.colorSpace),He=r.convert(P.type),Fe=N(P.internalFormat,Ve,He,P.colorSpace),Qe=l&&P.isVideoTexture!==!0,xt=z.__version===void 0||be===!0;let W=A(P,ze,Ye);Ge(s.TEXTURE_CUBE_MAP,P,Ye);let Ce;if(pe){Qe&&xt&&t.texStorage2D(s.TEXTURE_CUBE_MAP,W,Fe,ze.width,ze.height);for(let ee=0;ee<6;ee++){Ce=$[ee].mipmaps;for(let Te=0;Te<Ce.length;Te++){const Le=Ce[Te];P.format!==si?Ve!==null?Qe?t.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,0,0,Le.width,Le.height,Ve,Le.data):t.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,Fe,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Qe?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,0,0,Le.width,Le.height,Ve,He,Le.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,Fe,Le.width,Le.height,0,Ve,He,Le.data)}}}else{Ce=P.mipmaps,Qe&&xt&&(Ce.length>0&&W++,t.texStorage2D(s.TEXTURE_CUBE_MAP,W,Fe,$[0].width,$[0].height));for(let ee=0;ee<6;ee++)if(xe){Qe?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,$[ee].width,$[ee].height,Ve,He,$[ee].data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Fe,$[ee].width,$[ee].height,0,Ve,He,$[ee].data);for(let Te=0;Te<Ce.length;Te++){const wt=Ce[Te].image[ee].image;Qe?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,0,0,wt.width,wt.height,Ve,He,wt.data):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,Fe,wt.width,wt.height,0,Ve,He,wt.data)}}else{Qe?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,Ve,He,$[ee]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Fe,Ve,He,$[ee]);for(let Te=0;Te<Ce.length;Te++){const Le=Ce[Te];Qe?t.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,0,0,Ve,He,Le.image[ee]):t.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,Fe,Ve,He,Le.image[ee])}}}L(P,Ye)&&O(s.TEXTURE_CUBE_MAP),z.__version=ye.version,P.onUpdate&&P.onUpdate(P)}F.__version=P.version}function Je(F,P,te,be,ye){const z=r.convert(te.format,te.colorSpace),pe=r.convert(te.type),xe=N(te.internalFormat,z,pe,te.colorSpace);n.get(P).__hasExternalTextures||(ye===s.TEXTURE_3D||ye===s.TEXTURE_2D_ARRAY?t.texImage3D(ye,0,xe,P.width,P.height,P.depth,0,z,pe,null):t.texImage2D(ye,0,xe,P.width,P.height,0,z,pe,null)),t.bindFramebuffer(s.FRAMEBUFFER,F),Ke(P)?p.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,be,ye,n.get(te).__webglTexture,0,Ne(P)):(ye===s.TEXTURE_2D||ye>=s.TEXTURE_CUBE_MAP_POSITIVE_X&&ye<=s.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&s.framebufferTexture2D(s.FRAMEBUFFER,be,ye,n.get(te).__webglTexture,0),t.bindFramebuffer(s.FRAMEBUFFER,null)}function H(F,P,te){if(s.bindRenderbuffer(s.RENDERBUFFER,F),P.depthBuffer&&!P.stencilBuffer){let be=s.DEPTH_COMPONENT16;if(te||Ke(P)){const ye=P.depthTexture;ye&&ye.isDepthTexture&&(ye.type===Xi?be=s.DEPTH_COMPONENT32F:ye.type===Mr&&(be=s.DEPTH_COMPONENT24));const z=Ne(P);Ke(P)?p.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,z,be,P.width,P.height):s.renderbufferStorageMultisample(s.RENDERBUFFER,z,be,P.width,P.height)}else s.renderbufferStorage(s.RENDERBUFFER,be,P.width,P.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,F)}else if(P.depthBuffer&&P.stencilBuffer){const be=Ne(P);te&&Ke(P)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,be,s.DEPTH24_STENCIL8,P.width,P.height):Ke(P)?p.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,be,s.DEPTH24_STENCIL8,P.width,P.height):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,P.width,P.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,F)}else{const be=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let ye=0;ye<be.length;ye++){const z=be[ye],pe=r.convert(z.format,z.colorSpace),xe=r.convert(z.type),$=N(z.internalFormat,pe,xe,z.colorSpace),ze=Ne(P);te&&Ke(P)===!1?s.renderbufferStorageMultisample(s.RENDERBUFFER,ze,$,P.width,P.height):Ke(P)?p.renderbufferStorageMultisampleEXT(s.RENDERBUFFER,ze,$,P.width,P.height):s.renderbufferStorage(s.RENDERBUFFER,$,P.width,P.height)}}s.bindRenderbuffer(s.RENDERBUFFER,null)}function Ee(F,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(s.FRAMEBUFFER,F),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),_e(P.depthTexture,0);const be=n.get(P.depthTexture).__webglTexture,ye=Ne(P);if(P.depthTexture.format===qr)Ke(P)?p.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,be,0,ye):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.TEXTURE_2D,be,0);else if(P.depthTexture.format===Is)Ke(P)?p.framebufferTexture2DMultisampleEXT(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,be,0,ye):s.framebufferTexture2D(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.TEXTURE_2D,be,0);else throw new Error("Unknown depthTexture format")}function re(F){const P=n.get(F),te=F.isWebGLCubeRenderTarget===!0;if(F.depthTexture&&!P.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");Ee(P.__webglFramebuffer,F)}else if(te){P.__webglDepthbuffer=[];for(let be=0;be<6;be++)t.bindFramebuffer(s.FRAMEBUFFER,P.__webglFramebuffer[be]),P.__webglDepthbuffer[be]=s.createRenderbuffer(),H(P.__webglDepthbuffer[be],F,!1)}else t.bindFramebuffer(s.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=s.createRenderbuffer(),H(P.__webglDepthbuffer,F,!1);t.bindFramebuffer(s.FRAMEBUFFER,null)}function Se(F,P,te){const be=n.get(F);P!==void 0&&Je(be.__webglFramebuffer,F,F.texture,s.COLOR_ATTACHMENT0,s.TEXTURE_2D),te!==void 0&&re(F)}function de(F){const P=F.texture,te=n.get(F),be=n.get(P);F.addEventListener("dispose",ne),F.isWebGLMultipleRenderTargets!==!0&&(be.__webglTexture===void 0&&(be.__webglTexture=s.createTexture()),be.__version=P.version,o.memory.textures++);const ye=F.isWebGLCubeRenderTarget===!0,z=F.isWebGLMultipleRenderTargets===!0,pe=w(F)||l;if(ye){te.__webglFramebuffer=[];for(let xe=0;xe<6;xe++)te.__webglFramebuffer[xe]=s.createFramebuffer()}else{if(te.__webglFramebuffer=s.createFramebuffer(),z)if(i.drawBuffers){const xe=F.texture;for(let $=0,ze=xe.length;$<ze;$++){const Ye=n.get(xe[$]);Ye.__webglTexture===void 0&&(Ye.__webglTexture=s.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(l&&F.samples>0&&Ke(F)===!1){const xe=z?P:[P];te.__webglMultisampledFramebuffer=s.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(s.FRAMEBUFFER,te.__webglMultisampledFramebuffer);for(let $=0;$<xe.length;$++){const ze=xe[$];te.__webglColorRenderbuffer[$]=s.createRenderbuffer(),s.bindRenderbuffer(s.RENDERBUFFER,te.__webglColorRenderbuffer[$]);const Ye=r.convert(ze.format,ze.colorSpace),Ve=r.convert(ze.type),He=N(ze.internalFormat,Ye,Ve,ze.colorSpace,F.isXRRenderTarget===!0),Fe=Ne(F);s.renderbufferStorageMultisample(s.RENDERBUFFER,Fe,He,F.width,F.height),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+$,s.RENDERBUFFER,te.__webglColorRenderbuffer[$])}s.bindRenderbuffer(s.RENDERBUFFER,null),F.depthBuffer&&(te.__webglDepthRenderbuffer=s.createRenderbuffer(),H(te.__webglDepthRenderbuffer,F,!0)),t.bindFramebuffer(s.FRAMEBUFFER,null)}}if(ye){t.bindTexture(s.TEXTURE_CUBE_MAP,be.__webglTexture),Ge(s.TEXTURE_CUBE_MAP,P,pe);for(let xe=0;xe<6;xe++)Je(te.__webglFramebuffer[xe],F,P,s.COLOR_ATTACHMENT0,s.TEXTURE_CUBE_MAP_POSITIVE_X+xe);L(P,pe)&&O(s.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(z){const xe=F.texture;for(let $=0,ze=xe.length;$<ze;$++){const Ye=xe[$],Ve=n.get(Ye);t.bindTexture(s.TEXTURE_2D,Ve.__webglTexture),Ge(s.TEXTURE_2D,Ye,pe),Je(te.__webglFramebuffer,F,Ye,s.COLOR_ATTACHMENT0+$,s.TEXTURE_2D),L(Ye,pe)&&O(s.TEXTURE_2D)}t.unbindTexture()}else{let xe=s.TEXTURE_2D;(F.isWebGL3DRenderTarget||F.isWebGLArrayRenderTarget)&&(l?xe=F.isWebGL3DRenderTarget?s.TEXTURE_3D:s.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(xe,be.__webglTexture),Ge(xe,P,pe),Je(te.__webglFramebuffer,F,P,s.COLOR_ATTACHMENT0,xe),L(P,pe)&&O(xe),t.unbindTexture()}F.depthBuffer&&re(F)}function De(F){const P=w(F)||l,te=F.isWebGLMultipleRenderTargets===!0?F.texture:[F.texture];for(let be=0,ye=te.length;be<ye;be++){const z=te[be];if(L(z,P)){const pe=F.isWebGLCubeRenderTarget?s.TEXTURE_CUBE_MAP:s.TEXTURE_2D,xe=n.get(z).__webglTexture;t.bindTexture(pe,xe),O(pe),t.unbindTexture()}}}function Ue(F){if(l&&F.samples>0&&Ke(F)===!1){const P=F.isWebGLMultipleRenderTargets?F.texture:[F.texture],te=F.width,be=F.height;let ye=s.COLOR_BUFFER_BIT;const z=[],pe=F.stencilBuffer?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT,xe=n.get(F),$=F.isWebGLMultipleRenderTargets===!0;if($)for(let ze=0;ze<P.length;ze++)t.bindFramebuffer(s.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ze,s.RENDERBUFFER,null),t.bindFramebuffer(s.FRAMEBUFFER,xe.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ze,s.TEXTURE_2D,null,0);t.bindFramebuffer(s.READ_FRAMEBUFFER,xe.__webglMultisampledFramebuffer),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,xe.__webglFramebuffer);for(let ze=0;ze<P.length;ze++){z.push(s.COLOR_ATTACHMENT0+ze),F.depthBuffer&&z.push(pe);const Ye=xe.__ignoreDepthValues!==void 0?xe.__ignoreDepthValues:!1;if(Ye===!1&&(F.depthBuffer&&(ye|=s.DEPTH_BUFFER_BIT),F.stencilBuffer&&(ye|=s.STENCIL_BUFFER_BIT)),$&&s.framebufferRenderbuffer(s.READ_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,xe.__webglColorRenderbuffer[ze]),Ye===!0&&(s.invalidateFramebuffer(s.READ_FRAMEBUFFER,[pe]),s.invalidateFramebuffer(s.DRAW_FRAMEBUFFER,[pe])),$){const Ve=n.get(P[ze]).__webglTexture;s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.TEXTURE_2D,Ve,0)}s.blitFramebuffer(0,0,te,be,0,0,te,be,ye,s.NEAREST),g&&s.invalidateFramebuffer(s.READ_FRAMEBUFFER,z)}if(t.bindFramebuffer(s.READ_FRAMEBUFFER,null),t.bindFramebuffer(s.DRAW_FRAMEBUFFER,null),$)for(let ze=0;ze<P.length;ze++){t.bindFramebuffer(s.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+ze,s.RENDERBUFFER,xe.__webglColorRenderbuffer[ze]);const Ye=n.get(P[ze]).__webglTexture;t.bindFramebuffer(s.FRAMEBUFFER,xe.__webglFramebuffer),s.framebufferTexture2D(s.DRAW_FRAMEBUFFER,s.COLOR_ATTACHMENT0+ze,s.TEXTURE_2D,Ye,0)}t.bindFramebuffer(s.DRAW_FRAMEBUFFER,xe.__webglMultisampledFramebuffer)}}function Ne(F){return Math.min(m,F.samples)}function Ke(F){const P=n.get(F);return l&&F.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function it(F){const P=o.render.frame;v.get(F)!==P&&(v.set(F,P),F.update())}function Lt(F,P){const te=F.colorSpace,be=F.format,ye=F.type;return F.isCompressedTexture===!0||F.format===lu||te!==Di&&te!==Yr&&(te===ht?l===!1?e.has("EXT_sRGB")===!0&&be===si?(F.format=lu,F.minFilter=on,F.generateMipmaps=!1):P=Id.sRGBToLinear(P):(be!==si||ye!==Er)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",te)),P}this.allocateTextureUnit=le,this.resetTextureUnits=ie,this.setTexture2D=_e,this.setTexture2DArray=we,this.setTexture3D=j,this.setTextureCube=ve,this.rebindTextures=Se,this.setupRenderTarget=de,this.updateRenderTargetMipmap=De,this.updateMultisampleRenderTarget=Ue,this.setupDepthRenderbuffer=re,this.setupFrameBufferTexture=Je,this.useMultisampledRTT=Ke}function bv(s,e,t){const n=t.isWebGL2;function i(r,o=Yr){let l;if(r===Er)return s.UNSIGNED_BYTE;if(r===Ed)return s.UNSIGNED_SHORT_4_4_4_4;if(r===wd)return s.UNSIGNED_SHORT_5_5_5_1;if(r===k0)return s.BYTE;if(r===G0)return s.SHORT;if(r===pu)return s.UNSIGNED_SHORT;if(r===bd)return s.INT;if(r===Mr)return s.UNSIGNED_INT;if(r===Xi)return s.FLOAT;if(r===Ba)return n?s.HALF_FLOAT:(l=e.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(r===V0)return s.ALPHA;if(r===si)return s.RGBA;if(r===W0)return s.LUMINANCE;if(r===X0)return s.LUMINANCE_ALPHA;if(r===qr)return s.DEPTH_COMPONENT;if(r===Is)return s.DEPTH_STENCIL;if(r===lu)return l=e.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(r===q0)return s.RED;if(r===Td)return s.RED_INTEGER;if(r===Y0)return s.RG;if(r===Ad)return s.RG_INTEGER;if(r===Rd)return s.RGBA_INTEGER;if(r===Kc||r===Jc||r===$c||r===Qc)if(o===ht)if(l=e.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(r===Kc)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Jc)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===$c)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Qc)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=e.get("WEBGL_compressed_texture_s3tc"),l!==null){if(r===Kc)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Jc)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===$c)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Qc)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===Nf||r===Of||r===Ff||r===Bf)if(l=e.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(r===Nf)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Of)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Ff)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Bf)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Z0)return l=e.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===zf||r===Hf)if(l=e.get("WEBGL_compressed_texture_etc"),l!==null){if(r===zf)return o===ht?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(r===Hf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===kf||r===Gf||r===Vf||r===Wf||r===Xf||r===qf||r===Yf||r===Zf||r===Kf||r===Jf||r===$f||r===Qf||r===jf||r===ed)if(l=e.get("WEBGL_compressed_texture_astc"),l!==null){if(r===kf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Gf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===Vf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Wf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Xf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===qf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Yf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Zf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Kf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Jf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===$f)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Qf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===jf)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===ed)return o===ht?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===jc)if(l=e.get("EXT_texture_compression_bptc"),l!==null){if(r===jc)return o===ht?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(r===K0||r===td||r===nd||r===id)if(l=e.get("EXT_texture_compression_rgtc"),l!==null){if(r===jc)return l.COMPRESSED_RED_RGTC1_EXT;if(r===td)return l.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(r===nd)return l.COMPRESSED_RED_GREEN_RGTC2_EXT;if(r===id)return l.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return r===Xr?n?s.UNSIGNED_INT_24_8:(l=e.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return{convert:i}}class Ev extends yn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Ua extends Ct{constructor(){super(),this.isGroup=!0,this.type="Group"}}const RL={type:"move"};class hf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Ua,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Ua,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new U,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new U),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Ua,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new U,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new U),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,o=null;const l=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const M of e.hand.values()){const y=t.getJointPose(M,n),_=this._getHandJoint(h,M);y!==null&&(_.matrix.fromArray(y.transform.matrix),_.matrix.decompose(_.position,_.rotation,_.scale),_.matrixWorldNeedsUpdate=!0,_.jointRadius=y.radius),_.visible=y!==null}const d=h.joints["index-finger-tip"],m=h.joints["thumb-tip"],p=d.position.distanceTo(m.position),g=.02,v=.005;h.inputState.pinching&&p>g+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&p<=g-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));l!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(RL)))}return l!==null&&(l.visible=i!==null),u!==null&&(u.visible=r!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new Ua;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class wv extends ln{constructor(e,t,n,i,r,o,l,u,h,d){if(d=d!==void 0?d:qr,d!==qr&&d!==Is)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===qr&&(n=Mr),n===void 0&&d===Is&&(n=Xr),super(null,i,r,o,l,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=l!==void 0?l:an,this.minFilter=u!==void 0?u:an,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class CL extends $i{constructor(e,t){super();const n=this;let i=null,r=1,o=null,l="local-floor",u=1,h=null,d=null,m=null,p=null,g=null,v=null;const M=t.getContextAttributes();let y=null,_=null;const b=[],S=[];let w=null;const T=new yn;T.layers.enable(1),T.viewport=new Nt;const L=new yn;L.layers.enable(2),L.viewport=new Nt;const O=[T,L],N=new Ev;N.layers.enable(1),N.layers.enable(2);let A=null,I=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(j){w=j},this.getController=function(j){let ve=b[j];return ve===void 0&&(ve=new hf,b[j]=ve),ve.getTargetRaySpace()},this.getControllerGrip=function(j){let ve=b[j];return ve===void 0&&(ve=new hf,b[j]=ve),ve.getGripSpace()},this.getHand=function(j){let ve=b[j];return ve===void 0&&(ve=new hf,b[j]=ve),ve.getHandSpace()};function K(j){const ve=S.indexOf(j.inputSource);if(ve===-1)return;const Me=b[ve];Me!==void 0&&(Me.update(j.inputSource,j.frame,h||o),Me.dispatchEvent({type:j.type,data:j.inputSource}))}function ne(){i.removeEventListener("select",K),i.removeEventListener("selectstart",K),i.removeEventListener("selectend",K),i.removeEventListener("squeeze",K),i.removeEventListener("squeezestart",K),i.removeEventListener("squeezeend",K),i.removeEventListener("end",ne),i.removeEventListener("inputsourceschange",X);for(let j=0;j<b.length;j++){const ve=S[j];ve!==null&&(S[j]=null,b[j].disconnect(ve))}A=null,I=null,e.setRenderTarget(y),g=null,p=null,m=null,i=null,_=null,we.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){r=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){l=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||o},this.setReferenceSpace=function(j){h=j},this.getBaseLayer=function(){return p!==null?p:g},this.getBinding=function(){return m},this.getFrame=function(){return v},this.getSession=function(){return i},this.setSession=async function(j){if(i=j,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",K),i.addEventListener("selectstart",K),i.addEventListener("selectend",K),i.addEventListener("squeeze",K),i.addEventListener("squeezestart",K),i.addEventListener("squeezeend",K),i.addEventListener("end",ne),i.addEventListener("inputsourceschange",X),M.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ve={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:r};g=new XRWebGLLayer(i,t,ve),i.updateRenderState({baseLayer:g}),_=new Ni(g.framebufferWidth,g.framebufferHeight,{format:si,type:Er,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil})}else{let ve=null,Me=null,Re=null;M.depth&&(Re=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ve=M.stencil?Is:qr,Me=M.stencil?Xr:Mr);const Ie={colorFormat:t.RGBA8,depthFormat:Re,scaleFactor:r};m=new XRWebGLBinding(i,t),p=m.createProjectionLayer(Ie),i.updateRenderState({layers:[p]}),_=new Ni(p.textureWidth,p.textureHeight,{format:si,type:Er,depthTexture:new wv(p.textureWidth,p.textureHeight,Me,void 0,void 0,void 0,void 0,void 0,void 0,ve),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0});const Ge=e.properties.get(_);Ge.__ignoreDepthValues=p.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(u),h=null,o=await i.requestReferenceSpace(l),we.setContext(i),we.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function X(j){for(let ve=0;ve<j.removed.length;ve++){const Me=j.removed[ve],Re=S.indexOf(Me);Re>=0&&(S[Re]=null,b[Re].disconnect(Me))}for(let ve=0;ve<j.added.length;ve++){const Me=j.added[ve];let Re=S.indexOf(Me);if(Re===-1){for(let Ge=0;Ge<b.length;Ge++)if(Ge>=S.length){S.push(Me),Re=Ge;break}else if(S[Ge]===null){S[Ge]=Me,Re=Ge;break}if(Re===-1)break}const Ie=b[Re];Ie&&Ie.connect(Me)}}const G=new U,V=new U;function fe(j,ve,Me){G.setFromMatrixPosition(ve.matrixWorld),V.setFromMatrixPosition(Me.matrixWorld);const Re=G.distanceTo(V),Ie=ve.projectionMatrix.elements,Ge=Me.projectionMatrix.elements,et=Ie[14]/(Ie[10]-1),Ze=Ie[14]/(Ie[10]+1),At=(Ie[9]+1)/Ie[5],Je=(Ie[9]-1)/Ie[5],H=(Ie[8]-1)/Ie[0],Ee=(Ge[8]+1)/Ge[0],re=et*H,Se=et*Ee,de=Re/(-H+Ee),De=de*-H;ve.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(De),j.translateZ(de),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const Ue=et+de,Ne=Ze+de,Ke=re-De,it=Se+(Re-De),Lt=At*Ze/Ne*Ue,F=Je*Ze/Ne*Ue;j.projectionMatrix.makePerspective(Ke,it,Lt,F,Ue,Ne),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}function ie(j,ve){ve===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(ve.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCameraXR=function(j){if(i===null)return j;w&&(j=w),N.near=L.near=T.near=j.near,N.far=L.far=T.far=j.far,(A!==N.near||I!==N.far)&&(i.updateRenderState({depthNear:N.near,depthFar:N.far}),A=N.near,I=N.far);const ve=j.parent,Me=N.cameras;ie(N,ve);for(let Re=0;Re<Me.length;Re++)ie(Me[Re],ve);return Me.length===2?fe(N,T,L):N.projectionMatrix.copy(T.projectionMatrix),w&&le(N,ve),N};function le(j,ve){const Me=w;ve===null?Me.matrix.copy(j.matrixWorld):(Me.matrix.copy(ve.matrixWorld),Me.matrix.invert(),Me.matrix.multiply(j.matrixWorld)),Me.matrix.decompose(Me.position,Me.quaternion,Me.scale),Me.updateMatrixWorld(!0);const Re=Me.children;for(let Ie=0,Ge=Re.length;Ie<Ge;Ie++)Re[Ie].updateMatrixWorld(!0);Me.projectionMatrix.copy(j.projectionMatrix),Me.projectionMatrixInverse.copy(j.projectionMatrixInverse),Me.isPerspectiveCamera&&(Me.fov=za*2*Math.atan(1/Me.projectionMatrix.elements[5]),Me.zoom=1)}this.getFoveation=function(){if(!(p===null&&g===null))return u},this.setFoveation=function(j){u=j,p!==null&&(p.fixedFoveation=j),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=j)};let me=null;function _e(j,ve){if(d=ve.getViewerPose(h||o),v=ve,d!==null){const Me=d.views;g!==null&&(e.setRenderTargetFramebuffer(_,g.framebuffer),e.setRenderTarget(_));let Re=!1;Me.length!==N.cameras.length&&(N.cameras.length=0,Re=!0);for(let Ie=0;Ie<Me.length;Ie++){const Ge=Me[Ie];let et=null;if(g!==null)et=g.getViewport(Ge);else{const At=m.getViewSubImage(p,Ge);et=At.viewport,Ie===0&&(e.setRenderTargetTextures(_,At.colorTexture,p.ignoreDepthValues?void 0:At.depthStencilTexture),e.setRenderTarget(_))}let Ze=O[Ie];Ze===void 0&&(Ze=new yn,Ze.layers.enable(Ie),Ze.viewport=new Nt,O[Ie]=Ze),Ze.matrix.fromArray(Ge.transform.matrix),Ze.matrix.decompose(Ze.position,Ze.quaternion,Ze.scale),Ze.projectionMatrix.fromArray(Ge.projectionMatrix),Ze.projectionMatrixInverse.copy(Ze.projectionMatrix).invert(),Ze.viewport.set(et.x,et.y,et.width,et.height),Ie===0&&(N.matrix.copy(Ze.matrix),N.matrix.decompose(N.position,N.quaternion,N.scale)),Re===!0&&N.cameras.push(Ze)}}for(let Me=0;Me<b.length;Me++){const Re=S[Me],Ie=b[Me];Re!==null&&Ie!==void 0&&Ie.update(Re,ve,h||o)}me&&me(j,ve),ve.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ve}),v=null}const we=new vv;we.setAnimationLoop(_e),this.setAnimationLoop=function(j){me=j},this.dispose=function(){}}}function PL(s,e){function t(y,_){y.matrixAutoUpdate===!0&&y.updateMatrix(),_.value.copy(y.matrix)}function n(y,_){_.color.getRGB(y.fogColor.value,pv(s)),_.isFog?(y.fogNear.value=_.near,y.fogFar.value=_.far):_.isFogExp2&&(y.fogDensity.value=_.density)}function i(y,_,b,S,w){_.isMeshBasicMaterial||_.isMeshLambertMaterial?r(y,_):_.isMeshToonMaterial?(r(y,_),m(y,_)):_.isMeshPhongMaterial?(r(y,_),d(y,_)):_.isMeshStandardMaterial?(r(y,_),p(y,_),_.isMeshPhysicalMaterial&&g(y,_,w)):_.isMeshMatcapMaterial?(r(y,_),v(y,_)):_.isMeshDepthMaterial?r(y,_):_.isMeshDistanceMaterial?(r(y,_),M(y,_)):_.isMeshNormalMaterial?r(y,_):_.isLineBasicMaterial?(o(y,_),_.isLineDashedMaterial&&l(y,_)):_.isPointsMaterial?u(y,_,b,S):_.isSpriteMaterial?h(y,_):_.isShadowMaterial?(y.color.value.copy(_.color),y.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function r(y,_){y.opacity.value=_.opacity,_.color&&y.diffuse.value.copy(_.color),_.emissive&&y.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.bumpMap&&(y.bumpMap.value=_.bumpMap,t(_.bumpMap,y.bumpMapTransform),y.bumpScale.value=_.bumpScale,_.side===kn&&(y.bumpScale.value*=-1)),_.normalMap&&(y.normalMap.value=_.normalMap,t(_.normalMap,y.normalMapTransform),y.normalScale.value.copy(_.normalScale),_.side===kn&&y.normalScale.value.negate()),_.displacementMap&&(y.displacementMap.value=_.displacementMap,t(_.displacementMap,y.displacementMapTransform),y.displacementScale.value=_.displacementScale,y.displacementBias.value=_.displacementBias),_.emissiveMap&&(y.emissiveMap.value=_.emissiveMap,t(_.emissiveMap,y.emissiveMapTransform)),_.specularMap&&(y.specularMap.value=_.specularMap,t(_.specularMap,y.specularMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest);const b=e.get(_).envMap;if(b&&(y.envMap.value=b,y.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=_.reflectivity,y.ior.value=_.ior,y.refractionRatio.value=_.refractionRatio),_.lightMap){y.lightMap.value=_.lightMap;const S=s.useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=_.lightMapIntensity*S,t(_.lightMap,y.lightMapTransform)}_.aoMap&&(y.aoMap.value=_.aoMap,y.aoMapIntensity.value=_.aoMapIntensity,t(_.aoMap,y.aoMapTransform))}function o(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform))}function l(y,_){y.dashSize.value=_.dashSize,y.totalSize.value=_.dashSize+_.gapSize,y.scale.value=_.scale}function u(y,_,b,S){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.size.value=_.size*b,y.scale.value=S*.5,_.map&&(y.map.value=_.map,t(_.map,y.uvTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function h(y,_){y.diffuse.value.copy(_.color),y.opacity.value=_.opacity,y.rotation.value=_.rotation,_.map&&(y.map.value=_.map,t(_.map,y.mapTransform)),_.alphaMap&&(y.alphaMap.value=_.alphaMap,t(_.alphaMap,y.alphaMapTransform)),_.alphaTest>0&&(y.alphaTest.value=_.alphaTest)}function d(y,_){y.specular.value.copy(_.specular),y.shininess.value=Math.max(_.shininess,1e-4)}function m(y,_){_.gradientMap&&(y.gradientMap.value=_.gradientMap)}function p(y,_){y.metalness.value=_.metalness,_.metalnessMap&&(y.metalnessMap.value=_.metalnessMap,t(_.metalnessMap,y.metalnessMapTransform)),y.roughness.value=_.roughness,_.roughnessMap&&(y.roughnessMap.value=_.roughnessMap,t(_.roughnessMap,y.roughnessMapTransform)),e.get(_).envMap&&(y.envMapIntensity.value=_.envMapIntensity)}function g(y,_,b){y.ior.value=_.ior,_.sheen>0&&(y.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),y.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(y.sheenColorMap.value=_.sheenColorMap,t(_.sheenColorMap,y.sheenColorMapTransform)),_.sheenRoughnessMap&&(y.sheenRoughnessMap.value=_.sheenRoughnessMap,t(_.sheenRoughnessMap,y.sheenRoughnessMapTransform))),_.clearcoat>0&&(y.clearcoat.value=_.clearcoat,y.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(y.clearcoatMap.value=_.clearcoatMap,t(_.clearcoatMap,y.clearcoatMapTransform)),_.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap,t(_.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),_.clearcoatNormalMap&&(y.clearcoatNormalMap.value=_.clearcoatNormalMap,t(_.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),_.side===kn&&y.clearcoatNormalScale.value.negate())),_.iridescence>0&&(y.iridescence.value=_.iridescence,y.iridescenceIOR.value=_.iridescenceIOR,y.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(y.iridescenceMap.value=_.iridescenceMap,t(_.iridescenceMap,y.iridescenceMapTransform)),_.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=_.iridescenceThicknessMap,t(_.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),_.transmission>0&&(y.transmission.value=_.transmission,y.transmissionSamplerMap.value=b.texture,y.transmissionSamplerSize.value.set(b.width,b.height),_.transmissionMap&&(y.transmissionMap.value=_.transmissionMap,t(_.transmissionMap,y.transmissionMapTransform)),y.thickness.value=_.thickness,_.thicknessMap&&(y.thicknessMap.value=_.thicknessMap,t(_.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=_.attenuationDistance,y.attenuationColor.value.copy(_.attenuationColor)),_.anisotropy>0&&(y.anisotropyVector.value.set(_.anisotropy*Math.cos(_.anisotropyRotation),_.anisotropy*Math.sin(_.anisotropyRotation)),_.anisotropyMap&&(y.anisotropyMap.value=_.anisotropyMap,t(_.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=_.specularIntensity,y.specularColor.value.copy(_.specularColor),_.specularColorMap&&(y.specularColorMap.value=_.specularColorMap,t(_.specularColorMap,y.specularColorMapTransform)),_.specularIntensityMap&&(y.specularIntensityMap.value=_.specularIntensityMap,t(_.specularIntensityMap,y.specularIntensityMapTransform))}function v(y,_){_.matcap&&(y.matcap.value=_.matcap)}function M(y,_){const b=e.get(_).light;y.referencePosition.value.setFromMatrixPosition(b.matrixWorld),y.nearDistance.value=b.shadow.camera.near,y.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function LL(s,e,t,n){let i={},r={},o=[];const l=t.isWebGL2?s.getParameter(s.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(b,S){const w=S.program;n.uniformBlockBinding(b,w)}function h(b,S){let w=i[b.id];w===void 0&&(v(b),w=d(b),i[b.id]=w,b.addEventListener("dispose",y));const T=S.program;n.updateUBOMapping(b,T);const L=e.render.frame;r[b.id]!==L&&(p(b),r[b.id]=L)}function d(b){const S=m();b.__bindingPointIndex=S;const w=s.createBuffer(),T=b.__size,L=b.usage;return s.bindBuffer(s.UNIFORM_BUFFER,w),s.bufferData(s.UNIFORM_BUFFER,T,L),s.bindBuffer(s.UNIFORM_BUFFER,null),s.bindBufferBase(s.UNIFORM_BUFFER,S,w),w}function m(){for(let b=0;b<l;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(b){const S=i[b.id],w=b.uniforms,T=b.__cache;s.bindBuffer(s.UNIFORM_BUFFER,S);for(let L=0,O=w.length;L<O;L++){const N=w[L];if(g(N,L,T)===!0){const A=N.__offset,I=Array.isArray(N.value)?N.value:[N.value];let K=0;for(let ne=0;ne<I.length;ne++){const X=I[ne],G=M(X);typeof X=="number"?(N.__data[0]=X,s.bufferSubData(s.UNIFORM_BUFFER,A+K,N.__data)):X.isMatrix3?(N.__data[0]=X.elements[0],N.__data[1]=X.elements[1],N.__data[2]=X.elements[2],N.__data[3]=X.elements[0],N.__data[4]=X.elements[3],N.__data[5]=X.elements[4],N.__data[6]=X.elements[5],N.__data[7]=X.elements[0],N.__data[8]=X.elements[6],N.__data[9]=X.elements[7],N.__data[10]=X.elements[8],N.__data[11]=X.elements[0]):(X.toArray(N.__data,K),K+=G.storage/Float32Array.BYTES_PER_ELEMENT)}s.bufferSubData(s.UNIFORM_BUFFER,A,N.__data)}}s.bindBuffer(s.UNIFORM_BUFFER,null)}function g(b,S,w){const T=b.value;if(w[S]===void 0){if(typeof T=="number")w[S]=T;else{const L=Array.isArray(T)?T:[T],O=[];for(let N=0;N<L.length;N++)O.push(L[N].clone());w[S]=O}return!0}else if(typeof T=="number"){if(w[S]!==T)return w[S]=T,!0}else{const L=Array.isArray(w[S])?w[S]:[w[S]],O=Array.isArray(T)?T:[T];for(let N=0;N<L.length;N++){const A=L[N];if(A.equals(O[N])===!1)return A.copy(O[N]),!0}}return!1}function v(b){const S=b.uniforms;let w=0;const T=16;let L=0;for(let O=0,N=S.length;O<N;O++){const A=S[O],I={boundary:0,storage:0},K=Array.isArray(A.value)?A.value:[A.value];for(let ne=0,X=K.length;ne<X;ne++){const G=K[ne],V=M(G);I.boundary+=V.boundary,I.storage+=V.storage}if(A.__data=new Float32Array(I.storage/Float32Array.BYTES_PER_ELEMENT),A.__offset=w,O>0){L=w%T;const ne=T-L;L!==0&&ne-I.boundary<0&&(w+=T-L,A.__offset=w)}w+=I.storage}return L=w%T,L>0&&(w+=T-L),b.__size=w,b.__cache={},this}function M(b){const S={boundary:0,storage:0};return typeof b=="number"?(S.boundary=4,S.storage=4):b.isVector2?(S.boundary=8,S.storage=8):b.isVector3||b.isColor?(S.boundary=16,S.storage=12):b.isVector4?(S.boundary=16,S.storage=16):b.isMatrix3?(S.boundary=48,S.storage=48):b.isMatrix4?(S.boundary=64,S.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),S}function y(b){const S=b.target;S.removeEventListener("dispose",y);const w=o.indexOf(S.__bindingPointIndex);o.splice(w,1),s.deleteBuffer(i[S.id]),delete i[S.id],delete r[S.id]}function _(){for(const b in i)s.deleteBuffer(i[b]);o=[],i={},r={}}return{bind:u,update:h,dispose:_}}function IL(){const s=Yo("canvas");return s.style.display="block",s}class zd{constructor(e={}){const{canvas:t=IL(),context:n=null,depth:i=!0,stencil:r=!0,alpha:o=!1,antialias:l=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:m=!1}=e;this.isWebGLRenderer=!0;let p;n!==null?p=n.getContextAttributes().alpha:p=o;const g=new Uint32Array(4),v=new Int32Array(4);let M=null,y=null;const _=[],b=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ht,this.useLegacyLights=!0,this.toneMapping=Yi,this.toneMappingExposure=1;const S=this;let w=!1,T=0,L=0,O=null,N=-1,A=null;const I=new Nt,K=new Nt;let ne=null;const X=new Oe(0);let G=0,V=t.width,fe=t.height,ie=1,le=null,me=null;const _e=new Nt(0,0,V,fe),we=new Nt(0,0,V,fe);let j=!1;const ve=new vu;let Me=!1,Re=!1,Ie=null;const Ge=new ot,et=new ce,Ze=new U,At={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Je(){return O===null?ie:1}let H=n;function Ee(D,J){for(let se=0;se<D.length;se++){const Z=D[se],oe=t.getContext(Z,J);if(oe!==null)return oe}return null}try{const D={alpha:!0,depth:i,stencil:r,antialias:l,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:m};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${hu}`),t.addEventListener("webglcontextlost",Ce,!1),t.addEventListener("webglcontextrestored",ee,!1),t.addEventListener("webglcontextcreationerror",Te,!1),H===null){const J=["webgl2","webgl","experimental-webgl"];if(S.isWebGL1Renderer===!0&&J.shift(),H=Ee(J,D),H===null)throw Ee(J)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}H instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),H.getShaderPrecisionFormat===void 0&&(H.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let re,Se,de,De,Ue,Ne,Ke,it,Lt,F,P,te,be,ye,z,pe,xe,$,ze,Ye,Ve,He,Fe,Qe;function xt(){re=new ZC(H),Se=new GC(H,re,e),re.init(Se),He=new bv(H,re,Se),de=new TL(H,re,Se),De=new $C(H),Ue=new pL,Ne=new AL(H,re,de,Ue,Se,He,De),Ke=new WC(S),it=new YC(S),Lt=new cA(H,Se),Fe=new HC(H,re,Lt,Se),F=new KC(H,Lt,De,Fe),P=new tP(H,F,Lt,De),ze=new eP(H,Se,Ne),pe=new VC(Ue),te=new dL(S,Ke,it,re,Se,Fe,pe),be=new PL(S,Ue),ye=new gL,z=new SL(re,Se),$=new zC(S,Ke,it,de,P,p,u),xe=new wL(S,P,Se),Qe=new LL(H,De,Se,de),Ye=new kC(H,re,De,Se),Ve=new JC(H,re,De,Se),De.programs=te.programs,S.capabilities=Se,S.extensions=re,S.properties=Ue,S.renderLists=ye,S.shadowMap=xe,S.state=de,S.info=De}xt();const W=new CL(S,H);this.xr=W,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){const D=re.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=re.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return ie},this.setPixelRatio=function(D){D!==void 0&&(ie=D,this.setSize(V,fe,!1))},this.getSize=function(D){return D.set(V,fe)},this.setSize=function(D,J,se=!0){if(W.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}V=D,fe=J,t.width=Math.floor(D*ie),t.height=Math.floor(J*ie),se===!0&&(t.style.width=D+"px",t.style.height=J+"px"),this.setViewport(0,0,D,J)},this.getDrawingBufferSize=function(D){return D.set(V*ie,fe*ie).floor()},this.setDrawingBufferSize=function(D,J,se){V=D,fe=J,ie=se,t.width=Math.floor(D*se),t.height=Math.floor(J*se),this.setViewport(0,0,D,J)},this.getCurrentViewport=function(D){return D.copy(I)},this.getViewport=function(D){return D.copy(_e)},this.setViewport=function(D,J,se,Z){D.isVector4?_e.set(D.x,D.y,D.z,D.w):_e.set(D,J,se,Z),de.viewport(I.copy(_e).multiplyScalar(ie).floor())},this.getScissor=function(D){return D.copy(we)},this.setScissor=function(D,J,se,Z){D.isVector4?we.set(D.x,D.y,D.z,D.w):we.set(D,J,se,Z),de.scissor(K.copy(we).multiplyScalar(ie).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(D){de.setScissorTest(j=D)},this.setOpaqueSort=function(D){le=D},this.setTransparentSort=function(D){me=D},this.getClearColor=function(D){return D.copy($.getClearColor())},this.setClearColor=function(){$.setClearColor.apply($,arguments)},this.getClearAlpha=function(){return $.getClearAlpha()},this.setClearAlpha=function(){$.setClearAlpha.apply($,arguments)},this.clear=function(D=!0,J=!0,se=!0){let Z=0;if(D){let oe=!1;if(O!==null){const ke=O.texture.format;oe=ke===Rd||ke===Ad||ke===Td}if(oe){const ke=O.texture.type,$e=ke===Er||ke===Mr||ke===pu||ke===Xr||ke===Ed||ke===wd,st=$.getClearColor(),rt=$.getClearAlpha(),_t=st.r,at=st.g,ut=st.b,Ft=Ue.get(O).__webglFramebuffer;$e?(g[0]=_t,g[1]=at,g[2]=ut,g[3]=rt,H.clearBufferuiv(H.COLOR,Ft,g)):(v[0]=_t,v[1]=at,v[2]=ut,v[3]=rt,H.clearBufferiv(H.COLOR,Ft,v))}else Z|=H.COLOR_BUFFER_BIT}J&&(Z|=H.DEPTH_BUFFER_BIT),se&&(Z|=H.STENCIL_BUFFER_BIT),H.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ce,!1),t.removeEventListener("webglcontextrestored",ee,!1),t.removeEventListener("webglcontextcreationerror",Te,!1),ye.dispose(),z.dispose(),Ue.dispose(),Ke.dispose(),it.dispose(),P.dispose(),Fe.dispose(),Qe.dispose(),te.dispose(),W.dispose(),W.removeEventListener("sessionstart",Vt),W.removeEventListener("sessionend",ci),Ie&&(Ie.dispose(),Ie=null),Sn.stop()};function Ce(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),w=!0}function ee(){console.log("THREE.WebGLRenderer: Context Restored."),w=!1;const D=De.autoReset,J=xe.enabled,se=xe.autoUpdate,Z=xe.needsUpdate,oe=xe.type;xt(),De.autoReset=D,xe.enabled=J,xe.autoUpdate=se,xe.needsUpdate=Z,xe.type=oe}function Te(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function Le(D){const J=D.target;J.removeEventListener("dispose",Le),wt(J)}function wt(D){Gt(D),Ue.remove(D)}function Gt(D){const J=Ue.get(D).programs;J!==void 0&&(J.forEach(function(se){te.releaseProgram(se)}),D.isShaderMaterial&&te.releaseShaderCache(D))}this.renderBufferDirect=function(D,J,se,Z,oe,ke){J===null&&(J=At);const $e=oe.isMesh&&oe.matrixWorld.determinant()<0,st=Lu(D,J,se,Z,oe);de.setMaterial(Z,$e);let rt=se.index,_t=1;Z.wireframe===!0&&(rt=F.getWireframeAttribute(se),_t=2);const at=se.drawRange,ut=se.attributes.position;let Ft=at.start*_t,Yt=(at.start+at.count)*_t;ke!==null&&(Ft=Math.max(Ft,ke.start*_t),Yt=Math.min(Yt,(ke.start+ke.count)*_t)),rt!==null?(Ft=Math.max(Ft,0),Yt=Math.min(Yt,rt.count)):ut!=null&&(Ft=Math.max(Ft,0),Yt=Math.min(Yt,ut.count));const Vn=Yt-Ft;if(Vn<0||Vn===1/0)return;Fe.setup(oe,Z,st,se,rt);let ui,Zt=Ye;if(rt!==null&&(ui=Lt.get(rt),Zt=Ve,Zt.setIndex(ui)),oe.isMesh)Z.wireframe===!0?(de.setLineWidth(Z.wireframeLinewidth*Je()),Zt.setMode(H.LINES)):Zt.setMode(H.TRIANGLES);else if(oe.isLine){let St=Z.linewidth;St===void 0&&(St=1),de.setLineWidth(St*Je()),oe.isLineSegments?Zt.setMode(H.LINES):oe.isLineLoop?Zt.setMode(H.LINE_LOOP):Zt.setMode(H.LINE_STRIP)}else oe.isPoints?Zt.setMode(H.POINTS):oe.isSprite&&Zt.setMode(H.TRIANGLES);if(oe.isInstancedMesh)Zt.renderInstances(Ft,Vn,oe.count);else if(se.isInstancedBufferGeometry){const St=se._maxInstanceCount!==void 0?se._maxInstanceCount:1/0,$a=Math.min(se.instanceCount,St);Zt.renderInstances(Ft,Vn,$a)}else Zt.render(Ft,Vn)},this.compile=function(D,J){function se(Z,oe,ke){Z.transparent===!0&&Z.side===Wi&&Z.forceSinglePass===!1?(Z.side=kn,Z.needsUpdate=!0,Xs(Z,oe,ke),Z.side=Tr,Z.needsUpdate=!0,Xs(Z,oe,ke),Z.side=Wi):Xs(Z,oe,ke)}y=z.get(D),y.init(),b.push(y),D.traverseVisible(function(Z){Z.isLight&&Z.layers.test(J.layers)&&(y.pushLight(Z),Z.castShadow&&y.pushShadow(Z))}),y.setupLights(S.useLegacyLights),D.traverse(function(Z){const oe=Z.material;if(oe)if(Array.isArray(oe))for(let ke=0;ke<oe.length;ke++){const $e=oe[ke];se($e,D,Z)}else se(oe,D,Z)}),b.pop(),y=null};let $t=null;function zi(D){$t&&$t(D)}function Vt(){Sn.stop()}function ci(){Sn.start()}const Sn=new vv;Sn.setAnimationLoop(zi),typeof self<"u"&&Sn.setContext(self),this.setAnimationLoop=function(D){$t=D,W.setAnimationLoop(D),D===null?Sn.stop():Sn.start()},W.addEventListener("sessionstart",Vt),W.addEventListener("sessionend",ci),this.render=function(D,J){if(J!==void 0&&J.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(w===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),J.parent===null&&J.matrixWorldAutoUpdate===!0&&J.updateMatrixWorld(),W.enabled===!0&&W.isPresenting===!0&&(J=W.updateCameraXR(J)),D.isScene===!0&&D.onBeforeRender(S,D,J,O),y=z.get(D,b.length),y.init(),b.push(y),Ge.multiplyMatrices(J.projectionMatrix,J.matrixWorldInverse),ve.setFromProjectionMatrix(Ge),Re=this.localClippingEnabled,Me=pe.init(this.clippingPlanes,Re),M=ye.get(D,_.length),M.init(),_.push(M),Vs(D,J,0,S.sortObjects),M.finish(),S.sortObjects===!0&&M.sort(le,me),Me===!0&&pe.beginShadows();const se=y.state.shadowsArray;if(xe.render(se,D,J),Me===!0&&pe.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,$.render(M,D),y.setupLights(S.useLegacyLights),J.isArrayCamera){const Z=J.cameras;for(let oe=0,ke=Z.length;oe<ke;oe++){const $e=Z[oe];xl(M,D,$e,$e.viewport)}}else xl(M,D,J);O!==null&&(Ne.updateMultisampleRenderTarget(O),Ne.updateRenderTargetMipmap(O)),D.isScene===!0&&D.onAfterRender(S,D,J),Fe.resetDefaultState(),N=-1,A=null,b.pop(),b.length>0?y=b[b.length-1]:y=null,_.pop(),_.length>0?M=_[_.length-1]:M=null};function Vs(D,J,se,Z){if(D.visible===!1)return;if(D.layers.test(J.layers)){if(D.isGroup)se=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(J);else if(D.isLight)y.pushLight(D),D.castShadow&&y.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||ve.intersectsSprite(D)){Z&&Ze.setFromMatrixPosition(D.matrixWorld).applyMatrix4(Ge);const $e=P.update(D),st=D.material;st.visible&&M.push(D,$e,st,se,Ze.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||ve.intersectsObject(D))){D.isSkinnedMesh&&D.skeleton.frame!==De.render.frame&&(D.skeleton.update(),D.skeleton.frame=De.render.frame);const $e=P.update(D),st=D.material;if(Z&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),Ze.copy(D.boundingSphere.center)):($e.boundingSphere===null&&$e.computeBoundingSphere(),Ze.copy($e.boundingSphere.center)),Ze.applyMatrix4(D.matrixWorld).applyMatrix4(Ge)),Array.isArray(st)){const rt=$e.groups;for(let _t=0,at=rt.length;_t<at;_t++){const ut=rt[_t],Ft=st[ut.materialIndex];Ft&&Ft.visible&&M.push(D,$e,Ft,se,Ze.z,ut)}}else st.visible&&M.push(D,$e,st,se,Ze.z,null)}}const ke=D.children;for(let $e=0,st=ke.length;$e<st;$e++)Vs(ke[$e],J,se,Z)}function xl(D,J,se,Z){const oe=D.opaque,ke=D.transmissive,$e=D.transparent;y.setupLightsView(se),Me===!0&&pe.setGlobalState(S.clippingPlanes,se),ke.length>0&&Ja(oe,ke,J,se),Z&&de.viewport(I.copy(Z)),oe.length>0&&Ws(oe,J,se),ke.length>0&&Ws(ke,J,se),$e.length>0&&Ws($e,J,se),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function Ja(D,J,se,Z){const oe=Se.isWebGL2;Ie===null&&(Ie=new Ni(1,1,{generateMipmaps:!0,type:re.has("EXT_color_buffer_half_float")?Ba:Er,minFilter:Jr,samples:oe&&l===!0?4:0})),S.getDrawingBufferSize(et),oe?Ie.setSize(et.x,et.y):Ie.setSize(cu(et.x),cu(et.y));const ke=S.getRenderTarget();S.setRenderTarget(Ie),S.getClearColor(X),G=S.getClearAlpha(),G<1&&S.setClearColor(16777215,.5),S.clear();const $e=S.toneMapping;S.toneMapping=Yi,Ws(D,se,Z),Ne.updateMultisampleRenderTarget(Ie),Ne.updateRenderTargetMipmap(Ie);let st=!1;for(let rt=0,_t=J.length;rt<_t;rt++){const at=J[rt],ut=at.object,Ft=at.geometry,Yt=at.material,Vn=at.group;if(Yt.side===Wi&&ut.layers.test(Z.layers)){const ui=Yt.side;Yt.side=kn,Yt.needsUpdate=!0,Ml(ut,se,Z,Ft,Yt,Vn),Yt.side=ui,Yt.needsUpdate=!0,st=!0}}st===!0&&(Ne.updateMultisampleRenderTarget(Ie),Ne.updateRenderTargetMipmap(Ie)),S.setRenderTarget(ke),S.setClearColor(X,G),S.toneMapping=$e}function Ws(D,J,se){const Z=J.isScene===!0?J.overrideMaterial:null;for(let oe=0,ke=D.length;oe<ke;oe++){const $e=D[oe],st=$e.object,rt=$e.geometry,_t=Z===null?$e.material:Z,at=$e.group;st.layers.test(se.layers)&&Ml(st,J,se,rt,_t,at)}}function Ml(D,J,se,Z,oe,ke){D.onBeforeRender(S,J,se,Z,oe,ke),D.modelViewMatrix.multiplyMatrices(se.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),oe.onBeforeRender(S,J,se,Z,D,ke),oe.transparent===!0&&oe.side===Wi&&oe.forceSinglePass===!1?(oe.side=kn,oe.needsUpdate=!0,S.renderBufferDirect(se,J,Z,oe,D,ke),oe.side=Tr,oe.needsUpdate=!0,S.renderBufferDirect(se,J,Z,oe,D,ke),oe.side=Wi):S.renderBufferDirect(se,J,Z,oe,D,ke),D.onAfterRender(S,J,se,Z,oe,ke)}function Xs(D,J,se){J.isScene!==!0&&(J=At);const Z=Ue.get(D),oe=y.state.lights,ke=y.state.shadowsArray,$e=oe.state.version,st=te.getParameters(D,oe.state,ke,J,se),rt=te.getProgramCacheKey(st);let _t=Z.programs;Z.environment=D.isMeshStandardMaterial?J.environment:null,Z.fog=J.fog,Z.envMap=(D.isMeshStandardMaterial?it:Ke).get(D.envMap||Z.environment),_t===void 0&&(D.addEventListener("dispose",Le),_t=new Map,Z.programs=_t);let at=_t.get(rt);if(at!==void 0){if(Z.currentProgram===at&&Z.lightsStateVersion===$e)return Sl(D,st),at}else st.uniforms=te.getUniforms(D),D.onBuild(se,st,S),D.onBeforeCompile(st,S),at=te.acquireProgram(st,rt),_t.set(rt,at),Z.uniforms=st.uniforms;const ut=Z.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(ut.clippingPlanes=pe.uniform),Sl(D,st),Z.needsLights=Uu(D),Z.lightsStateVersion=$e,Z.needsLights&&(ut.ambientLightColor.value=oe.state.ambient,ut.lightProbe.value=oe.state.probe,ut.directionalLights.value=oe.state.directional,ut.directionalLightShadows.value=oe.state.directionalShadow,ut.spotLights.value=oe.state.spot,ut.spotLightShadows.value=oe.state.spotShadow,ut.rectAreaLights.value=oe.state.rectArea,ut.ltc_1.value=oe.state.rectAreaLTC1,ut.ltc_2.value=oe.state.rectAreaLTC2,ut.pointLights.value=oe.state.point,ut.pointLightShadows.value=oe.state.pointShadow,ut.hemisphereLights.value=oe.state.hemi,ut.directionalShadowMap.value=oe.state.directionalShadowMap,ut.directionalShadowMatrix.value=oe.state.directionalShadowMatrix,ut.spotShadowMap.value=oe.state.spotShadowMap,ut.spotLightMatrix.value=oe.state.spotLightMatrix,ut.spotLightMap.value=oe.state.spotLightMap,ut.pointShadowMap.value=oe.state.pointShadowMap,ut.pointShadowMatrix.value=oe.state.pointShadowMatrix);const Ft=at.getUniforms(),Yt=nu.seqWithValue(Ft.seq,ut);return Z.currentProgram=at,Z.uniformsList=Yt,at}function Sl(D,J){const se=Ue.get(D);se.outputColorSpace=J.outputColorSpace,se.instancing=J.instancing,se.skinning=J.skinning,se.morphTargets=J.morphTargets,se.morphNormals=J.morphNormals,se.morphColors=J.morphColors,se.morphTargetsCount=J.morphTargetsCount,se.numClippingPlanes=J.numClippingPlanes,se.numIntersection=J.numClipIntersection,se.vertexAlphas=J.vertexAlphas,se.vertexTangents=J.vertexTangents,se.toneMapping=J.toneMapping}function Lu(D,J,se,Z,oe){J.isScene!==!0&&(J=At),Ne.resetTextureUnits();const ke=J.fog,$e=Z.isMeshStandardMaterial?J.environment:null,st=O===null?S.outputColorSpace:O.isXRRenderTarget===!0?O.texture.colorSpace:Di,rt=(Z.isMeshStandardMaterial?it:Ke).get(Z.envMap||$e),_t=Z.vertexColors===!0&&!!se.attributes.color&&se.attributes.color.itemSize===4,at=!!se.attributes.tangent&&(!!Z.normalMap||Z.anisotropy>0),ut=!!se.morphAttributes.position,Ft=!!se.morphAttributes.normal,Yt=!!se.morphAttributes.color,Vn=Z.toneMapped?S.toneMapping:Yi,ui=se.morphAttributes.position||se.morphAttributes.normal||se.morphAttributes.color,Zt=ui!==void 0?ui.length:0,St=Ue.get(Z),$a=y.state.lights;if(Me===!0&&(Re===!0||D!==A)){const gn=D===A&&Z.id===N;pe.setState(Z,D,gn)}let cn=!1;Z.version===St.__version?(St.needsLights&&St.lightsStateVersion!==$a.state.version||St.outputColorSpace!==st||oe.isInstancedMesh&&St.instancing===!1||!oe.isInstancedMesh&&St.instancing===!0||oe.isSkinnedMesh&&St.skinning===!1||!oe.isSkinnedMesh&&St.skinning===!0||St.envMap!==rt||Z.fog===!0&&St.fog!==ke||St.numClippingPlanes!==void 0&&(St.numClippingPlanes!==pe.numPlanes||St.numIntersection!==pe.numIntersection)||St.vertexAlphas!==_t||St.vertexTangents!==at||St.morphTargets!==ut||St.morphNormals!==Ft||St.morphColors!==Yt||St.toneMapping!==Vn||Se.isWebGL2===!0&&St.morphTargetsCount!==Zt)&&(cn=!0):(cn=!0,St.__version=Z.version);let er=St.currentProgram;cn===!0&&(er=Xs(Z,J,oe));let Qa=!1,Cr=!1,qs=!1;const hn=er.getUniforms(),tr=St.uniforms;if(de.useProgram(er.program)&&(Qa=!0,Cr=!0,qs=!0),Z.id!==N&&(N=Z.id,Cr=!0),Qa||A!==D){if(hn.setValue(H,"projectionMatrix",D.projectionMatrix),Se.logarithmicDepthBuffer&&hn.setValue(H,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),A!==D&&(A=D,Cr=!0,qs=!0),Z.isShaderMaterial||Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshStandardMaterial||Z.envMap){const gn=hn.map.cameraPosition;gn!==void 0&&gn.setValue(H,Ze.setFromMatrixPosition(D.matrixWorld))}(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&hn.setValue(H,"isOrthographic",D.isOrthographicCamera===!0),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial||Z.isShadowMaterial||oe.isSkinnedMesh)&&hn.setValue(H,"viewMatrix",D.matrixWorldInverse)}if(oe.isSkinnedMesh){hn.setOptional(H,oe,"bindMatrix"),hn.setOptional(H,oe,"bindMatrixInverse");const gn=oe.skeleton;gn&&(Se.floatVertexTextures?(gn.boneTexture===null&&gn.computeBoneTexture(),hn.setValue(H,"boneTexture",gn.boneTexture,Ne),hn.setValue(H,"boneTextureSize",gn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Ys=se.morphAttributes;if((Ys.position!==void 0||Ys.normal!==void 0||Ys.color!==void 0&&Se.isWebGL2===!0)&&ze.update(oe,se,er),(Cr||St.receiveShadow!==oe.receiveShadow)&&(St.receiveShadow=oe.receiveShadow,hn.setValue(H,"receiveShadow",oe.receiveShadow)),Z.isMeshGouraudMaterial&&Z.envMap!==null&&(tr.envMap.value=rt,tr.flipEnvMap.value=rt.isCubeTexture&&rt.isRenderTargetTexture===!1?-1:1),Cr&&(hn.setValue(H,"toneMappingExposure",S.toneMappingExposure),St.needsLights&&Iu(tr,qs),ke&&Z.fog===!0&&be.refreshFogUniforms(tr,ke),be.refreshMaterialUniforms(tr,Z,ie,fe,Ie),nu.upload(H,St.uniformsList,tr,Ne)),Z.isShaderMaterial&&Z.uniformsNeedUpdate===!0&&(nu.upload(H,St.uniformsList,tr,Ne),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&hn.setValue(H,"center",oe.center),hn.setValue(H,"modelViewMatrix",oe.modelViewMatrix),hn.setValue(H,"normalMatrix",oe.normalMatrix),hn.setValue(H,"modelMatrix",oe.matrixWorld),Z.isShaderMaterial||Z.isRawShaderMaterial){const gn=Z.uniformsGroups;for(let Zs=0,Du=gn.length;Zs<Du;Zs++)if(Se.isWebGL2){const ja=gn[Zs];Qe.update(ja,er),Qe.bind(ja,er)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return er}function Iu(D,J){D.ambientLightColor.needsUpdate=J,D.lightProbe.needsUpdate=J,D.directionalLights.needsUpdate=J,D.directionalLightShadows.needsUpdate=J,D.pointLights.needsUpdate=J,D.pointLightShadows.needsUpdate=J,D.spotLights.needsUpdate=J,D.spotLightShadows.needsUpdate=J,D.rectAreaLights.needsUpdate=J,D.hemisphereLights.needsUpdate=J}function Uu(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return T},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return O},this.setRenderTargetTextures=function(D,J,se){Ue.get(D.texture).__webglTexture=J,Ue.get(D.depthTexture).__webglTexture=se;const Z=Ue.get(D);Z.__hasExternalTextures=!0,Z.__hasExternalTextures&&(Z.__autoAllocateDepthBuffer=se===void 0,Z.__autoAllocateDepthBuffer||re.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,J){const se=Ue.get(D);se.__webglFramebuffer=J,se.__useDefaultFramebuffer=J===void 0},this.setRenderTarget=function(D,J=0,se=0){O=D,T=J,L=se;let Z=!0,oe=null,ke=!1,$e=!1;if(D){const rt=Ue.get(D);rt.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(H.FRAMEBUFFER,null),Z=!1):rt.__webglFramebuffer===void 0?Ne.setupRenderTarget(D):rt.__hasExternalTextures&&Ne.rebindTextures(D,Ue.get(D.texture).__webglTexture,Ue.get(D.depthTexture).__webglTexture);const _t=D.texture;(_t.isData3DTexture||_t.isDataArrayTexture||_t.isCompressedArrayTexture)&&($e=!0);const at=Ue.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(oe=at[J],ke=!0):Se.isWebGL2&&D.samples>0&&Ne.useMultisampledRTT(D)===!1?oe=Ue.get(D).__webglMultisampledFramebuffer:oe=at,I.copy(D.viewport),K.copy(D.scissor),ne=D.scissorTest}else I.copy(_e).multiplyScalar(ie).floor(),K.copy(we).multiplyScalar(ie).floor(),ne=j;if(de.bindFramebuffer(H.FRAMEBUFFER,oe)&&Se.drawBuffers&&Z&&de.drawBuffers(D,oe),de.viewport(I),de.scissor(K),de.setScissorTest(ne),ke){const rt=Ue.get(D.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+J,rt.__webglTexture,se)}else if($e){const rt=Ue.get(D.texture),_t=J||0;H.framebufferTextureLayer(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,rt.__webglTexture,se||0,_t)}N=-1},this.readRenderTargetPixels=function(D,J,se,Z,oe,ke,$e){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let st=Ue.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&$e!==void 0&&(st=st[$e]),st){de.bindFramebuffer(H.FRAMEBUFFER,st);try{const rt=D.texture,_t=rt.format,at=rt.type;if(_t!==si&&He.convert(_t)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const ut=at===Ba&&(re.has("EXT_color_buffer_half_float")||Se.isWebGL2&&re.has("EXT_color_buffer_float"));if(at!==Er&&He.convert(at)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_TYPE)&&!(at===Xi&&(Se.isWebGL2||re.has("OES_texture_float")||re.has("WEBGL_color_buffer_float")))&&!ut){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}J>=0&&J<=D.width-Z&&se>=0&&se<=D.height-oe&&H.readPixels(J,se,Z,oe,He.convert(_t),He.convert(at),ke)}finally{const rt=O!==null?Ue.get(O).__webglFramebuffer:null;de.bindFramebuffer(H.FRAMEBUFFER,rt)}}},this.copyFramebufferToTexture=function(D,J,se=0){const Z=Math.pow(2,-se),oe=Math.floor(J.image.width*Z),ke=Math.floor(J.image.height*Z);Ne.setTexture2D(J,0),H.copyTexSubImage2D(H.TEXTURE_2D,se,0,0,D.x,D.y,oe,ke),de.unbindTexture()},this.copyTextureToTexture=function(D,J,se,Z=0){const oe=J.image.width,ke=J.image.height,$e=He.convert(se.format),st=He.convert(se.type);Ne.setTexture2D(se,0),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,se.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,se.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,se.unpackAlignment),J.isDataTexture?H.texSubImage2D(H.TEXTURE_2D,Z,D.x,D.y,oe,ke,$e,st,J.image.data):J.isCompressedTexture?H.compressedTexSubImage2D(H.TEXTURE_2D,Z,D.x,D.y,J.mipmaps[0].width,J.mipmaps[0].height,$e,J.mipmaps[0].data):H.texSubImage2D(H.TEXTURE_2D,Z,D.x,D.y,$e,st,J.image),Z===0&&se.generateMipmaps&&H.generateMipmap(H.TEXTURE_2D),de.unbindTexture()},this.copyTextureToTexture3D=function(D,J,se,Z,oe=0){if(S.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ke=D.max.x-D.min.x+1,$e=D.max.y-D.min.y+1,st=D.max.z-D.min.z+1,rt=He.convert(Z.format),_t=He.convert(Z.type);let at;if(Z.isData3DTexture)Ne.setTexture3D(Z,0),at=H.TEXTURE_3D;else if(Z.isDataArrayTexture)Ne.setTexture2DArray(Z,0),at=H.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,Z.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,Z.unpackAlignment);const ut=H.getParameter(H.UNPACK_ROW_LENGTH),Ft=H.getParameter(H.UNPACK_IMAGE_HEIGHT),Yt=H.getParameter(H.UNPACK_SKIP_PIXELS),Vn=H.getParameter(H.UNPACK_SKIP_ROWS),ui=H.getParameter(H.UNPACK_SKIP_IMAGES),Zt=se.isCompressedTexture?se.mipmaps[0]:se.image;H.pixelStorei(H.UNPACK_ROW_LENGTH,Zt.width),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Zt.height),H.pixelStorei(H.UNPACK_SKIP_PIXELS,D.min.x),H.pixelStorei(H.UNPACK_SKIP_ROWS,D.min.y),H.pixelStorei(H.UNPACK_SKIP_IMAGES,D.min.z),se.isDataTexture||se.isData3DTexture?H.texSubImage3D(at,oe,J.x,J.y,J.z,ke,$e,st,rt,_t,Zt.data):se.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),H.compressedTexSubImage3D(at,oe,J.x,J.y,J.z,ke,$e,st,rt,Zt.data)):H.texSubImage3D(at,oe,J.x,J.y,J.z,ke,$e,st,rt,_t,Zt),H.pixelStorei(H.UNPACK_ROW_LENGTH,ut),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Ft),H.pixelStorei(H.UNPACK_SKIP_PIXELS,Yt),H.pixelStorei(H.UNPACK_SKIP_ROWS,Vn),H.pixelStorei(H.UNPACK_SKIP_IMAGES,ui),oe===0&&Z.generateMipmaps&&H.generateMipmap(at),de.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?Ne.setTextureCube(D,0):D.isData3DTexture?Ne.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?Ne.setTexture2DArray(D,0):Ne.setTexture2D(D,0),de.unbindTexture()},this.resetState=function(){T=0,L=0,O=null,de.reset(),Fe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return qi}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ht?wr:Wo}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===wr?ht:Di}}class Tv extends zd{}Tv.prototype.isWebGL1Renderer=!0;class Mu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Oe(e),this.density=t}clone(){return new Mu(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Su{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Oe(e),this.near=t,this.far=n}clone(){return new Su(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}let Hd=class extends Ct{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}};class bu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Xo,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=oi()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=oi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=oi()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Nn=new U;class Us{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyMatrix4(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.applyNormalMatrix(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Nn.fromBufferAttribute(this,t),Nn.transformDirection(e),this.setXYZ(t,Nn.x,Nn.y,Nn.z);return this}setX(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=gt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ai(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ai(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ai(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ai(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=gt(t,this.array),n=gt(n,this.array),i=gt(i,this.array),r=gt(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new zt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Us(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class kd extends Ln{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let wa;const xo=new U,Ta=new U,Aa=new U,Ra=new ce,Mo=new ce,Av=new ot,Rc=new U,So=new U,Cc=new U,f_=new ce,ff=new ce,d_=new ce;class Rv extends Ct{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",wa===void 0){wa=new yt;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new bu(t,5);wa.setIndex([0,1,2,0,2,3]),wa.setAttribute("position",new Us(n,3,0,!1)),wa.setAttribute("uv",new Us(n,2,3,!1))}this.geometry=wa,this.material=e!==void 0?e:new kd,this.center=new ce(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ta.setFromMatrixScale(this.matrixWorld),Av.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Aa.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ta.multiplyScalar(-Aa.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const o=this.center;Pc(Rc.set(-.5,-.5,0),Aa,o,Ta,i,r),Pc(So.set(.5,-.5,0),Aa,o,Ta,i,r),Pc(Cc.set(.5,.5,0),Aa,o,Ta,i,r),f_.set(0,0),ff.set(1,0),d_.set(1,1);let l=e.ray.intersectTriangle(Rc,So,Cc,!1,xo);if(l===null&&(Pc(So.set(-.5,.5,0),Aa,o,Ta,i,r),ff.set(0,1),l=e.ray.intersectTriangle(Rc,Cc,So,!1,xo),l===null))return;const u=e.ray.origin.distanceTo(xo);u<e.near||u>e.far||t.push({distance:u,point:xo.clone(),uv:Kn.getInterpolation(xo,Rc,So,Cc,f_,ff,d_,new ce),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function Pc(s,e,t,n,i,r){Ra.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(Mo.x=r*Ra.x-i*Ra.y,Mo.y=i*Ra.x+r*Ra.y):Mo.copy(Ra),s.copy(e),s.x+=Mo.x,s.y+=Mo.y,s.applyMatrix4(Av)}const Lc=new U,p_=new U;class Cv extends Ct{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance,r.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let r;for(r=0;r<i.length&&!(t<i[r].distance);r++);return i.splice(r,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let r=t[n].distance;if(t[n].object.visible&&(r-=r*t[n].hysteresis),e<r)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Lc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Lc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Lc.setFromMatrixPosition(e.matrixWorld),p_.setFromMatrixPosition(this.matrixWorld);const n=Lc.distanceTo(p_)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const m_=new U,g_=new Nt,__=new Nt,UL=new U,v_=new ot,Ca=new U,df=new Oi,y_=new ot,pf=new Va;class Pv extends xn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ot,this.bindMatrixInverse=new ot,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new Qi),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Ca.fromBufferAttribute(t,n),this.applyBoneTransform(n,Ca),this.boundingBox.expandByPoint(Ca)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Oi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Ca.fromBufferAttribute(t,n),this.applyBoneTransform(n,Ca),this.boundingSphere.expandByPoint(Ca)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),df.copy(this.boundingSphere),df.applyMatrix4(i),e.ray.intersectsSphere(df)!==!1&&(y_.copy(i).invert(),pf.copy(e.ray).applyMatrix4(y_),!(this.boundingBox!==null&&pf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,pf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Nt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;g_.fromBufferAttribute(i.attributes.skinIndex,e),__.fromBufferAttribute(i.attributes.skinWeight,e),m_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const o=__.getComponent(r);if(o!==0){const l=g_.getComponent(r);v_.multiplyMatrices(n.bones[l].matrixWorld,n.boneInverses[l]),t.addScaledVector(UL.copy(m_).applyMatrix4(v_),o)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class Gd extends Ct{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Oa extends ln{constructor(e=null,t=1,n=1,i,r,o,l,u,h=an,d=an,m,p){super(null,o,l,u,h,d,i,r,m,p),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const x_=new ot,DL=new ot;class Eu{constructor(e=[],t=[]){this.uuid=oi(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ot)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ot;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,o=e.length;r<o;r++){const l=e[r]?e[r].matrixWorld:DL;x_.multiplyMatrices(l,t[r]),x_.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Eu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=hv(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Oa(t,e,e,si,Xi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let o=t[r];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),o=new Gd),this.bones.push(o),this.boneInverses.push(new ot().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const o=t[i];e.bones.push(o.uuid);const l=n[i];e.boneInverses.push(l.toArray())}return e}}class ka extends zt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Pa=new ot,M_=new ot,Ic=[],S_=new Qi,NL=new ot,bo=new xn,Eo=new Oi;class Lv extends xn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new ka(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,NL)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new Qi),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Pa),S_.copy(e.boundingBox).applyMatrix4(Pa),this.boundingBox.union(S_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Oi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Pa),Eo.copy(e.boundingSphere).applyMatrix4(Pa),this.boundingSphere.union(Eo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(bo.geometry=this.geometry,bo.material=this.material,bo.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Eo.copy(this.boundingSphere),Eo.applyMatrix4(n),e.ray.intersectsSphere(Eo)!==!1))for(let r=0;r<i;r++){this.getMatrixAt(r,Pa),M_.multiplyMatrices(n,Pa),bo.matrixWorld=M_,bo.raycast(e,Ic);for(let o=0,l=Ic.length;o<l;o++){const u=Ic[o];u.instanceId=r,u.object=this,t.push(u)}Ic.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ka(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Gn extends Ln{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Oe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const b_=new U,E_=new U,w_=new ot,mf=new Va,Uc=new Oi;class $r extends Ct{constructor(e=new yt,t=new Gn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)b_.fromBufferAttribute(t,i-1),E_.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=b_.distanceTo(E_);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Uc.copy(n.boundingSphere),Uc.applyMatrix4(i),Uc.radius+=r,e.ray.intersectsSphere(Uc)===!1)return;w_.copy(i).invert(),mf.copy(e.ray).applyMatrix4(w_);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,h=new U,d=new U,m=new U,p=new U,g=this.isLineSegments?2:1,v=n.index,y=n.attributes.position;if(v!==null){const _=Math.max(0,o.start),b=Math.min(v.count,o.start+o.count);for(let S=_,w=b-1;S<w;S+=g){const T=v.getX(S),L=v.getX(S+1);if(h.fromBufferAttribute(y,T),d.fromBufferAttribute(y,L),mf.distanceSqToSegment(h,d,p,m)>u)continue;p.applyMatrix4(this.matrixWorld);const N=e.ray.origin.distanceTo(p);N<e.near||N>e.far||t.push({distance:N,point:m.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}else{const _=Math.max(0,o.start),b=Math.min(y.count,o.start+o.count);for(let S=_,w=b-1;S<w;S+=g){if(h.fromBufferAttribute(y,S),d.fromBufferAttribute(y,S+1),mf.distanceSqToSegment(h,d,p,m)>u)continue;p.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(p);L<e.near||L>e.far||t.push({distance:L,point:m.clone().applyMatrix4(this.matrixWorld),index:S,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}}const T_=new U,A_=new U;class ji extends $r{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)T_.fromBufferAttribute(t,i),A_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+T_.distanceTo(A_);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Iv extends $r{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class Vd extends Ln{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const R_=new ot,ld=new Va,Dc=new Oi,Nc=new U;class Uv extends Ct{constructor(e=new yt,t=new Vd){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Dc.copy(n.boundingSphere),Dc.applyMatrix4(i),Dc.radius+=r,e.ray.intersectsSphere(Dc)===!1)return;R_.copy(i).invert(),ld.copy(e.ray).applyMatrix4(R_);const l=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=l*l,h=n.index,m=n.attributes.position;if(h!==null){const p=Math.max(0,o.start),g=Math.min(h.count,o.start+o.count);for(let v=p,M=g;v<M;v++){const y=h.getX(v);Nc.fromBufferAttribute(m,y),C_(Nc,y,u,i,e,t,this)}}else{const p=Math.max(0,o.start),g=Math.min(m.count,o.start+o.count);for(let v=p,M=g;v<M;v++)Nc.fromBufferAttribute(m,v),C_(Nc,v,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,o=i.length;r<o;r++){const l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}}function C_(s,e,t,n,i,r,o){const l=ld.distanceSqToPoint(s);if(l<t){const u=new U;ld.closestPointToPoint(s,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(l),point:u,index:e,face:null,object:o})}}class OL extends ln{constructor(e,t,n,i,r,o,l,u,h){super(e,t,n,i,r,o,l,u,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:on,this.magFilter=r!==void 0?r:on,this.generateMipmaps=!1;const d=this;function m(){d.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class FL extends ln{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=an,this.minFilter=an,this.generateMipmaps=!1,this.needsUpdate=!0}}class Wd extends ln{constructor(e,t,n,i,r,o,l,u,h,d,m,p){super(null,o,l,u,h,d,i,r,m,p),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class BL extends Wd{constructor(e,t,n,i,r,o){super(e,t,n,r,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Cn}}class zL extends ln{constructor(e,t,n,i,r,o,l,u,h){super(e,t,n,i,r,o,l,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Fi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let o;t?o=t:o=e*n[r-1];let l=0,u=r-1,h;for(;l<=u;)if(i=Math.floor(l+(u-l)/2),h=n[i]-o,h<0)l=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===o)return i/(r-1);const d=n[i],p=n[i+1]-d,g=(o-d)/p;return(i+g)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const o=this.getPoint(i),l=this.getPoint(r),u=t||(o.isVector2?new ce:new U);return u.copy(l).sub(o).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new U,i=[],r=[],o=[],l=new U,u=new ot;for(let g=0;g<=e;g++){const v=g/e;i[g]=this.getTangentAt(v,new U)}r[0]=new U,o[0]=new U;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),m=Math.abs(i[0].y),p=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),m<=h&&(h=m,n.set(0,1,0)),p<=h&&n.set(0,0,1),l.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],l),o[0].crossVectors(i[0],r[0]);for(let g=1;g<=e;g++){if(r[g]=r[g-1].clone(),o[g]=o[g-1].clone(),l.crossVectors(i[g-1],i[g]),l.length()>Number.EPSILON){l.normalize();const v=Math.acos(tn(i[g-1].dot(i[g]),-1,1));r[g].applyMatrix4(u.makeRotationAxis(l,v))}o[g].crossVectors(i[g],r[g])}if(t===!0){let g=Math.acos(tn(r[0].dot(r[e]),-1,1));g/=e,i[0].dot(l.crossVectors(r[0],r[e]))>0&&(g=-g);for(let v=1;v<=e;v++)r[v].applyMatrix4(u.makeRotationAxis(i[v],g*v)),o[v].crossVectors(i[v],r[v])}return{tangents:i,normals:r,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class wu extends Fi{constructor(e=0,t=0,n=1,i=1,r=0,o=Math.PI*2,l=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=o,this.aClockwise=l,this.aRotation=u}getPoint(e,t){const n=t||new ce,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const o=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(o?r=0:r=i),this.aClockwise===!0&&!o&&(r===i?r=-i:r=r-i);const l=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(l),h=this.aY+this.yRadius*Math.sin(l);if(this.aRotation!==0){const d=Math.cos(this.aRotation),m=Math.sin(this.aRotation),p=u-this.aX,g=h-this.aY;u=p*d-g*m+this.aX,h=p*m+g*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class Dv extends wu{constructor(e,t,n,i,r,o){super(e,t,n,n,i,r,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Xd(){let s=0,e=0,t=0,n=0;function i(r,o,l,u){s=r,e=l,t=-3*r+3*o-2*l-u,n=2*r-2*o+l+u}return{initCatmullRom:function(r,o,l,u,h){i(o,l,h*(l-r),h*(u-o))},initNonuniformCatmullRom:function(r,o,l,u,h,d,m){let p=(o-r)/h-(l-r)/(h+d)+(l-o)/d,g=(l-o)/d-(u-o)/(d+m)+(u-l)/m;p*=d,g*=d,i(o,l,p,g)},calc:function(r){const o=r*r,l=o*r;return s+e*r+t*o+n*l}}}const Oc=new U,gf=new Xd,_f=new Xd,vf=new Xd;class Nv extends Fi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new U){const n=t,i=this.points,r=i.length,o=(r-(this.closed?0:1))*e;let l=Math.floor(o),u=o-l;this.closed?l+=l>0?0:(Math.floor(Math.abs(l)/r)+1)*r:u===0&&l===r-1&&(l=r-2,u=1);let h,d;this.closed||l>0?h=i[(l-1)%r]:(Oc.subVectors(i[0],i[1]).add(i[0]),h=Oc);const m=i[l%r],p=i[(l+1)%r];if(this.closed||l+2<r?d=i[(l+2)%r]:(Oc.subVectors(i[r-1],i[r-2]).add(i[r-1]),d=Oc),this.curveType==="centripetal"||this.curveType==="chordal"){const g=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(m),g),M=Math.pow(m.distanceToSquared(p),g),y=Math.pow(p.distanceToSquared(d),g);M<1e-4&&(M=1),v<1e-4&&(v=M),y<1e-4&&(y=M),gf.initNonuniformCatmullRom(h.x,m.x,p.x,d.x,v,M,y),_f.initNonuniformCatmullRom(h.y,m.y,p.y,d.y,v,M,y),vf.initNonuniformCatmullRom(h.z,m.z,p.z,d.z,v,M,y)}else this.curveType==="catmullrom"&&(gf.initCatmullRom(h.x,m.x,p.x,d.x,this.tension),_f.initCatmullRom(h.y,m.y,p.y,d.y,this.tension),vf.initCatmullRom(h.z,m.z,p.z,d.z,this.tension));return n.set(gf.calc(u),_f.calc(u),vf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new U().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function P_(s,e,t,n,i){const r=(n-e)*.5,o=(i-t)*.5,l=s*s,u=s*l;return(2*t-2*n+r+o)*u+(-3*t+3*n-2*r-o)*l+r*s+t}function HL(s,e){const t=1-s;return t*t*e}function kL(s,e){return 2*(1-s)*s*e}function GL(s,e){return s*s*e}function Uo(s,e,t,n){return HL(s,e)+kL(s,t)+GL(s,n)}function VL(s,e){const t=1-s;return t*t*t*e}function WL(s,e){const t=1-s;return 3*t*t*s*e}function XL(s,e){return 3*(1-s)*s*s*e}function qL(s,e){return s*s*s*e}function Do(s,e,t,n,i){return VL(s,e)+WL(s,t)+XL(s,n)+qL(s,i)}class qd extends Fi{constructor(e=new ce,t=new ce,n=new ce,i=new ce){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ce){const n=t,i=this.v0,r=this.v1,o=this.v2,l=this.v3;return n.set(Do(e,i.x,r.x,o.x,l.x),Do(e,i.y,r.y,o.y,l.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Ov extends Fi{constructor(e=new U,t=new U,n=new U,i=new U){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new U){const n=t,i=this.v0,r=this.v1,o=this.v2,l=this.v3;return n.set(Do(e,i.x,r.x,o.x,l.x),Do(e,i.y,r.y,o.y,l.y),Do(e,i.z,r.z,o.z,l.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Tu extends Fi{constructor(e=new ce,t=new ce){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ce){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ce){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Fv extends Fi{constructor(e=new U,t=new U){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new U){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new U){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Yd extends Fi{constructor(e=new ce,t=new ce,n=new ce){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ce){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Uo(e,i.x,r.x,o.x),Uo(e,i.y,r.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Zd extends Fi{constructor(e=new U,t=new U,n=new U){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new U){const n=t,i=this.v0,r=this.v1,o=this.v2;return n.set(Uo(e,i.x,r.x,o.x),Uo(e,i.y,r.y,o.y),Uo(e,i.z,r.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Kd extends Fi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ce){const n=t,i=this.points,r=(i.length-1)*e,o=Math.floor(r),l=r-o,u=i[o===0?o:o-1],h=i[o],d=i[o>i.length-2?i.length-1:o+1],m=i[o>i.length-3?i.length-1:o+2];return n.set(P_(l,u.x,h.x,d.x,m.x),P_(l,u.y,h.y,d.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ce().fromArray(i))}return this}}var Jd=Object.freeze({__proto__:null,ArcCurve:Dv,CatmullRomCurve3:Nv,CubicBezierCurve:qd,CubicBezierCurve3:Ov,EllipseCurve:wu,LineCurve:Tu,LineCurve3:Fv,QuadraticBezierCurve:Yd,QuadraticBezierCurve3:Zd,SplineCurve:Kd});class Bv extends Fi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Tu(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const o=i[r]-n,l=this.curves[r],u=l.getLength(),h=u===0?0:1-o/u;return l.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const o=r[i],l=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,u=o.getPoints(l);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Jd[i.type]().fromJSON(i))}return this}}class Zo extends Bv{constructor(e){super(),this.type="Path",this.currentPoint=new ce,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Tu(this.currentPoint.clone(),new ce(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Yd(this.currentPoint.clone(),new ce(e,t),new ce(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,o){const l=new qd(this.currentPoint.clone(),new ce(e,t),new ce(n,i),new ce(r,o));return this.curves.push(l),this.currentPoint.set(r,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Kd(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,o){const l=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+l,t+u,n,i,r,o),this}absarc(e,t,n,i,r,o){return this.absellipse(e,t,n,n,i,r,o),this}ellipse(e,t,n,i,r,o,l,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,r,o,l,u),this}absellipse(e,t,n,i,r,o,l,u){const h=new wu(e,t,n,i,r,o,l,u);if(this.curves.length>0){const m=h.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class qa extends yt{constructor(e=[new ce(0,-.5),new ce(.5,0),new ce(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=tn(i,0,Math.PI*2);const r=[],o=[],l=[],u=[],h=[],d=1/t,m=new U,p=new ce,g=new U,v=new U,M=new U;let y=0,_=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:y=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,g.x=_*1,g.y=-y,g.z=_*0,M.copy(g),g.normalize(),u.push(g.x,g.y,g.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:y=e[b+1].x-e[b].x,_=e[b+1].y-e[b].y,g.x=_*1,g.y=-y,g.z=_*0,v.copy(g),g.x+=M.x,g.y+=M.y,g.z+=M.z,g.normalize(),u.push(g.x,g.y,g.z),M.copy(v)}for(let b=0;b<=t;b++){const S=n+b*d*i,w=Math.sin(S),T=Math.cos(S);for(let L=0;L<=e.length-1;L++){m.x=e[L].x*w,m.y=e[L].y,m.z=e[L].x*T,o.push(m.x,m.y,m.z),p.x=b/t,p.y=L/(e.length-1),l.push(p.x,p.y);const O=u[3*L+0]*w,N=u[3*L+1],A=u[3*L+0]*T;h.push(O,N,A)}}for(let b=0;b<t;b++)for(let S=0;S<e.length-1;S++){const w=S+b*e.length,T=w,L=w+e.length,O=w+e.length+1,N=w+1;r.push(T,L,N),r.push(O,N,L)}this.setIndex(r),this.setAttribute("position",new We(o,3)),this.setAttribute("uv",new We(l,2)),this.setAttribute("normal",new We(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qa(e.points,e.segments,e.phiStart,e.phiLength)}}class al extends qa{constructor(e=1,t=1,n=4,i=8){const r=new Zo;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new al(e.radius,e.length,e.capSegments,e.radialSegments)}}class ol extends yt{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],o=[],l=[],u=[],h=new U,d=new ce;o.push(0,0,0),l.push(0,0,1),u.push(.5,.5);for(let m=0,p=3;m<=t;m++,p+=3){const g=n+m/t*i;h.x=e*Math.cos(g),h.y=e*Math.sin(g),o.push(h.x,h.y,h.z),l.push(0,0,1),d.x=(o[p]/e+1)/2,d.y=(o[p+1]/e+1)/2,u.push(d.x,d.y)}for(let m=1;m<=t;m++)r.push(m,m+1,0);this.setIndex(r),this.setAttribute("position",new We(o,3)),this.setAttribute("normal",new We(l,3)),this.setAttribute("uv",new We(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ol(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class Hs extends yt{constructor(e=1,t=1,n=1,i=32,r=1,o=!1,l=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:o,thetaStart:l,thetaLength:u};const h=this;i=Math.floor(i),r=Math.floor(r);const d=[],m=[],p=[],g=[];let v=0;const M=[],y=n/2;let _=0;b(),o===!1&&(e>0&&S(!0),t>0&&S(!1)),this.setIndex(d),this.setAttribute("position",new We(m,3)),this.setAttribute("normal",new We(p,3)),this.setAttribute("uv",new We(g,2));function b(){const w=new U,T=new U;let L=0;const O=(t-e)/n;for(let N=0;N<=r;N++){const A=[],I=N/r,K=I*(t-e)+e;for(let ne=0;ne<=i;ne++){const X=ne/i,G=X*u+l,V=Math.sin(G),fe=Math.cos(G);T.x=K*V,T.y=-I*n+y,T.z=K*fe,m.push(T.x,T.y,T.z),w.set(V,O,fe).normalize(),p.push(w.x,w.y,w.z),g.push(X,1-I),A.push(v++)}M.push(A)}for(let N=0;N<i;N++)for(let A=0;A<r;A++){const I=M[A][N],K=M[A+1][N],ne=M[A+1][N+1],X=M[A][N+1];d.push(I,K,X),d.push(K,ne,X),L+=6}h.addGroup(_,L,0),_+=L}function S(w){const T=v,L=new ce,O=new U;let N=0;const A=w===!0?e:t,I=w===!0?1:-1;for(let ne=1;ne<=i;ne++)m.push(0,y*I,0),p.push(0,I,0),g.push(.5,.5),v++;const K=v;for(let ne=0;ne<=i;ne++){const G=ne/i*u+l,V=Math.cos(G),fe=Math.sin(G);O.x=A*fe,O.y=y*I,O.z=A*V,m.push(O.x,O.y,O.z),p.push(0,I,0),L.x=V*.5+.5,L.y=fe*.5*I+.5,g.push(L.x,L.y),v++}for(let ne=0;ne<i;ne++){const X=T+ne,G=K+ne;w===!0?d.push(G,G+1,X):d.push(G+1,G,X),N+=3}h.addGroup(_,N,w===!0?1:2),_+=N}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Hs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class ll extends Hs{constructor(e=1,t=1,n=32,i=1,r=!1,o=0,l=Math.PI*2){super(0,e,t,n,i,r,o,l),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:o,thetaLength:l}}static fromJSON(e){return new ll(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Rr extends yt{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],o=[];l(i),h(n),d(),this.setAttribute("position",new We(r,3)),this.setAttribute("normal",new We(r.slice(),3)),this.setAttribute("uv",new We(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function l(b){const S=new U,w=new U,T=new U;for(let L=0;L<t.length;L+=3)g(t[L+0],S),g(t[L+1],w),g(t[L+2],T),u(S,w,T,b)}function u(b,S,w,T){const L=T+1,O=[];for(let N=0;N<=L;N++){O[N]=[];const A=b.clone().lerp(w,N/L),I=S.clone().lerp(w,N/L),K=L-N;for(let ne=0;ne<=K;ne++)ne===0&&N===L?O[N][ne]=A:O[N][ne]=A.clone().lerp(I,ne/K)}for(let N=0;N<L;N++)for(let A=0;A<2*(L-N)-1;A++){const I=Math.floor(A/2);A%2===0?(p(O[N][I+1]),p(O[N+1][I]),p(O[N][I])):(p(O[N][I+1]),p(O[N+1][I+1]),p(O[N+1][I]))}}function h(b){const S=new U;for(let w=0;w<r.length;w+=3)S.x=r[w+0],S.y=r[w+1],S.z=r[w+2],S.normalize().multiplyScalar(b),r[w+0]=S.x,r[w+1]=S.y,r[w+2]=S.z}function d(){const b=new U;for(let S=0;S<r.length;S+=3){b.x=r[S+0],b.y=r[S+1],b.z=r[S+2];const w=y(b)/2/Math.PI+.5,T=_(b)/Math.PI+.5;o.push(w,1-T)}v(),m()}function m(){for(let b=0;b<o.length;b+=6){const S=o[b+0],w=o[b+2],T=o[b+4],L=Math.max(S,w,T),O=Math.min(S,w,T);L>.9&&O<.1&&(S<.2&&(o[b+0]+=1),w<.2&&(o[b+2]+=1),T<.2&&(o[b+4]+=1))}}function p(b){r.push(b.x,b.y,b.z)}function g(b,S){const w=b*3;S.x=e[w+0],S.y=e[w+1],S.z=e[w+2]}function v(){const b=new U,S=new U,w=new U,T=new U,L=new ce,O=new ce,N=new ce;for(let A=0,I=0;A<r.length;A+=9,I+=6){b.set(r[A+0],r[A+1],r[A+2]),S.set(r[A+3],r[A+4],r[A+5]),w.set(r[A+6],r[A+7],r[A+8]),L.set(o[I+0],o[I+1]),O.set(o[I+2],o[I+3]),N.set(o[I+4],o[I+5]),T.copy(b).add(S).add(w).divideScalar(3);const K=y(T);M(L,I+0,b,K),M(O,I+2,S,K),M(N,I+4,w,K)}}function M(b,S,w,T){T<0&&b.x===1&&(o[S]=b.x-1),w.x===0&&w.z===0&&(o[S]=T/2/Math.PI+.5)}function y(b){return Math.atan2(b.z,-b.x)}function _(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Rr(e.vertices,e.indices,e.radius,e.details)}}class cl extends Rr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new cl(e.radius,e.detail)}}const Fc=new U,Bc=new U,yf=new U,zc=new Kn;class zv extends yt{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Ps*t),o=e.getIndex(),l=e.getAttribute("position"),u=o?o.count:l.count,h=[0,0,0],d=["a","b","c"],m=new Array(3),p={},g=[];for(let v=0;v<u;v+=3){o?(h[0]=o.getX(v),h[1]=o.getX(v+1),h[2]=o.getX(v+2)):(h[0]=v,h[1]=v+1,h[2]=v+2);const{a:M,b:y,c:_}=zc;if(M.fromBufferAttribute(l,h[0]),y.fromBufferAttribute(l,h[1]),_.fromBufferAttribute(l,h[2]),zc.getNormal(yf),m[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,m[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,m[2]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let b=0;b<3;b++){const S=(b+1)%3,w=m[b],T=m[S],L=zc[d[b]],O=zc[d[S]],N=`${w}_${T}`,A=`${T}_${w}`;A in p&&p[A]?(yf.dot(p[A].normal)<=r&&(g.push(L.x,L.y,L.z),g.push(O.x,O.y,O.z)),p[A]=null):N in p||(p[N]={index0:h[b],index1:h[S],normal:yf.clone()})}}for(const v in p)if(p[v]){const{index0:M,index1:y}=p[v];Fc.fromBufferAttribute(l,M),Bc.fromBufferAttribute(l,y),g.push(Fc.x,Fc.y,Fc.z),g.push(Bc.x,Bc.y,Bc.z)}this.setAttribute("position",new We(g,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Ls extends Zo{constructor(e){super(e),this.uuid=oi(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Zo().fromJSON(i))}return this}}const YL={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=Hv(s,0,i,t,!0);const o=[];if(!r||r.next===r.prev)return o;let l,u,h,d,m,p,g;if(n&&(r=QL(s,e,r,t)),s.length>80*t){l=h=s[0],u=d=s[1];for(let v=t;v<i;v+=t)m=s[v],p=s[v+1],m<l&&(l=m),p<u&&(u=p),m>h&&(h=m),p>d&&(d=p);g=Math.max(h-l,d-u),g=g!==0?32767/g:0}return Ko(r,o,t,l,u,g,0),o}};function Hv(s,e,t,n,i){let r,o;if(i===c2(s,e,t,n)>0)for(r=e;r<t;r+=n)o=L_(r,s[r],s[r+1],o);else for(r=t-n;r>=e;r-=n)o=L_(r,s[r],s[r+1],o);return o&&Au(o,o.next)&&($o(o),o=o.next),o}function Ds(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(Au(t,t.next)||Jt(t.prev,t,t.next)===0)){if($o(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ko(s,e,t,n,i,r,o){if(!s)return;!o&&r&&i2(s,n,i,r);let l=s,u,h;for(;s.prev!==s.next;){if(u=s.prev,h=s.next,r?KL(s,n,i,r):ZL(s)){e.push(u.i/t|0),e.push(s.i/t|0),e.push(h.i/t|0),$o(s),s=h.next,l=h.next;continue}if(s=h,s===l){o?o===1?(s=JL(Ds(s),e,t),Ko(s,e,t,n,i,r,2)):o===2&&$L(s,e,t,n,i,r):Ko(Ds(s),e,t,n,i,r,1);break}}}function ZL(s){const e=s.prev,t=s,n=s.next;if(Jt(e,t,n)>=0)return!1;const i=e.x,r=t.x,o=n.x,l=e.y,u=t.y,h=n.y,d=i<r?i<o?i:o:r<o?r:o,m=l<u?l<h?l:h:u<h?u:h,p=i>r?i>o?i:o:r>o?r:o,g=l>u?l>h?l:h:u>h?u:h;let v=n.next;for(;v!==e;){if(v.x>=d&&v.x<=p&&v.y>=m&&v.y<=g&&Da(i,l,r,u,o,h,v.x,v.y)&&Jt(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function KL(s,e,t,n){const i=s.prev,r=s,o=s.next;if(Jt(i,r,o)>=0)return!1;const l=i.x,u=r.x,h=o.x,d=i.y,m=r.y,p=o.y,g=l<u?l<h?l:h:u<h?u:h,v=d<m?d<p?d:p:m<p?m:p,M=l>u?l>h?l:h:u>h?u:h,y=d>m?d>p?d:p:m>p?m:p,_=cd(g,v,e,t,n),b=cd(M,y,e,t,n);let S=s.prevZ,w=s.nextZ;for(;S&&S.z>=_&&w&&w.z<=b;){if(S.x>=g&&S.x<=M&&S.y>=v&&S.y<=y&&S!==i&&S!==o&&Da(l,d,u,m,h,p,S.x,S.y)&&Jt(S.prev,S,S.next)>=0||(S=S.prevZ,w.x>=g&&w.x<=M&&w.y>=v&&w.y<=y&&w!==i&&w!==o&&Da(l,d,u,m,h,p,w.x,w.y)&&Jt(w.prev,w,w.next)>=0))return!1;w=w.nextZ}for(;S&&S.z>=_;){if(S.x>=g&&S.x<=M&&S.y>=v&&S.y<=y&&S!==i&&S!==o&&Da(l,d,u,m,h,p,S.x,S.y)&&Jt(S.prev,S,S.next)>=0)return!1;S=S.prevZ}for(;w&&w.z<=b;){if(w.x>=g&&w.x<=M&&w.y>=v&&w.y<=y&&w!==i&&w!==o&&Da(l,d,u,m,h,p,w.x,w.y)&&Jt(w.prev,w,w.next)>=0)return!1;w=w.nextZ}return!0}function JL(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!Au(i,r)&&kv(i,n,n.next,r)&&Jo(i,r)&&Jo(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),$o(n),$o(n.next),n=s=r),n=n.next}while(n!==s);return Ds(n)}function $L(s,e,t,n,i,r){let o=s;do{let l=o.next.next;for(;l!==o.prev;){if(o.i!==l.i&&a2(o,l)){let u=Gv(o,l);o=Ds(o,o.next),u=Ds(u,u.next),Ko(o,e,t,n,i,r,0),Ko(u,e,t,n,i,r,0);return}l=l.next}o=o.next}while(o!==s)}function QL(s,e,t,n){const i=[];let r,o,l,u,h;for(r=0,o=e.length;r<o;r++)l=e[r]*n,u=r<o-1?e[r+1]*n:s.length,h=Hv(s,l,u,n,!1),h===h.next&&(h.steiner=!0),i.push(s2(h));for(i.sort(jL),r=0;r<i.length;r++)t=e2(i[r],t);return t}function jL(s,e){return s.x-e.x}function e2(s,e){const t=t2(s,e);if(!t)return e;const n=Gv(t,s);return Ds(n,n.next),Ds(t,t.next)}function t2(s,e){let t=e,n=-1/0,i;const r=s.x,o=s.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const p=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=r&&p>n&&(n=p,i=t.x<t.next.x?t:t.next,p===r))return i}t=t.next}while(t!==e);if(!i)return null;const l=i,u=i.x,h=i.y;let d=1/0,m;t=i;do r>=t.x&&t.x>=u&&r!==t.x&&Da(o<h?r:n,o,u,h,o<h?n:r,o,t.x,t.y)&&(m=Math.abs(o-t.y)/(r-t.x),Jo(t,s)&&(m<d||m===d&&(t.x>i.x||t.x===i.x&&n2(i,t)))&&(i=t,d=m)),t=t.next;while(t!==l);return i}function n2(s,e){return Jt(s.prev,s,e.prev)<0&&Jt(e.next,s,s.next)<0}function i2(s,e,t,n){let i=s;do i.z===0&&(i.z=cd(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,r2(i)}function r2(s){let e,t,n,i,r,o,l,u,h=1;do{for(t=s,s=null,r=null,o=0;t;){for(o++,n=t,l=0,e=0;e<h&&(l++,n=n.nextZ,!!n);e++);for(u=h;l>0||u>0&&n;)l!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,l--):(i=n,n=n.nextZ,u--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(o>1);return s}function cd(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}function s2(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}function Da(s,e,t,n,i,r,o,l){return(i-o)*(e-l)>=(s-o)*(r-l)&&(s-o)*(n-l)>=(t-o)*(e-l)&&(t-o)*(r-l)>=(i-o)*(n-l)}function a2(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!o2(s,e)&&(Jo(s,e)&&Jo(e,s)&&l2(s,e)&&(Jt(s.prev,s,e.prev)||Jt(s,e.prev,e))||Au(s,e)&&Jt(s.prev,s,s.next)>0&&Jt(e.prev,e,e.next)>0)}function Jt(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}function Au(s,e){return s.x===e.x&&s.y===e.y}function kv(s,e,t,n){const i=kc(Jt(s,e,t)),r=kc(Jt(s,e,n)),o=kc(Jt(t,n,s)),l=kc(Jt(t,n,e));return!!(i!==r&&o!==l||i===0&&Hc(s,t,e)||r===0&&Hc(s,n,e)||o===0&&Hc(t,s,n)||l===0&&Hc(t,e,n))}function Hc(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}function kc(s){return s>0?1:s<0?-1:0}function o2(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&kv(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}function Jo(s,e){return Jt(s.prev,s,s.next)<0?Jt(s,e,s.next)>=0&&Jt(s,s.prev,e)>=0:Jt(s,e,s.prev)<0||Jt(s,s.next,e)<0}function l2(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}function Gv(s,e){const t=new ud(s.i,s.x,s.y),n=new ud(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function L_(s,e,t,n){const i=new ud(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function $o(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}function ud(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function c2(s,e,t,n){let i=0;for(let r=e,o=t-n;r<t;r+=n)i+=(s[o]-s[r])*(s[r+1]+s[o+1]),o=r;return i}class Zi{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return Zi.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];I_(e),U_(n,e);let o=e.length;t.forEach(I_);for(let u=0;u<t.length;u++)i.push(o),o+=t[u].length,U_(n,t[u]);const l=YL.triangulate(n,i);for(let u=0;u<l.length;u+=3)r.push(l.slice(u,u+3));return r}}function I_(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}function U_(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}class ul extends yt{constructor(e=new Ls([new ce(.5,.5),new ce(-.5,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let l=0,u=e.length;l<u;l++){const h=e[l];o(h)}this.setAttribute("position",new We(i,3)),this.setAttribute("uv",new We(r,2)),this.computeVertexNormals();function o(l){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,m=t.depth!==void 0?t.depth:1;let p=t.bevelEnabled!==void 0?t.bevelEnabled:!0,g=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:g-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const _=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:u2;let S,w=!1,T,L,O,N;_&&(S=_.getSpacedPoints(d),w=!0,p=!1,T=_.computeFrenetFrames(d,!1),L=new U,O=new U,N=new U),p||(y=0,g=0,v=0,M=0);const A=l.extractPoints(h);let I=A.shape;const K=A.holes;if(!Zi.isClockWise(I)){I=I.reverse();for(let H=0,Ee=K.length;H<Ee;H++){const re=K[H];Zi.isClockWise(re)&&(K[H]=re.reverse())}}const X=Zi.triangulateShape(I,K),G=I;for(let H=0,Ee=K.length;H<Ee;H++){const re=K[H];I=I.concat(re)}function V(H,Ee,re){return Ee||console.error("THREE.ExtrudeGeometry: vec does not exist"),H.clone().addScaledVector(Ee,re)}const fe=I.length,ie=X.length;function le(H,Ee,re){let Se,de,De;const Ue=H.x-Ee.x,Ne=H.y-Ee.y,Ke=re.x-H.x,it=re.y-H.y,Lt=Ue*Ue+Ne*Ne,F=Ue*it-Ne*Ke;if(Math.abs(F)>Number.EPSILON){const P=Math.sqrt(Lt),te=Math.sqrt(Ke*Ke+it*it),be=Ee.x-Ne/P,ye=Ee.y+Ue/P,z=re.x-it/te,pe=re.y+Ke/te,xe=((z-be)*it-(pe-ye)*Ke)/(Ue*it-Ne*Ke);Se=be+Ue*xe-H.x,de=ye+Ne*xe-H.y;const $=Se*Se+de*de;if($<=2)return new ce(Se,de);De=Math.sqrt($/2)}else{let P=!1;Ue>Number.EPSILON?Ke>Number.EPSILON&&(P=!0):Ue<-Number.EPSILON?Ke<-Number.EPSILON&&(P=!0):Math.sign(Ne)===Math.sign(it)&&(P=!0),P?(Se=-Ne,de=Ue,De=Math.sqrt(Lt)):(Se=Ue,de=Ne,De=Math.sqrt(Lt/2))}return new ce(Se/De,de/De)}const me=[];for(let H=0,Ee=G.length,re=Ee-1,Se=H+1;H<Ee;H++,re++,Se++)re===Ee&&(re=0),Se===Ee&&(Se=0),me[H]=le(G[H],G[re],G[Se]);const _e=[];let we,j=me.concat();for(let H=0,Ee=K.length;H<Ee;H++){const re=K[H];we=[];for(let Se=0,de=re.length,De=de-1,Ue=Se+1;Se<de;Se++,De++,Ue++)De===de&&(De=0),Ue===de&&(Ue=0),we[Se]=le(re[Se],re[De],re[Ue]);_e.push(we),j=j.concat(we)}for(let H=0;H<y;H++){const Ee=H/y,re=g*Math.cos(Ee*Math.PI/2),Se=v*Math.sin(Ee*Math.PI/2)+M;for(let de=0,De=G.length;de<De;de++){const Ue=V(G[de],me[de],Se);Ge(Ue.x,Ue.y,-re)}for(let de=0,De=K.length;de<De;de++){const Ue=K[de];we=_e[de];for(let Ne=0,Ke=Ue.length;Ne<Ke;Ne++){const it=V(Ue[Ne],we[Ne],Se);Ge(it.x,it.y,-re)}}}const ve=v+M;for(let H=0;H<fe;H++){const Ee=p?V(I[H],j[H],ve):I[H];w?(O.copy(T.normals[0]).multiplyScalar(Ee.x),L.copy(T.binormals[0]).multiplyScalar(Ee.y),N.copy(S[0]).add(O).add(L),Ge(N.x,N.y,N.z)):Ge(Ee.x,Ee.y,0)}for(let H=1;H<=d;H++)for(let Ee=0;Ee<fe;Ee++){const re=p?V(I[Ee],j[Ee],ve):I[Ee];w?(O.copy(T.normals[H]).multiplyScalar(re.x),L.copy(T.binormals[H]).multiplyScalar(re.y),N.copy(S[H]).add(O).add(L),Ge(N.x,N.y,N.z)):Ge(re.x,re.y,m/d*H)}for(let H=y-1;H>=0;H--){const Ee=H/y,re=g*Math.cos(Ee*Math.PI/2),Se=v*Math.sin(Ee*Math.PI/2)+M;for(let de=0,De=G.length;de<De;de++){const Ue=V(G[de],me[de],Se);Ge(Ue.x,Ue.y,m+re)}for(let de=0,De=K.length;de<De;de++){const Ue=K[de];we=_e[de];for(let Ne=0,Ke=Ue.length;Ne<Ke;Ne++){const it=V(Ue[Ne],we[Ne],Se);w?Ge(it.x,it.y+S[d-1].y,S[d-1].x+re):Ge(it.x,it.y,m+re)}}}Me(),Re();function Me(){const H=i.length/3;if(p){let Ee=0,re=fe*Ee;for(let Se=0;Se<ie;Se++){const de=X[Se];et(de[2]+re,de[1]+re,de[0]+re)}Ee=d+y*2,re=fe*Ee;for(let Se=0;Se<ie;Se++){const de=X[Se];et(de[0]+re,de[1]+re,de[2]+re)}}else{for(let Ee=0;Ee<ie;Ee++){const re=X[Ee];et(re[2],re[1],re[0])}for(let Ee=0;Ee<ie;Ee++){const re=X[Ee];et(re[0]+fe*d,re[1]+fe*d,re[2]+fe*d)}}n.addGroup(H,i.length/3-H,0)}function Re(){const H=i.length/3;let Ee=0;Ie(G,Ee),Ee+=G.length;for(let re=0,Se=K.length;re<Se;re++){const de=K[re];Ie(de,Ee),Ee+=de.length}n.addGroup(H,i.length/3-H,1)}function Ie(H,Ee){let re=H.length;for(;--re>=0;){const Se=re;let de=re-1;de<0&&(de=H.length-1);for(let De=0,Ue=d+y*2;De<Ue;De++){const Ne=fe*De,Ke=fe*(De+1),it=Ee+Se+Ne,Lt=Ee+de+Ne,F=Ee+de+Ke,P=Ee+Se+Ke;Ze(it,Lt,F,P)}}}function Ge(H,Ee,re){u.push(H),u.push(Ee),u.push(re)}function et(H,Ee,re){At(H),At(Ee),At(re);const Se=i.length/3,de=b.generateTopUV(n,i,Se-3,Se-2,Se-1);Je(de[0]),Je(de[1]),Je(de[2])}function Ze(H,Ee,re,Se){At(H),At(Ee),At(Se),At(Ee),At(re),At(Se);const de=i.length/3,De=b.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);Je(De[0]),Je(De[1]),Je(De[3]),Je(De[1]),Je(De[2]),Je(De[3])}function At(H){i.push(u[H*3+0]),i.push(u[H*3+1]),i.push(u[H*3+2])}function Je(H){r.push(H.x),r.push(H.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return h2(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,o=e.shapes.length;r<o;r++){const l=t[e.shapes[r]];n.push(l)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Jd[i.type]().fromJSON(i)),new ul(n,e.options)}}const u2={generateTopUV:function(s,e,t,n,i){const r=e[t*3],o=e[t*3+1],l=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ce(r,o),new ce(l,u),new ce(h,d)]},generateSideWallUV:function(s,e,t,n,i,r){const o=e[t*3],l=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],m=e[n*3+2],p=e[i*3],g=e[i*3+1],v=e[i*3+2],M=e[r*3],y=e[r*3+1],_=e[r*3+2];return Math.abs(l-d)<Math.abs(o-h)?[new ce(o,1-u),new ce(h,1-m),new ce(p,1-v),new ce(M,1-_)]:[new ce(l,1-u),new ce(d,1-m),new ce(g,1-v),new ce(y,1-_)]}};function h2(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class hl extends Rr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new hl(e.radius,e.detail)}}class Ya extends Rr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ya(e.radius,e.detail)}}class fl extends yt{constructor(e=.5,t=1,n=32,i=1,r=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const l=[],u=[],h=[],d=[];let m=e;const p=(t-e)/i,g=new U,v=new ce;for(let M=0;M<=i;M++){for(let y=0;y<=n;y++){const _=r+y/n*o;g.x=m*Math.cos(_),g.y=m*Math.sin(_),u.push(g.x,g.y,g.z),h.push(0,0,1),v.x=(g.x/t+1)/2,v.y=(g.y/t+1)/2,d.push(v.x,v.y)}m+=p}for(let M=0;M<i;M++){const y=M*(n+1);for(let _=0;_<n;_++){const b=_+y,S=b,w=b+n+1,T=b+n+2,L=b+1;l.push(S,w,L),l.push(w,T,L)}}this.setIndex(l),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new fl(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class dl extends yt{constructor(e=new Ls([new ce(0,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],o=[];let l=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(l,u,d),l+=u,u=0;this.setIndex(n),this.setAttribute("position",new We(i,3)),this.setAttribute("normal",new We(r,3)),this.setAttribute("uv",new We(o,2));function h(d){const m=i.length/3,p=d.extractPoints(t);let g=p.shape;const v=p.holes;Zi.isClockWise(g)===!1&&(g=g.reverse());for(let y=0,_=v.length;y<_;y++){const b=v[y];Zi.isClockWise(b)===!0&&(v[y]=b.reverse())}const M=Zi.triangulateShape(g,v);for(let y=0,_=v.length;y<_;y++){const b=v[y];g=g.concat(b)}for(let y=0,_=g.length;y<_;y++){const b=g[y];i.push(b.x,b.y,0),r.push(0,0,1),o.push(b.x,b.y)}for(let y=0,_=M.length;y<_;y++){const b=M[y],S=b[0]+m,w=b[1]+m,T=b[2]+m;n.push(S,w,T),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return f2(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const o=t[e.shapes[i]];n.push(o)}return new dl(n,e.curveSegments)}}function f2(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}class Za extends yt{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:o,thetaLength:l},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+l,Math.PI);let h=0;const d=[],m=new U,p=new U,g=[],v=[],M=[],y=[];for(let _=0;_<=n;_++){const b=[],S=_/n;let w=0;_===0&&o===0?w=.5/t:_===n&&u===Math.PI&&(w=-.5/t);for(let T=0;T<=t;T++){const L=T/t;m.x=-e*Math.cos(i+L*r)*Math.sin(o+S*l),m.y=e*Math.cos(o+S*l),m.z=e*Math.sin(i+L*r)*Math.sin(o+S*l),v.push(m.x,m.y,m.z),p.copy(m).normalize(),M.push(p.x,p.y,p.z),y.push(L+w,1-S),b.push(h++)}d.push(b)}for(let _=0;_<n;_++)for(let b=0;b<t;b++){const S=d[_][b+1],w=d[_][b],T=d[_+1][b],L=d[_+1][b+1];(_!==0||o>0)&&g.push(S,w,L),(_!==n-1||u<Math.PI)&&g.push(w,T,L)}this.setIndex(g),this.setAttribute("position",new We(v,3)),this.setAttribute("normal",new We(M,3)),this.setAttribute("uv",new We(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Za(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class pl extends Rr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new pl(e.radius,e.detail)}}class ml extends yt{constructor(e=1,t=.4,n=12,i=48,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],u=[],h=[],d=new U,m=new U,p=new U;for(let g=0;g<=n;g++)for(let v=0;v<=i;v++){const M=v/i*r,y=g/n*Math.PI*2;m.x=(e+t*Math.cos(y))*Math.cos(M),m.y=(e+t*Math.cos(y))*Math.sin(M),m.z=t*Math.sin(y),l.push(m.x,m.y,m.z),d.x=e*Math.cos(M),d.y=e*Math.sin(M),p.subVectors(m,d).normalize(),u.push(p.x,p.y,p.z),h.push(v/i),h.push(g/n)}for(let g=1;g<=n;g++)for(let v=1;v<=i;v++){const M=(i+1)*g+v-1,y=(i+1)*(g-1)+v-1,_=(i+1)*(g-1)+v,b=(i+1)*g+v;o.push(M,y,b),o.push(y,_,b)}this.setIndex(o),this.setAttribute("position",new We(l,3)),this.setAttribute("normal",new We(u,3)),this.setAttribute("uv",new We(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ml(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class gl extends yt{constructor(e=1,t=.4,n=64,i=8,r=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:o},n=Math.floor(n),i=Math.floor(i);const l=[],u=[],h=[],d=[],m=new U,p=new U,g=new U,v=new U,M=new U,y=new U,_=new U;for(let S=0;S<=n;++S){const w=S/n*r*Math.PI*2;b(w,r,o,e,g),b(w+.01,r,o,e,v),y.subVectors(v,g),_.addVectors(v,g),M.crossVectors(y,_),_.crossVectors(M,y),M.normalize(),_.normalize();for(let T=0;T<=i;++T){const L=T/i*Math.PI*2,O=-t*Math.cos(L),N=t*Math.sin(L);m.x=g.x+(O*_.x+N*M.x),m.y=g.y+(O*_.y+N*M.y),m.z=g.z+(O*_.z+N*M.z),u.push(m.x,m.y,m.z),p.subVectors(m,g).normalize(),h.push(p.x,p.y,p.z),d.push(S/n),d.push(T/i)}}for(let S=1;S<=n;S++)for(let w=1;w<=i;w++){const T=(i+1)*(S-1)+(w-1),L=(i+1)*S+(w-1),O=(i+1)*S+w,N=(i+1)*(S-1)+w;l.push(T,L,N),l.push(L,O,N)}this.setIndex(l),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(d,2));function b(S,w,T,L,O){const N=Math.cos(S),A=Math.sin(S),I=T/w*S,K=Math.cos(I);O.x=L*(2+K)*.5*N,O.y=L*(2+K)*A*.5,O.z=L*Math.sin(I)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gl(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class _l extends yt{constructor(e=new Zd(new U(-1,-1,0),new U(-1,1,0),new U(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const o=e.computeFrenetFrames(t,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const l=new U,u=new U,h=new ce;let d=new U;const m=[],p=[],g=[],v=[];M(),this.setIndex(v),this.setAttribute("position",new We(m,3)),this.setAttribute("normal",new We(p,3)),this.setAttribute("uv",new We(g,2));function M(){for(let S=0;S<t;S++)y(S);y(r===!1?t:0),b(),_()}function y(S){d=e.getPointAt(S/t,d);const w=o.normals[S],T=o.binormals[S];for(let L=0;L<=i;L++){const O=L/i*Math.PI*2,N=Math.sin(O),A=-Math.cos(O);u.x=A*w.x+N*T.x,u.y=A*w.y+N*T.y,u.z=A*w.z+N*T.z,u.normalize(),p.push(u.x,u.y,u.z),l.x=d.x+n*u.x,l.y=d.y+n*u.y,l.z=d.z+n*u.z,m.push(l.x,l.y,l.z)}}function _(){for(let S=1;S<=t;S++)for(let w=1;w<=i;w++){const T=(i+1)*(S-1)+(w-1),L=(i+1)*S+(w-1),O=(i+1)*S+w,N=(i+1)*(S-1)+w;v.push(T,L,N),v.push(L,O,N)}}function b(){for(let S=0;S<=t;S++)for(let w=0;w<=i;w++)h.x=S/t,h.y=w/i,g.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new _l(new Jd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class Vv extends yt{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new U,r=new U;if(e.index!==null){const o=e.attributes.position,l=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:l.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const m=u[h],p=m.start,g=m.count;for(let v=p,M=p+g;v<M;v+=3)for(let y=0;y<3;y++){const _=l.getX(v+y),b=l.getX(v+(y+1)%3);i.fromBufferAttribute(o,_),r.fromBufferAttribute(o,b),D_(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const o=e.attributes.position;for(let l=0,u=o.count/3;l<u;l++)for(let h=0;h<3;h++){const d=3*l+h,m=3*l+(h+1)%3;i.fromBufferAttribute(o,d),r.fromBufferAttribute(o,m),D_(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new We(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function D_(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var N_=Object.freeze({__proto__:null,BoxGeometry:es,CapsuleGeometry:al,CircleGeometry:ol,ConeGeometry:ll,CylinderGeometry:Hs,DodecahedronGeometry:cl,EdgesGeometry:zv,ExtrudeGeometry:ul,IcosahedronGeometry:hl,LatheGeometry:qa,OctahedronGeometry:Ya,PlaneGeometry:Wa,PolyhedronGeometry:Rr,RingGeometry:fl,ShapeGeometry:dl,SphereGeometry:Za,TetrahedronGeometry:pl,TorusGeometry:ml,TorusKnotGeometry:gl,TubeGeometry:_l,WireframeGeometry:Vv});class Wv extends Ln{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Oe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class Xv extends Ji{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class $d extends Ln{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Oe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class qv extends $d{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ce(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return tn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Oe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Oe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Oe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Yv extends Ln{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Oe(16777215),this.specular=new Oe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=nl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Zv extends Ln{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Oe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class Kv extends Ln{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Jv extends Ln{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=nl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class $v extends Ln{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Oe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Qr,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Qv extends Gn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function xi(s,e,t){return Qd(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)}function Rs(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}function Qd(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}function jv(s){function e(i,r){return s[i]-s[r]}const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function hd(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,o=0;o!==n;++r){const l=t[r]*e;for(let u=0;u!==e;++u)i[o++]=s[l+u]}return i}function jd(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let o=r[n];if(o!==void 0)if(Array.isArray(o))do o=r[n],o!==void 0&&(e.push(r.time),t.push.apply(t,o)),r=s[i++];while(r!==void 0);else if(o.toArray!==void 0)do o=r[n],o!==void 0&&(e.push(r.time),o.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do o=r[n],o!==void 0&&(e.push(r.time),t.push(o)),r=s[i++];while(r!==void 0)}function d2(s,e,t,n,i=30){const r=s.clone();r.name=e;const o=[];for(let u=0;u<r.tracks.length;++u){const h=r.tracks[u],d=h.getValueSize(),m=[],p=[];for(let g=0;g<h.times.length;++g){const v=h.times[g]*i;if(!(v<t||v>=n)){m.push(h.times[g]);for(let M=0;M<d;++M)p.push(h.values[g*d+M])}}m.length!==0&&(h.times=Rs(m,h.times.constructor),h.values=Rs(p,h.values.constructor),o.push(h))}r.tracks=o;let l=1/0;for(let u=0;u<r.tracks.length;++u)l>r.tracks[u].times[0]&&(l=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*l);return r.resetDuration(),r}function p2(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let o=0;o<i;++o){const l=t.tracks[o],u=l.ValueTypeName;if(u==="bool"||u==="string")continue;const h=s.tracks.find(function(_){return _.name===l.name&&_.ValueTypeName===u});if(h===void 0)continue;let d=0;const m=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=m/3);let p=0;const g=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=g/3);const v=l.times.length-1;let M;if(r<=l.times[0]){const _=d,b=m-d;M=xi(l.values,_,b)}else if(r>=l.times[v]){const _=v*m+d,b=_+m-d;M=xi(l.values,_,b)}else{const _=l.createInterpolant(),b=d,S=m-d;_.evaluate(r),M=xi(_.resultBuffer,b,S)}u==="quaternion"&&new Pn().fromArray(M).normalize().conjugate().toArray(M);const y=h.times.length;for(let _=0;_<y;++_){const b=_*g+p;if(u==="quaternion")Pn.multiplyQuaternionsFlat(h.values,b,M,0,h.values,b);else{const S=g-p*2;for(let w=0;w<S;++w)h.values[b+w]-=M[w]}}}return s.blendMode=Cd,s}const m2={arraySlice:xi,convertArray:Rs,isTypedArray:Qd,getKeyframeOrder:jv,sortedArray:hd,flattenJSON:jd,subclip:d2,makeClipAdditive:p2};class vl{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let l=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===l)break;if(r=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=r)){const l=t[1];e<l&&(n=2,r=l);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}o=n,n=0;break n}break e}for(;n<o;){const l=n+o>>>1;e<t[l]?o=l:n=l+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let o=0;o!==i;++o)t[o]=n[r+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ey extends vl{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ws,endingEnd:ws}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,o=e+1,l=i[r],u=i[o];if(l===void 0)switch(this.getSettings_().endingStart){case Ts:r=e,l=2*t-n;break;case Vo:r=i.length-2,l=t+i[r]-i[r+1];break;default:r=e,l=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Ts:o=e,u=2*n-t;break;case Vo:o=1,u=n+i[1]-i[0];break;default:o=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-l),this._weightNext=h/(u-n),this._offsetPrev=r*d,this._offsetNext=o*d}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,l=this.valueSize,u=e*l,h=u-l,d=this._offsetPrev,m=this._offsetNext,p=this._weightPrev,g=this._weightNext,v=(n-t)/(i-t),M=v*v,y=M*v,_=-p*y+2*p*M-p*v,b=(1+p)*y+(-1.5-2*p)*M+(-.5+p)*v+1,S=(-1-g)*y+(1.5+g)*M+.5*v,w=g*y-g*M;for(let T=0;T!==l;++T)r[T]=_*o[d+T]+b*o[h+T]+S*o[u+T]+w*o[m+T];return r}}class ep extends vl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,l=this.valueSize,u=e*l,h=u-l,d=(n-t)/(i-t),m=1-d;for(let p=0;p!==l;++p)r[p]=o[h+p]*m+o[u+p]*d;return r}}class ty extends vl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class Bi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Rs(t,this.TimeBufferType),this.values=Rs(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Rs(e.times,Array),values:Rs(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new ty(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new ep(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new ey(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case ko:t=this.InterpolantFactoryMethodDiscrete;break;case Go:t=this.InterpolantFactoryMethodLinear;break;case eu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ko;case this.InterpolantFactoryMethodLinear:return Go;case this.InterpolantFactoryMethodSmooth:return eu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,o=i-1;for(;r!==i&&n[r]<e;)++r;for(;o!==-1&&n[o]>t;)--o;if(++o,r!==0||o!==i){r>=o&&(o=Math.max(o,1),r=o-1);const l=this.getValueSize();this.times=xi(n,r,o),this.values=xi(this.values,r*l,o*l)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let l=0;l!==r;l++){const u=n[l];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,u,o),e=!1;break}o=u}if(i!==void 0&&Qd(i))for(let l=0,u=i.length;l!==u;++l){const h=i[l];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,l,h),e=!1;break}}return e}optimize(){const e=xi(this.times),t=xi(this.values),n=this.getValueSize(),i=this.getInterpolation()===eu,r=e.length-1;let o=1;for(let l=1;l<r;++l){let u=!1;const h=e[l],d=e[l+1];if(h!==d&&(l!==1||h!==e[0]))if(i)u=!0;else{const m=l*n,p=m-n,g=m+n;for(let v=0;v!==n;++v){const M=t[m+v];if(M!==t[p+v]||M!==t[g+v]){u=!0;break}}}if(u){if(l!==o){e[o]=e[l];const m=l*n,p=o*n;for(let g=0;g!==n;++g)t[p+g]=t[m+g]}++o}}if(r>0){e[o]=e[r];for(let l=r*n,u=o*n,h=0;h!==n;++h)t[u+h]=t[l+h];++o}return o!==e.length?(this.times=xi(e,0,o),this.values=xi(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=xi(this.times,0),t=xi(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}Bi.prototype.TimeBufferType=Float32Array;Bi.prototype.ValueBufferType=Float32Array;Bi.prototype.DefaultInterpolation=Go;class ks extends Bi{}ks.prototype.ValueTypeName="bool";ks.prototype.ValueBufferType=Array;ks.prototype.DefaultInterpolation=ko;ks.prototype.InterpolantFactoryMethodLinear=void 0;ks.prototype.InterpolantFactoryMethodSmooth=void 0;class tp extends Bi{}tp.prototype.ValueTypeName="color";class Qo extends Bi{}Qo.prototype.ValueTypeName="number";class ny extends vl{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,o=this.sampleValues,l=this.valueSize,u=(n-t)/(i-t);let h=e*l;for(let d=h+l;h!==d;h+=4)Pn.slerpFlat(r,0,o,h-l,o,h,u);return r}}class Ka extends Bi{InterpolantFactoryMethodLinear(e){return new ny(this.times,this.values,this.getValueSize(),e)}}Ka.prototype.ValueTypeName="quaternion";Ka.prototype.DefaultInterpolation=Go;Ka.prototype.InterpolantFactoryMethodSmooth=void 0;class Gs extends Bi{}Gs.prototype.ValueTypeName="string";Gs.prototype.ValueBufferType=Array;Gs.prototype.DefaultInterpolation=ko;Gs.prototype.InterpolantFactoryMethodLinear=void 0;Gs.prototype.InterpolantFactoryMethodSmooth=void 0;class jo extends Bi{}jo.prototype.ValueTypeName="vector";class el{constructor(e,t=-1,n,i=mu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=oi(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,l=n.length;o!==l;++o)t.push(_2(n[o]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,o=n.length;r!==o;++r)t.push(Bi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,o=[];for(let l=0;l<r;l++){let u=[],h=[];u.push((l+r-1)%r,l,(l+1)%r),h.push(0,1,0);const d=jv(u);u=hd(u,1,d),h=hd(h,1,d),!i&&u[0]===0&&(u.push(r),h.push(h[0])),o.push(new Qo(".morphTargetInfluences["+t[l].name+"]",u,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let l=0,u=e.length;l<u;l++){const h=e[l],d=h.name.match(r);if(d&&d.length>1){const m=d[1];let p=i[m];p||(i[m]=p=[]),p.push(h)}}const o=[];for(const l in i)o.push(this.CreateFromMorphTargetSequence(l,i[l],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,p,g,v,M){if(g.length!==0){const y=[],_=[];jd(g,y,_,v),y.length!==0&&M.push(new m(p,y,_))}},i=[],r=e.name||"default",o=e.fps||30,l=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let m=0;m<h.length;m++){const p=h[m].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const g={};let v;for(v=0;v<p.length;v++)if(p[v].morphTargets)for(let M=0;M<p[v].morphTargets.length;M++)g[p[v].morphTargets[M]]=-1;for(const M in g){const y=[],_=[];for(let b=0;b!==p[v].morphTargets.length;++b){const S=p[v];y.push(S.time),_.push(S.morphTarget===M?1:0)}i.push(new Qo(".morphTargetInfluence["+M+"]",y,_))}u=g.length*o}else{const g=".bones["+t[m].name+"]";n(jo,g+".position",p,"pos",i),n(Ka,g+".quaternion",p,"rot",i),n(jo,g+".scale",p,"scl",i)}}return i.length===0?null:new this(r,u,i,l)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function g2(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Qo;case"vector":case"vector2":case"vector3":case"vector4":return jo;case"color":return tp;case"quaternion":return Ka;case"bool":case"boolean":return ks;case"string":return Gs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}function _2(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=g2(s.type);if(s.times===void 0){const t=[],n=[];jd(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}const Ns={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}};class np{constructor(e,t,n){const i=this;let r=!1,o=0,l=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){l++,r===!1&&i.onStart!==void 0&&i.onStart(d,o,l),r=!0},this.itemEnd=function(d){o++,i.onProgress!==void 0&&i.onProgress(d,o,l),o===l&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,m){return h.push(d,m),this},this.removeHandler=function(d){const m=h.indexOf(d);return m!==-1&&h.splice(m,2),this},this.getHandler=function(d){for(let m=0,p=h.length;m<p;m+=2){const g=h[m],v=h[m+1];if(g.global&&(g.lastIndex=0),g.test(d))return v}return null}}}const iy=new np;class li{constructor(e){this.manager=e!==void 0?e:iy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const _r={};class v2 extends Error{constructor(e,t){super(e),this.response=t}}class Ar extends li{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=Ns.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(_r[e]!==void 0){_r[e].push({onLoad:t,onProgress:n,onError:i});return}_r[e]=[],_r[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),l=this.mimeType,u=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=_r[e],m=h.body.getReader(),p=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),g=p?parseInt(p):0,v=g!==0;let M=0;const y=new ReadableStream({start(_){b();function b(){m.read().then(({done:S,value:w})=>{if(S)_.close();else{M+=w.byteLength;const T=new ProgressEvent("progress",{lengthComputable:v,loaded:M,total:g});for(let L=0,O=d.length;L<O;L++){const N=d[L];N.onProgress&&N.onProgress(T)}_.enqueue(w),b()}})}}});return new Response(y)}else throw new v2(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,l));case"json":return h.json();default:if(l===void 0)return h.text();{const m=/charset="?([^;"\s]*)"?/i.exec(l),p=m&&m[1]?m[1].toLowerCase():void 0,g=new TextDecoder(p);return h.arrayBuffer().then(v=>g.decode(v))}}}).then(h=>{Ns.add(e,h);const d=_r[e];delete _r[e];for(let m=0,p=d.length;m<p;m++){const g=d[m];g.onLoad&&g.onLoad(h)}}).catch(h=>{const d=_r[e];if(d===void 0)throw this.manager.itemError(e),h;delete _r[e];for(let m=0,p=d.length;m<p;m++){const g=d[m];g.onError&&g.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class y2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Ar(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{t(r.parse(JSON.parse(l)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=el.parse(e[n]);t.push(i)}return t}}class x2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=this,o=[],l=new Wd,u=new Ar(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(r.withCredentials);let h=0;function d(m){u.load(e[m],function(p){const g=r.parse(p,!0);o[m]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,h===6&&(g.mipmapCount===1&&(l.minFilter=on),l.image=o,l.format=g.format,l.needsUpdate=!0,t&&t(l))},n,i)}if(Array.isArray(e))for(let m=0,p=e.length;m<p;++m)d(m);else u.load(e,function(m){const p=r.parse(m,!0);if(p.isCubemap){const g=p.mipmaps.length/p.mipmapCount;for(let v=0;v<g;v++){o[v]={mipmaps:[]};for(let M=0;M<p.mipmapCount;M++)o[v].mipmaps.push(p.mipmaps[v*p.mipmapCount+M]),o[v].format=p.format,o[v].width=p.width,o[v].height=p.height}l.image=o}else l.image.width=p.width,l.image.height=p.height,l.mipmaps=p.mipmaps;p.mipmapCount===1&&(l.minFilter=on),l.format=p.format,l.needsUpdate=!0,t&&t(l)},n,i);return l}}class tl extends li{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Ns.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const l=Yo("img");function u(){d(),Ns.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(m){d(),i&&i(m),r.manager.itemError(e),r.manager.itemEnd(e)}function d(){l.removeEventListener("load",u,!1),l.removeEventListener("error",h,!1)}return l.addEventListener("load",u,!1),l.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),r.manager.itemStart(e),l.src=e,l}}class M2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=new sl;r.colorSpace=ht;const o=new tl(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let l=0;function u(h){o.load(e[h],function(d){r.images[h]=d,l++,l===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return r}}class S2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Oa,l=new Ar(this.manager);return l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setPath(this.path),l.setWithCredentials(r.withCredentials),l.load(e,function(u){const h=r.parse(u);h&&(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:Cn,o.wrapT=h.wrapT!==void 0?h.wrapT:Cn,o.magFilter=h.magFilter!==void 0?h.magFilter:on,o.minFilter=h.minFilter!==void 0?h.minFilter:on,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?o.colorSpace=h.colorSpace:h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=Jr),h.mipmapCount===1&&(o.minFilter=on),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class b2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=new ln,o=new tl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(l){r.image=l,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class ts extends Ct{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Oe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class ry extends ts{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Oe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const xf=new ot,O_=new U,F_=new U;class ip{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ce(512,512),this.map=null,this.mapPass=null,this.matrix=new ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new vu,this._frameExtents=new ce(1,1),this._viewportCount=1,this._viewports=[new Nt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;O_.setFromMatrixPosition(e.matrixWorld),t.position.copy(O_),F_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(F_),t.updateMatrixWorld(),xf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(xf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(xf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class E2 extends ip{constructor(){super(new yn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=za*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class sy extends ts{constructor(e,t,n=0,i=Math.PI/3,r=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.distance=n,this.angle=i,this.penumbra=r,this.decay=o,this.map=null,this.shadow=new E2}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const B_=new ot,wo=new U,Mf=new U;class w2 extends ip{constructor(){super(new yn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ce(4,2),this._viewportCount=6,this._viewports=[new Nt(2,1,1,1),new Nt(0,1,1,1),new Nt(3,1,1,1),new Nt(1,1,1,1),new Nt(3,0,1,1),new Nt(1,0,1,1)],this._cubeDirections=[new U(1,0,0),new U(-1,0,0),new U(0,0,1),new U(0,0,-1),new U(0,1,0),new U(0,-1,0)],this._cubeUps=[new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,1,0),new U(0,0,1),new U(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),wo.setFromMatrixPosition(e.matrixWorld),n.position.copy(wo),Mf.copy(n.position),Mf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Mf),n.updateMatrixWorld(),i.makeTranslation(-wo.x,-wo.y,-wo.z),B_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(B_)}}class ay extends ts{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new w2}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class T2 extends ip{constructor(){super(new yu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class oy extends ts{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.shadow=new T2}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class ly extends ts{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class cy extends ts{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class uy{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new U)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*r),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*r)),t.addScaledVector(o[6],.315392*(3*r*r-1)),t.addScaledVector(o[7],1.092548*(n*r)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*r),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*r),t.addScaledVector(o[6],.743125*r*r-.247708),t.addScaledVector(o[7],2*.429043*n*r),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class Ru extends ts{constructor(e=new uy,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Cu extends li{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,o=new Ar(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(JSON.parse(l)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=Cu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Oe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const o=e.uniforms[r];switch(i.uniforms[r]={},o.type){case"t":i.uniforms[r].value=n(o.value);break;case"c":i.uniforms[r].value=new Oe().setHex(o.value);break;case"v2":i.uniforms[r].value=new ce().fromArray(o.value);break;case"v3":i.uniforms[r].value=new U().fromArray(o.value);break;case"v4":i.uniforms[r].value=new Nt().fromArray(o.value);break;case"m3":i.uniforms[r].value=new mt().fromArray(o.value);break;case"m4":i.uniforms[r].value=new ot().fromArray(o.value);break;default:i.uniforms[r].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ce().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ce().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Wv,SpriteMaterial:kd,RawShaderMaterial:Xv,ShaderMaterial:Ji,PointsMaterial:Vd,MeshPhysicalMaterial:qv,MeshStandardMaterial:$d,MeshPhongMaterial:Yv,MeshToonMaterial:Zv,MeshNormalMaterial:Kv,MeshLambertMaterial:Jv,MeshDepthMaterial:Fd,MeshDistanceMaterial:Bd,MeshBasicMaterial:jr,MeshMatcapMaterial:$v,LineDashedMaterial:Qv,LineBasicMaterial:Gn,Material:Ln};return new t[e]}}class fd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class hy extends yt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class fy extends li{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Ar(r.manager);o.setPath(r.path),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(JSON.parse(l)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(g,v){if(t[v]!==void 0)return t[v];const y=g.interleavedBuffers[v],_=r(g,y.buffer),b=La(y.type,_),S=new bu(b,y.stride);return S.uuid=y.uuid,t[v]=S,S}function r(g,v){if(n[v]!==void 0)return n[v];const y=g.arrayBuffers[v],_=new Uint32Array(y).buffer;return n[v]=_,_}const o=e.isInstancedBufferGeometry?new hy:new yt,l=e.data.index;if(l!==void 0){const g=La(l.type,l.array);o.setIndex(new zt(g,1))}const u=e.data.attributes;for(const g in u){const v=u[g];let M;if(v.isInterleavedBufferAttribute){const y=i(e.data,v.data);M=new Us(y,v.itemSize,v.offset,v.normalized)}else{const y=La(v.type,v.array),_=v.isInstancedBufferAttribute?ka:zt;M=new _(y,v.itemSize,v.normalized)}v.name!==void 0&&(M.name=v.name),v.usage!==void 0&&M.setUsage(v.usage),v.updateRange!==void 0&&(M.updateRange.offset=v.updateRange.offset,M.updateRange.count=v.updateRange.count),o.setAttribute(g,M)}const h=e.data.morphAttributes;if(h)for(const g in h){const v=h[g],M=[];for(let y=0,_=v.length;y<_;y++){const b=v[y];let S;if(b.isInterleavedBufferAttribute){const w=i(e.data,b.data);S=new Us(w,b.itemSize,b.offset,b.normalized)}else{const w=La(b.type,b.array);S=new zt(w,b.itemSize,b.normalized)}b.name!==void 0&&(S.name=b.name),M.push(S)}o.morphAttributes[g]=M}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const m=e.data.groups||e.data.drawcalls||e.data.offsets;if(m!==void 0)for(let g=0,v=m.length;g!==v;++g){const M=m[g];o.addGroup(M.start,M.count,M.materialIndex)}const p=e.data.boundingSphere;if(p!==void 0){const g=new U;p.center!==void 0&&g.fromArray(p.center),o.boundingSphere=new Oi(g,p.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class A2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=this,o=this.path===""?fd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const l=new Ar(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+e+".",m.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?fd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Ar(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const o=await r.loadAsync(e,t),l=JSON.parse(o),u=l.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(l)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),l=this.parseTextures(e.textures,o),u=this.parseMaterials(e.materials,l),h=this.parseObject(e.object,r,u,l,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let m=!1;for(const p in o)if(o[p].data instanceof HTMLImageElement){m=!0;break}m===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,r),l=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,i,l,o,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new Ls().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,o=e.length;r<o;r++){const l=new Eu().fromJSON(e[r],i);n[l.uuid]=l}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new fy;for(let r=0,o=e.length;r<o;r++){let l;const u=e[r];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":l=i.parse(u);break;default:u.type in N_?l=N_[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}l.uuid=u.uuid,u.name!==void 0&&(l.name=u.name),u.userData!==void 0&&(l.userData=u.userData),n[u.uuid]=l}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Cu;r.setTextures(t);for(let o=0,l=e.length;o<l;o++){const u=e[o];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=el.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function o(u){return n.manager.itemStart(u),r.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function l(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(d)}else return u.data?{data:La(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new np(t);r=new tl(u),r.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const m=e[h],p=m.url;if(Array.isArray(p)){const g=[];for(let v=0,M=p.length;v<M;v++){const y=p[v],_=l(y);_!==null&&(_ instanceof HTMLImageElement?g.push(_):g.push(new Oa(_.data,_.width,_.height)))}i[m.uuid]=new As(g)}else{const g=l(m.url);i[m.uuid]=new As(g)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(o){if(typeof o=="string"){const l=o,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:t.resourcePath+l;return await i.loadAsync(u)}else return o.data?{data:La(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new tl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,l=e.length;o<l;o++){const u=e[o],h=u.url;if(Array.isArray(h)){const d=[];for(let m=0,p=h.length;m<p;m++){const g=h[m],v=await r(g);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new Oa(v.data,v.width,v.height)))}n[u.uuid]=new As(d)}else{const d=await r(u.url);n[u.uuid]=new As(d)}}}return n}parseTextures(e,t){function n(r,o){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),o[r])}const i={};if(e!==void 0)for(let r=0,o=e.length;r<o;r++){const l=e[r];l.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',l.uuid),t[l.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",l.image);const u=t[l.image],h=u.data;let d;Array.isArray(h)?(d=new sl,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Oa:d=new ln,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=l.uuid,l.name!==void 0&&(d.name=l.name),l.mapping!==void 0&&(d.mapping=n(l.mapping,R2)),l.channel!==void 0&&(d.channel=l.channel),l.offset!==void 0&&d.offset.fromArray(l.offset),l.repeat!==void 0&&d.repeat.fromArray(l.repeat),l.center!==void 0&&d.center.fromArray(l.center),l.rotation!==void 0&&(d.rotation=l.rotation),l.wrap!==void 0&&(d.wrapS=n(l.wrap[0],z_),d.wrapT=n(l.wrap[1],z_)),l.format!==void 0&&(d.format=l.format),l.internalFormat!==void 0&&(d.internalFormat=l.internalFormat),l.type!==void 0&&(d.type=l.type),l.colorSpace!==void 0&&(d.colorSpace=l.colorSpace),l.encoding!==void 0&&(d.encoding=l.encoding),l.minFilter!==void 0&&(d.minFilter=n(l.minFilter,H_)),l.magFilter!==void 0&&(d.magFilter=n(l.magFilter,H_)),l.anisotropy!==void 0&&(d.anisotropy=l.anisotropy),l.flipY!==void 0&&(d.flipY=l.flipY),l.generateMipmaps!==void 0&&(d.generateMipmaps=l.generateMipmaps),l.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=l.premultiplyAlpha),l.unpackAlignment!==void 0&&(d.unpackAlignment=l.unpackAlignment),l.compareFunction!==void 0&&(d.compareFunction=l.compareFunction),l.userData!==void 0&&(d.userData=l.userData),i[l.uuid]=d}return i}parseObject(e,t,n,i,r){let o;function l(p){return t[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",p),t[p]}function u(p){if(p!==void 0){if(Array.isArray(p)){const g=[];for(let v=0,M=p.length;v<M;v++){const y=p[v];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),g.push(n[y])}return g}return n[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),n[p]}}function h(p){return i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",p),i[p]}let d,m;switch(e.type){case"Scene":o=new Hd,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Oe(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Su(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Mu(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":o=new yn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new yu(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new ly(e.color,e.intensity);break;case"DirectionalLight":o=new oy(e.color,e.intensity);break;case"PointLight":o=new ay(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new cy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new sy(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new ry(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Ru().fromJSON(e);break;case"SkinnedMesh":d=l(e.geometry),m=u(e.material),o=new Pv(d,m),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":d=l(e.geometry),m=u(e.material),o=new xn(d,m);break;case"InstancedMesh":d=l(e.geometry),m=u(e.material);const p=e.count,g=e.instanceMatrix,v=e.instanceColor;o=new Lv(d,m,p),o.instanceMatrix=new ka(new Float32Array(g.array),16),v!==void 0&&(o.instanceColor=new ka(new Float32Array(v.array),v.itemSize));break;case"LOD":o=new Cv;break;case"Line":o=new $r(l(e.geometry),u(e.material));break;case"LineLoop":o=new Iv(l(e.geometry),u(e.material));break;case"LineSegments":o=new ji(l(e.geometry),u(e.material));break;case"PointCloud":case"Points":o=new Uv(l(e.geometry),u(e.material));break;case"Sprite":o=new Rv(u(e.material));break;case"Group":o=new Ua;break;case"Bone":o=new Gd;break;default:o=new Ct}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const p=e.children;for(let g=0;g<p.length;g++)o.add(this.parseObject(p[g],t,n,i,r))}if(e.animations!==void 0){const p=e.animations;for(let g=0;g<p.length;g++){const v=p[g];o.animations.push(r[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const p=e.levels;for(let g=0;g<p.length;g++){const v=p[g],M=o.getObjectByProperty("uuid",v.object);M!==void 0&&o.addLevel(M,v.distance,v.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const R2={UVMapping:du,CubeReflectionMapping:Zr,CubeRefractionMapping:Kr,EquirectangularReflectionMapping:Fo,EquirectangularRefractionMapping:Bo,CubeUVReflectionMapping:Ga},z_={RepeatWrapping:zo,ClampToEdgeWrapping:Cn,MirroredRepeatWrapping:Ho},H_={NearestFilter:an,NearestMipmapNearestFilter:ou,NearestMipmapLinearFilter:Po,LinearFilter:on,LinearMipmapNearestFilter:Sd,LinearMipmapLinearFilter:Jr};class C2 extends li{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,o=Ns.get(e);if(o!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(o),r.manager.itemEnd(e)},0),o;const l={};l.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",l.headers=this.requestHeader,fetch(e,l).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(u){Ns.add(e,u),t&&t(u),r.manager.itemEnd(e)}).catch(function(u){i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let Gc;class rp{static getContext(){return Gc===void 0&&(Gc=new(window.AudioContext||window.webkitAudioContext)),Gc}static setContext(e){Gc=e}}class P2 extends li{constructor(e){super(e)}load(e,t,n,i){const r=this,o=new Ar(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(u){try{const h=u.slice(0);rp.getContext().decodeAudioData(h,function(m){t(m)},l)}catch(h){l(h)}},n,i);function l(u){i?i(u):console.error(u),r.manager.itemError(e)}}}class L2 extends Ru{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Oe().set(e),r=new Oe().set(t),o=new U(i.r,i.g,i.b),l=new U(r.r,r.g,r.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(l).multiplyScalar(u),this.sh.coefficients[1].copy(o).sub(l).multiplyScalar(h)}}class I2 extends Ru{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Oe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const k_=new ot,G_=new ot,ms=new ot;class U2{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new yn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new yn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ms.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,o=t.near*Math.tan(Ps*t.fov*.5)/t.zoom;let l,u;G_.elements[12]=-i,k_.elements[12]=i,l=-o*t.aspect+r,u=o*t.aspect+r,ms.elements[0]=2*t.near/(u-l),ms.elements[8]=(u+l)/(u-l),this.cameraL.projectionMatrix.copy(ms),l=-o*t.aspect-r,u=o*t.aspect-r,ms.elements[0]=2*t.near/(u-l),ms.elements[8]=(u+l)/(u-l),this.cameraR.projectionMatrix.copy(ms)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(G_),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(k_)}}class sp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=V_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=V_();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function V_(){return(typeof performance>"u"?Date:performance).now()}const gs=new U,W_=new Pn,D2=new U,_s=new U;class N2 extends Ct{constructor(){super(),this.type="AudioListener",this.context=rp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new sp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(gs,W_,D2),_s.set(0,0,-1).applyQuaternion(W_),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(gs.x,i),t.positionY.linearRampToValueAtTime(gs.y,i),t.positionZ.linearRampToValueAtTime(gs.z,i),t.forwardX.linearRampToValueAtTime(_s.x,i),t.forwardY.linearRampToValueAtTime(_s.y,i),t.forwardZ.linearRampToValueAtTime(_s.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(gs.x,gs.y,gs.z),t.setOrientation(_s.x,_s.y,_s.z,n.x,n.y,n.z)}}class dy extends Ct{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const vs=new U,X_=new Pn,O2=new U,ys=new U;class F2 extends dy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(vs,X_,O2),ys.set(0,0,1).applyQuaternion(X_);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(vs.x,n),t.positionY.linearRampToValueAtTime(vs.y,n),t.positionZ.linearRampToValueAtTime(vs.z,n),t.orientationX.linearRampToValueAtTime(ys.x,n),t.orientationY.linearRampToValueAtTime(ys.y,n),t.orientationZ.linearRampToValueAtTime(ys.z,n)}else t.setPosition(vs.x,vs.y,vs.z),t.setOrientation(ys.x,ys.y,ys.z)}}class B2{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class py{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,o;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let l=0;l!==i;++l)n[r+l]=n[l];o=t}else{o+=t;const l=t/o;this._mixBufferRegion(n,r,0,l,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,o=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){l.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,o=i;r!==o;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let o=0;o!==r;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Pn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const o=this._workIndex*r;Pn.multiplyQuaternionsFlat(e,o,e,t,e,n),Pn.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,r){const o=1-i;for(let l=0;l!==r;++l){const u=t+l;e[u]=e[u]*o+e[n+l]*i}}_lerpAdditive(e,t,n,i,r){for(let o=0;o!==r;++o){const l=t+o;e[l]=e[l]+e[n+o]*i}}}const ap="\\[\\]\\.:\\/",z2=new RegExp("["+ap+"]","g"),op="[^"+ap+"]",H2="[^"+ap.replace("\\.","")+"]",k2=/((?:WC+[\/:])*)/.source.replace("WC",op),G2=/(WCOD+)?/.source.replace("WCOD",H2),V2=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",op),W2=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",op),X2=new RegExp("^"+k2+G2+V2+W2+"$"),q2=["material","materials","bones","map"];class Y2{constructor(e,t,n){const i=n||Rt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Rt{constructor(e,t,n){this.path=t,this.parsedPath=n||Rt.parseTrackName(t),this.node=Rt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Rt.Composite(e,t,n):new Rt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(z2,"")}static parseTrackName(e){const t=X2.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);q2.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let o=0;o<r.length;o++){const l=r[o];if(l.name===t||l.uuid===t)return l;const u=n(l.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Rt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let l=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?l=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(l=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=r}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][l]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Rt.Composite=Y2;Rt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Rt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Rt.prototype.GetterByBindingType=[Rt.prototype._getValue_direct,Rt.prototype._getValue_array,Rt.prototype._getValue_arrayElement,Rt.prototype._getValue_toArray];Rt.prototype.SetterByBindingTypeAndVersioning=[[Rt.prototype._setValue_direct,Rt.prototype._setValue_direct_setNeedsUpdate,Rt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_array,Rt.prototype._setValue_array_setNeedsUpdate,Rt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_arrayElement,Rt.prototype._setValue_arrayElement_setNeedsUpdate,Rt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_fromArray,Rt.prototype._setValue_fromArray_setNeedsUpdate,Rt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Z2{constructor(){this.isAnimationObjectGroup=!0,this.uuid=oi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,o=r.length;let l,u=e.length,h=this.nCachedObjects_;for(let d=0,m=arguments.length;d!==m;++d){const p=arguments[d],g=p.uuid;let v=t[g];if(v===void 0){v=u++,t[g]=v,e.push(p);for(let M=0,y=o;M!==y;++M)r[M].push(new Rt(p,n[M],i[M]))}else if(v<h){l=e[v];const M=--h,y=e[M];t[y.uuid]=v,e[v]=y,t[g]=M,e[M]=p;for(let _=0,b=o;_!==b;++_){const S=r[_],w=S[M];let T=S[v];S[v]=w,T===void 0&&(T=new Rt(p,n[_],i[_])),S[M]=T}}else e[v]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let o=0,l=arguments.length;o!==l;++o){const u=arguments[o],h=u.uuid,d=t[h];if(d!==void 0&&d>=r){const m=r++,p=e[m];t[p.uuid]=d,e[d]=p,t[h]=m,e[m]=u;for(let g=0,v=i;g!==v;++g){const M=n[g],y=M[m],_=M[d];M[d]=y,M[m]=_}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,o=e.length;for(let l=0,u=arguments.length;l!==u;++l){const h=arguments[l],d=h.uuid,m=t[d];if(m!==void 0)if(delete t[d],m<r){const p=--r,g=e[p],v=--o,M=e[v];t[g.uuid]=m,e[m]=g,t[M.uuid]=p,e[p]=M,e.pop();for(let y=0,_=i;y!==_;++y){const b=n[y],S=b[p],w=b[v];b[m]=S,b[p]=w,b.pop()}}else{const p=--o,g=e[p];p>0&&(t[g.uuid]=m),e[m]=g,e.pop();for(let v=0,M=i;v!==M;++v){const y=n[v];y[m]=y[p],y.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const o=this._paths,l=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,m=new Array(h);i=r.length,n[e]=i,o.push(e),l.push(t),r.push(m);for(let p=d,g=u.length;p!==g;++p){const v=u[p];m[p]=new Rt(v,e,t)}return m}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,o=this._bindings,l=o.length-1,u=o[l],h=e[l];t[h]=n,o[n]=u,o.pop(),r[n]=r[l],r.pop(),i[n]=i[l],i.pop()}}}class my{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,o=r.length,l=new Array(o),u={endingStart:ws,endingEnd:ws};for(let h=0;h!==o;++h){const d=r[h].createInterpolant(null);l[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=l,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=$0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,o=r/i,l=i/r;e.warp(1,o,t),this.warp(l,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,o=this.timeScale;let l=this._timeScaleInterpolant;l===null&&(l=i._lendControlInterpolant(),this._timeScaleInterpolant=l);const u=l.parameterPositions,h=l.sampleValues;return u[0]=r,u[1]=r+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const o=this._updateTime(t),l=this._updateWeight(e);if(l>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Cd:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(o),h[d].accumulateAdditive(l);break;case mu:default:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(o),h[d].accumulate(i,l)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const o=n===Q0;if(e===0)return r===-1?i:o&&(r&1)===1?t-i:i;if(n===J0){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const l=Math.floor(i/t);i-=t*l,r+=Math.abs(l);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=i;if(o&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ts,i.endingEnd=Ts):(e?i.endingStart=this.zeroSlopeAtStart?Ts:ws:i.endingStart=Vo,t?i.endingEnd=this.zeroSlopeAtEnd?Ts:ws:i.endingEnd=Vo)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const l=o.parameterPositions,u=o.sampleValues;return l[0]=r,u[0]=t,l[1]=r+e,u[1]=n,this}}const K2=new Float32Array(1);class J2 extends $i{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,o=e._propertyBindings,l=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let m=0;m!==r;++m){const p=i[m],g=p.name;let v=d[g];if(v!==void 0)++v.referenceCount,o[m]=v;else{if(v=o[m],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,u,g));continue}const M=t&&t._propertyBindings[m].binding.parsedPath;v=new py(Rt.create(n,g,M),p.ValueTypeName,p.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,u,g),o[m]=v}l[m].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let o=r[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=o;else{const l=o.knownActions;e._byClipCacheIndex=l.length,l.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,o=this._actionsByClip,l=o[r],u=l.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const m=l.actionByRoot,p=(e._localRoot||this._root).uuid;delete m[p],u.length===0&&delete o[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,o=this._bindingsByRootAndName,l=o[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete l[r],Object.keys(l).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new ep(new Float32Array(2),new Float32Array(2),1,K2),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let o=typeof e=="string"?el.findByName(i,e):e;const l=o!==null?o.uuid:e,u=this._actionsByClip[l];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=mu),u!==void 0){const m=u.actionByRoot[r];if(m!==void 0&&m.blendMode===n)return m;h=u.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const d=new my(this,o,t,n);return this._bindAction(d,h),this._addInactiveAction(d,l,r),d}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?el.findByName(n,e):e,o=r?r.uuid:e,l=this._actionsByClip[o];return l!==void 0&&l.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,o);const l=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)l[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const o=r.knownActions;for(let l=0,u=o.length;l!==u;++l){const h=o[l];this._deactivateAction(h);const d=h._cacheIndex,m=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,m._cacheIndex=d,t[d]=m,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const l=n[o].actionByRoot,u=l[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const o in r){const l=r[o];l.restoreOriginalState(),this._removeInactiveBinding(l)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class lp{constructor(e){this.value=e}clone(){return new lp(this.value.clone===void 0?this.value:this.value.clone())}}let $2=0;class Q2 extends $i{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:$2++}),this.name="",this.usage=Xo,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class j2 extends bu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class eI{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class tI{constructor(e,t,n=0,i=1/0){this.ray=new Va(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new _u,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return dd(e,this,n,t),n.sort(q_),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)dd(e[i],this,n,t);return n.sort(q_),n}}function q_(s,e){return s.distance-e.distance}function dd(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,o=i.length;r<o;r++)dd(i[r],e,t,!0)}}class pd{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(tn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class nI{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const Y_=new ce;class iI{constructor(e=new ce(1/0,1/0),t=new ce(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Y_.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Y_).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Z_=new U,Vc=new U;class rI{constructor(e=new U,t=new U){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Z_.subVectors(e,this.start),Vc.subVectors(this.end,this.start);const n=Vc.dot(Vc);let r=Vc.dot(Z_)/n;return t&&(r=tn(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const K_=new U;class sI extends Ct{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new yt,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,l=1,u=32;o<u;o++,l++){const h=o/u*Math.PI*2,d=l/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new We(i,3));const r=new Gn({fog:!1,toneMapped:!1});this.cone=new ji(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),K_.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(K_),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Vr=new U,Wc=new ot,Sf=new ot;class aI extends ji{constructor(e){const t=gy(e),n=new yt,i=[],r=[],o=new Oe(0,0,1),l=new Oe(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(o.r,o.g,o.b),r.push(l.r,l.g,l.b))}n.setAttribute("position",new We(i,3)),n.setAttribute("color",new We(r,3));const u=new Gn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Sf.copy(this.root.matrixWorld).invert();for(let r=0,o=0;r<t.length;r++){const l=t[r];l.parent&&l.parent.isBone&&(Wc.multiplyMatrices(Sf,l.matrixWorld),Vr.setFromMatrixPosition(Wc),i.setXYZ(o,Vr.x,Vr.y,Vr.z),Wc.multiplyMatrices(Sf,l.parent.matrixWorld),Vr.setFromMatrixPosition(Wc),i.setXYZ(o+1,Vr.x,Vr.y,Vr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function gy(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,gy(s.children[t]));return e}class oI extends xn{constructor(e,t,n){const i=new Za(t,4,2),r=new jr({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const lI=new U,J_=new Oe,$_=new Oe;class cI extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Ya(t);i.rotateY(Math.PI*.5),this.material=new jr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),o=new Float32Array(r.count*3);i.setAttribute("color",new zt(o,3)),this.add(new xn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");J_.copy(this.light.color),$_.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?J_:$_;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(lI.setFromMatrixPosition(this.light.matrixWorld).negate())}}class uI extends ji{constructor(e=10,t=10,n=4473924,i=8947848){n=new Oe(n),i=new Oe(i);const r=t/2,o=e/t,l=e/2,u=[],h=[];for(let p=0,g=0,v=-l;p<=t;p++,v+=o){u.push(-l,0,v,l,0,v),u.push(v,0,-l,v,0,l);const M=p===r?n:i;M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3,M.toArray(h,g),g+=3}const d=new yt;d.setAttribute("position",new We(u,3)),d.setAttribute("color",new We(h,3));const m=new Gn({vertexColors:!0,toneMapped:!1});super(d,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class hI extends ji{constructor(e=10,t=16,n=8,i=64,r=4473924,o=8947848){r=new Oe(r),o=new Oe(o);const l=[],u=[];if(t>1)for(let m=0;m<t;m++){const p=m/t*(Math.PI*2),g=Math.sin(p)*e,v=Math.cos(p)*e;l.push(0,0,0),l.push(g,0,v);const M=m&1?r:o;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let m=0;m<n;m++){const p=m&1?r:o,g=e-e/n*m;for(let v=0;v<i;v++){let M=v/i*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g;l.push(y,0,_),u.push(p.r,p.g,p.b),M=(v+1)/i*(Math.PI*2),y=Math.sin(M)*g,_=Math.cos(M)*g,l.push(y,0,_),u.push(p.r,p.g,p.b)}}const h=new yt;h.setAttribute("position",new We(l,3)),h.setAttribute("color",new We(u,3));const d=new Gn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Q_=new U,Xc=new U,j_=new U;class fI extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new yt;i.setAttribute("position",new We([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new Gn({fog:!1,toneMapped:!1});this.lightPlane=new $r(i,r),this.add(this.lightPlane),i=new yt,i.setAttribute("position",new We([0,0,0,0,0,1],3)),this.targetLine=new $r(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Q_.setFromMatrixPosition(this.light.matrixWorld),Xc.setFromMatrixPosition(this.light.target.matrixWorld),j_.subVectors(Xc,Q_),this.lightPlane.lookAt(Xc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Xc),this.targetLine.scale.z=j_.length()}}const qc=new U,en=new rl;class dI extends ji{constructor(e){const t=new yt,n=new Gn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],o={};l("n1","n2"),l("n2","n4"),l("n4","n3"),l("n3","n1"),l("f1","f2"),l("f2","f4"),l("f4","f3"),l("f3","f1"),l("n1","f1"),l("n2","f2"),l("n3","f3"),l("n4","f4"),l("p","n1"),l("p","n2"),l("p","n3"),l("p","n4"),l("u1","u2"),l("u2","u3"),l("u3","u1"),l("c","t"),l("p","c"),l("cn1","cn2"),l("cn3","cn4"),l("cf1","cf2"),l("cf3","cf4");function l(v,M){u(v),u(M)}function u(v){i.push(0,0,0),r.push(0,0,0),o[v]===void 0&&(o[v]=[]),o[v].push(i.length/3-1)}t.setAttribute("position",new We(i,3)),t.setAttribute("color",new We(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Oe(16755200),d=new Oe(16711680),m=new Oe(43775),p=new Oe(16777215),g=new Oe(3355443);this.setColors(h,d,m,p,g)}setColors(e,t,n,i,r){const l=this.geometry.getAttribute("color");l.setXYZ(0,e.r,e.g,e.b),l.setXYZ(1,e.r,e.g,e.b),l.setXYZ(2,e.r,e.g,e.b),l.setXYZ(3,e.r,e.g,e.b),l.setXYZ(4,e.r,e.g,e.b),l.setXYZ(5,e.r,e.g,e.b),l.setXYZ(6,e.r,e.g,e.b),l.setXYZ(7,e.r,e.g,e.b),l.setXYZ(8,e.r,e.g,e.b),l.setXYZ(9,e.r,e.g,e.b),l.setXYZ(10,e.r,e.g,e.b),l.setXYZ(11,e.r,e.g,e.b),l.setXYZ(12,e.r,e.g,e.b),l.setXYZ(13,e.r,e.g,e.b),l.setXYZ(14,e.r,e.g,e.b),l.setXYZ(15,e.r,e.g,e.b),l.setXYZ(16,e.r,e.g,e.b),l.setXYZ(17,e.r,e.g,e.b),l.setXYZ(18,e.r,e.g,e.b),l.setXYZ(19,e.r,e.g,e.b),l.setXYZ(20,e.r,e.g,e.b),l.setXYZ(21,e.r,e.g,e.b),l.setXYZ(22,e.r,e.g,e.b),l.setXYZ(23,e.r,e.g,e.b),l.setXYZ(24,t.r,t.g,t.b),l.setXYZ(25,t.r,t.g,t.b),l.setXYZ(26,t.r,t.g,t.b),l.setXYZ(27,t.r,t.g,t.b),l.setXYZ(28,t.r,t.g,t.b),l.setXYZ(29,t.r,t.g,t.b),l.setXYZ(30,t.r,t.g,t.b),l.setXYZ(31,t.r,t.g,t.b),l.setXYZ(32,n.r,n.g,n.b),l.setXYZ(33,n.r,n.g,n.b),l.setXYZ(34,n.r,n.g,n.b),l.setXYZ(35,n.r,n.g,n.b),l.setXYZ(36,n.r,n.g,n.b),l.setXYZ(37,n.r,n.g,n.b),l.setXYZ(38,i.r,i.g,i.b),l.setXYZ(39,i.r,i.g,i.b),l.setXYZ(40,r.r,r.g,r.b),l.setXYZ(41,r.r,r.g,r.b),l.setXYZ(42,r.r,r.g,r.b),l.setXYZ(43,r.r,r.g,r.b),l.setXYZ(44,r.r,r.g,r.b),l.setXYZ(45,r.r,r.g,r.b),l.setXYZ(46,r.r,r.g,r.b),l.setXYZ(47,r.r,r.g,r.b),l.setXYZ(48,r.r,r.g,r.b),l.setXYZ(49,r.r,r.g,r.b),l.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;en.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),sn("c",t,e,en,0,0,-1),sn("t",t,e,en,0,0,1),sn("n1",t,e,en,-n,-i,-1),sn("n2",t,e,en,n,-i,-1),sn("n3",t,e,en,-n,i,-1),sn("n4",t,e,en,n,i,-1),sn("f1",t,e,en,-n,-i,1),sn("f2",t,e,en,n,-i,1),sn("f3",t,e,en,-n,i,1),sn("f4",t,e,en,n,i,1),sn("u1",t,e,en,n*.7,i*1.1,-1),sn("u2",t,e,en,-n*.7,i*1.1,-1),sn("u3",t,e,en,0,i*2,-1),sn("cf1",t,e,en,-n,0,1),sn("cf2",t,e,en,n,0,1),sn("cf3",t,e,en,0,-i,1),sn("cf4",t,e,en,0,i,1),sn("cn1",t,e,en,-n,0,-1),sn("cn2",t,e,en,n,0,-1),sn("cn3",t,e,en,0,-i,-1),sn("cn4",t,e,en,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function sn(s,e,t,n,i,r,o){qc.set(i,r,o).unproject(n);const l=e[s];if(l!==void 0){const u=t.getAttribute("position");for(let h=0,d=l.length;h<d;h++)u.setXYZ(l[h],qc.x,qc.y,qc.z)}}const Yc=new Qi;class pI extends ji{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new yt;r.setIndex(new zt(n,1)),r.setAttribute("position",new zt(i,3)),super(r,new Gn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Yc.setFromObject(this.object),Yc.isEmpty())return;const t=Yc.min,n=Yc.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class mI extends ji{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new yt;r.setIndex(new zt(n,1)),r.setAttribute("position",new We(i,3)),super(r,new Gn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class gI extends $r{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new yt;o.setAttribute("position",new We(r,3)),o.computeBoundingSphere(),super(o,new Gn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const l=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new yt;u.setAttribute("position",new We(l,3)),u.computeBoundingSphere(),this.add(new xn(u,new jr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const e0=new U;let Zc,bf;class _I extends Ct{constructor(e=new U(0,0,1),t=new U(0,0,0),n=1,i=16776960,r=n*.2,o=r*.2){super(),this.type="ArrowHelper",Zc===void 0&&(Zc=new yt,Zc.setAttribute("position",new We([0,0,0,0,1,0],3)),bf=new Hs(0,.5,1,5,1),bf.translate(0,-.5,0)),this.position.copy(t),this.line=new $r(Zc,new Gn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new xn(bf,new jr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{e0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(e0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class vI extends ji{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new yt;i.setAttribute("position",new We(t,3)),i.setAttribute("color",new We(n,3));const r=new Gn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new Oe,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class yI{constructor(){this.type="ShapePath",this.color=new Oe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Zo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,o){return this.currentPath.bezierCurveTo(e,t,n,i,r,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(_){const b=[];for(let S=0,w=_.length;S<w;S++){const T=_[S],L=new Ls;L.curves=T.curves,b.push(L)}return b}function n(_,b){const S=b.length;let w=!1;for(let T=S-1,L=0;L<S;T=L++){let O=b[T],N=b[L],A=N.x-O.x,I=N.y-O.y;if(Math.abs(I)>Number.EPSILON){if(I<0&&(O=b[L],A=-A,N=b[T],I=-I),_.y<O.y||_.y>N.y)continue;if(_.y===O.y){if(_.x===O.x)return!0}else{const K=I*(_.x-O.x)-A*(_.y-O.y);if(K===0)return!0;if(K<0)continue;w=!w}}else{if(_.y!==O.y)continue;if(N.x<=_.x&&_.x<=O.x||O.x<=_.x&&_.x<=N.x)return!0}}return w}const i=Zi.isClockWise,r=this.subPaths;if(r.length===0)return[];let o,l,u;const h=[];if(r.length===1)return l=r[0],u=new Ls,u.curves=l.curves,h.push(u),h;let d=!i(r[0].getPoints());d=e?!d:d;const m=[],p=[];let g=[],v=0,M;p[v]=void 0,g[v]=[];for(let _=0,b=r.length;_<b;_++)l=r[_],M=l.getPoints(),o=i(M),o=e?!o:o,o?(!d&&p[v]&&v++,p[v]={s:new Ls,p:M},p[v].s.curves=l.curves,d&&v++,g[v]=[]):g[v].push({h:l,p:M[0]});if(!p[0])return t(r);if(p.length>1){let _=!1,b=0;for(let S=0,w=p.length;S<w;S++)m[S]=[];for(let S=0,w=p.length;S<w;S++){const T=g[S];for(let L=0;L<T.length;L++){const O=T[L];let N=!0;for(let A=0;A<p.length;A++)n(O.p,p[A].p)&&(S!==A&&b++,N?(N=!1,m[A].push(O)):_=!0);N&&m[S].push(O)}}b>0&&_===!1&&(g=m)}let y;for(let _=0,b=p.length;_<b;_++){u=p[_].s,h.push(u),y=g[_];for(let S=0,w=y.length;S<w;S++)u.holes.push(y[S].h)}return h}}class xI extends es{constructor(e,t,n,i,r,o){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,r,o)}}class MI extends al{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class SI extends ol{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class bI extends ll{constructor(e,t,n,i,r,o,l){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,r,o,l)}}class EI extends Hs{constructor(e,t,n,i,r,o,l,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,r,o,l,u)}}class wI extends cl{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class TI extends ul{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class AI extends hl{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class RI extends qa{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class CI extends Ya{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class PI extends Wa{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class LI extends Rr{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class II extends fl{constructor(e,t,n,i,r,o){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,r,o)}}class UI extends dl{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class DI extends Za{constructor(e,t,n,i,r,o,l){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,r,o,l)}}class NI extends pl{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class OI extends ml{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,r)}}class FI extends gl{constructor(e,t,n,i,r,o){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,r,o)}}class BI extends _l{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:hu}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=hu);const zI=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Md,AddEquation:bs,AddOperation:O0,AdditiveAnimationBlendMode:Cd,AdditiveBlending:Pf,AlphaFormat:V0,AlwaysCompare:uv,AlwaysDepth:C0,AlwaysStencilFunc:nv,AmbientLight:ly,AmbientLightProbe:I2,AnimationAction:my,AnimationClip:el,AnimationLoader:y2,AnimationMixer:J2,AnimationObjectGroup:Z2,AnimationUtils:m2,ArcCurve:Dv,ArrayCamera:Ev,ArrowHelper:_I,Audio:dy,AudioAnalyser:B2,AudioContext:rp,AudioListener:N2,AudioLoader:P2,AxesHelper:vI,BackSide:kn,BasicDepthPacking:j0,BasicShadowMap:N1,Bone:Gd,BooleanKeyframeTrack:ks,Box2:iI,Box3:Qi,Box3Helper:mI,BoxBufferGeometry:xI,BoxGeometry:es,BoxHelper:pI,BufferAttribute:zt,BufferGeometry:yt,BufferGeometryLoader:fy,ByteType:k0,Cache:Ns,Camera:rl,CameraHelper:dI,CanvasTexture:zL,CapsuleBufferGeometry:MI,CapsuleGeometry:al,CatmullRomCurve3:Nv,CineonToneMapping:z0,CircleBufferGeometry:SI,CircleGeometry:ol,ClampToEdgeWrapping:Cn,Clock:sp,Color:Oe,ColorKeyframeTrack:tp,ColorManagement:ri,CompressedArrayTexture:BL,CompressedTexture:Wd,CompressedTextureLoader:x2,ConeBufferGeometry:bI,ConeGeometry:ll,CubeCamera:gv,CubeReflectionMapping:Zr,CubeRefractionMapping:Kr,CubeTexture:sl,CubeTextureLoader:M2,CubeUVReflectionMapping:Ga,CubicBezierCurve:qd,CubicBezierCurve3:Ov,CubicInterpolant:ey,CullFaceBack:Cf,CullFaceFront:m0,CullFaceFrontBack:D1,CullFaceNone:p0,Curve:Fi,CurvePath:Bv,CustomBlending:g0,CustomToneMapping:H0,CylinderBufferGeometry:EI,CylinderGeometry:Hs,Cylindrical:nI,Data3DTexture:Ud,DataArrayTexture:gu,DataTexture:Oa,DataTextureLoader:S2,DataUtils:ZT,DecrementStencilOp:Y1,DecrementWrapStencilOp:K1,DefaultLoadingManager:iy,DepthFormat:qr,DepthStencilFormat:Is,DepthTexture:wv,DirectionalLight:oy,DirectionalLightHelper:fI,DiscreteInterpolant:ty,DisplayP3ColorSpace:Pd,DodecahedronBufferGeometry:wI,DodecahedronGeometry:cl,DoubleSide:Wi,DstAlphaFactor:b0,DstColorFactor:w0,DynamicCopyUsage:uT,DynamicDrawUsage:rT,DynamicReadUsage:oT,EdgesGeometry:zv,EllipseCurve:wu,EqualCompare:sv,EqualDepth:L0,EqualStencilFunc:j1,EquirectangularReflectionMapping:Fo,EquirectangularRefractionMapping:Bo,Euler:il,EventDispatcher:$i,ExtrudeBufferGeometry:TI,ExtrudeGeometry:ul,FileLoader:Ar,Float16BufferAttribute:eA,Float32BufferAttribute:We,Float64BufferAttribute:tA,FloatType:Xi,Fog:Su,FogExp2:Mu,FramebufferTexture:FL,FrontSide:Tr,Frustum:vu,GLBufferAttribute:eI,GLSL1:fT,GLSL3:rd,GreaterCompare:ov,GreaterDepth:U0,GreaterEqualCompare:cv,GreaterEqualDepth:I0,GreaterEqualStencilFunc:iT,GreaterStencilFunc:tT,GridHelper:uI,Group:Ua,HalfFloatType:Ba,HemisphereLight:ry,HemisphereLightHelper:cI,HemisphereLightProbe:L2,IcosahedronBufferGeometry:AI,IcosahedronGeometry:hl,ImageBitmapLoader:C2,ImageLoader:tl,ImageUtils:Id,IncrementStencilOp:q1,IncrementWrapStencilOp:Z1,InstancedBufferAttribute:ka,InstancedBufferGeometry:hy,InstancedInterleavedBuffer:j2,InstancedMesh:Lv,Int16BufferAttribute:QT,Int32BufferAttribute:jT,Int8BufferAttribute:KT,IntType:bd,InterleavedBuffer:bu,InterleavedBufferAttribute:Us,Interpolant:vl,InterpolateDiscrete:ko,InterpolateLinear:Go,InterpolateSmooth:eu,InvertStencilOp:J1,KeepStencilOp:tu,KeyframeTrack:Bi,LOD:Cv,LatheBufferGeometry:RI,LatheGeometry:qa,Layers:_u,LessCompare:rv,LessDepth:P0,LessEqualCompare:av,LessEqualDepth:au,LessEqualStencilFunc:eT,LessStencilFunc:Q1,Light:ts,LightProbe:Ru,Line:$r,Line3:rI,LineBasicMaterial:Gn,LineCurve:Tu,LineCurve3:Fv,LineDashedMaterial:Qv,LineLoop:Iv,LineSegments:ji,LinearEncoding:Wo,LinearFilter:on,LinearInterpolant:ep,LinearMipMapLinearFilter:H1,LinearMipMapNearestFilter:z1,LinearMipmapLinearFilter:Jr,LinearMipmapNearestFilter:Sd,LinearSRGBColorSpace:Di,LinearToneMapping:F0,Loader:li,LoaderUtils:fd,LoadingManager:np,LoopOnce:J0,LoopPingPong:Q0,LoopRepeat:$0,LuminanceAlphaFormat:X0,LuminanceFormat:W0,MOUSE:xs,Material:Ln,MaterialLoader:Cu,MathUtils:TT,Matrix3:mt,Matrix4:ot,MaxEquation:Df,Mesh:xn,MeshBasicMaterial:jr,MeshDepthMaterial:Fd,MeshDistanceMaterial:Bd,MeshLambertMaterial:Jv,MeshMatcapMaterial:$v,MeshNormalMaterial:Kv,MeshPhongMaterial:Yv,MeshPhysicalMaterial:qv,MeshStandardMaterial:$d,MeshToonMaterial:Zv,MinEquation:Uf,MirroredRepeatWrapping:Ho,MixOperation:N0,MultiplyBlending:If,MultiplyOperation:nl,NearestFilter:an,NearestMipMapLinearFilter:B1,NearestMipMapNearestFilter:F1,NearestMipmapLinearFilter:Po,NearestMipmapNearestFilter:ou,NeverCompare:iv,NeverDepth:R0,NeverStencilFunc:$1,NoBlending:br,NoColorSpace:Yr,NoToneMapping:Yi,NormalAnimationBlendMode:mu,NormalBlending:Cs,NotEqualCompare:lv,NotEqualDepth:D0,NotEqualStencilFunc:nT,NumberKeyframeTrack:Qo,Object3D:Ct,ObjectLoader:A2,ObjectSpaceNormalMap:tv,OctahedronBufferGeometry:CI,OctahedronGeometry:Ya,OneFactor:x0,OneMinusDstAlphaFactor:E0,OneMinusDstColorFactor:T0,OneMinusSrcAlphaFactor:xd,OneMinusSrcColorFactor:S0,OrthographicCamera:yu,PCFShadowMap:vd,PCFSoftShadowMap:fu,PMREMGenerator:ad,Path:Zo,PerspectiveCamera:yn,Plane:Wr,PlaneBufferGeometry:PI,PlaneGeometry:Wa,PlaneHelper:gI,PointLight:ay,PointLightHelper:oI,Points:Uv,PointsMaterial:Vd,PolarGridHelper:hI,PolyhedronBufferGeometry:LI,PolyhedronGeometry:Rr,PositionalAudio:F2,PropertyBinding:Rt,PropertyMixer:py,QuadraticBezierCurve:Yd,QuadraticBezierCurve3:Zd,Quaternion:Pn,QuaternionKeyframeTrack:Ka,QuaternionLinearInterpolant:ny,RED_GREEN_RGTC2_Format:nd,RED_RGTC1_Format:K0,REVISION:hu,RGBADepthPacking:ev,RGBAFormat:si,RGBAIntegerFormat:Rd,RGBA_ASTC_10x10_Format:Qf,RGBA_ASTC_10x5_Format:Kf,RGBA_ASTC_10x6_Format:Jf,RGBA_ASTC_10x8_Format:$f,RGBA_ASTC_12x10_Format:jf,RGBA_ASTC_12x12_Format:ed,RGBA_ASTC_4x4_Format:kf,RGBA_ASTC_5x4_Format:Gf,RGBA_ASTC_5x5_Format:Vf,RGBA_ASTC_6x5_Format:Wf,RGBA_ASTC_6x6_Format:Xf,RGBA_ASTC_8x5_Format:qf,RGBA_ASTC_8x6_Format:Yf,RGBA_ASTC_8x8_Format:Zf,RGBA_BPTC_Format:jc,RGBA_ETC2_EAC_Format:Hf,RGBA_PVRTC_2BPPV1_Format:Bf,RGBA_PVRTC_4BPPV1_Format:Ff,RGBA_S3TC_DXT1_Format:Jc,RGBA_S3TC_DXT3_Format:$c,RGBA_S3TC_DXT5_Format:Qc,RGB_ETC1_Format:Z0,RGB_ETC2_Format:zf,RGB_PVRTC_2BPPV1_Format:Of,RGB_PVRTC_4BPPV1_Format:Nf,RGB_S3TC_DXT1_Format:Kc,RGFormat:Y0,RGIntegerFormat:Ad,RawShaderMaterial:Xv,Ray:Va,Raycaster:tI,RectAreaLight:cy,RedFormat:q0,RedIntegerFormat:Td,ReinhardToneMapping:B0,RepeatWrapping:zo,ReplaceStencilOp:X1,ReverseSubtractEquation:v0,RingBufferGeometry:II,RingGeometry:fl,SIGNED_RED_GREEN_RGTC2_Format:id,SIGNED_RED_RGTC1_Format:td,SRGBColorSpace:ht,Scene:Hd,ShaderChunk:pt,ShaderLib:Ii,ShaderMaterial:Ji,ShadowMaterial:Wv,Shape:Ls,ShapeBufferGeometry:UI,ShapeGeometry:dl,ShapePath:yI,ShapeUtils:Zi,ShortType:G0,Skeleton:Eu,SkeletonHelper:aI,SkinnedMesh:Pv,Source:As,Sphere:Oi,SphereBufferGeometry:DI,SphereGeometry:Za,Spherical:pd,SphericalHarmonics3:uy,SplineCurve:Kd,SpotLight:sy,SpotLightHelper:sI,Sprite:Rv,SpriteMaterial:kd,SrcAlphaFactor:yd,SrcAlphaSaturateFactor:A0,SrcColorFactor:M0,StaticCopyUsage:cT,StaticDrawUsage:Xo,StaticReadUsage:aT,StereoCamera:U2,StreamCopyUsage:hT,StreamDrawUsage:sT,StreamReadUsage:lT,StringKeyframeTrack:Gs,SubtractEquation:_0,SubtractiveBlending:Lf,TOUCH:Ms,TangentSpaceNormalMap:Qr,TetrahedronBufferGeometry:NI,TetrahedronGeometry:pl,Texture:ln,TextureLoader:b2,TorusBufferGeometry:OI,TorusGeometry:ml,TorusKnotBufferGeometry:FI,TorusKnotGeometry:gl,Triangle:Kn,TriangleFanDrawMode:V1,TriangleStripDrawMode:G1,TrianglesDrawMode:k1,TubeBufferGeometry:BI,TubeGeometry:_l,TwoPassDoubleSide:O1,UVMapping:du,Uint16BufferAttribute:Dd,Uint32BufferAttribute:Nd,Uint8BufferAttribute:JT,Uint8ClampedBufferAttribute:$T,Uniform:lp,UniformsGroup:Q2,UniformsLib:Ae,UniformsUtils:mv,UnsignedByteType:Er,UnsignedInt248Type:Xr,UnsignedIntType:Mr,UnsignedShort4444Type:Ed,UnsignedShort5551Type:wd,UnsignedShortType:pu,VSMShadowMap:Vi,Vector2:ce,Vector3:U,Vector4:Nt,VectorKeyframeTrack:jo,VideoTexture:OL,WebGL1Renderer:Tv,WebGL3DRenderTarget:FT,WebGLArrayRenderTarget:OT,WebGLCoordinateSystem:qi,WebGLCubeRenderTarget:_v,WebGLMultipleRenderTargets:BT,WebGLRenderTarget:Ni,WebGLRenderer:zd,WebGLUtils:bv,WebGPUCoordinateSystem:qo,WireframeGeometry:Vv,WrapAroundEnding:Vo,ZeroCurvatureEnding:ws,ZeroFactor:y0,ZeroSlopeEnding:Ts,ZeroStencilOp:W1,_SRGBAFormat:lu,sRGBEncoding:wr},Symbol.toStringTag,{value:"Module"})),HI=()=>Ki("threlte-internal-context");function kI(s){let e;const t=s[9].default,n=Os(t,s,s[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&256)&&Fs(n,t,i,i[8],e?zs(t,i[8],r,null):Bs(i[8]),null)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}const t0="threlte-disposable-object-context";function GI(s,e,t){let n,i,{$$slots:r={},$$scope:o}=e;const{collectDisposableObjects:l,addDisposableObjects:u,removeDisposableObjects:h}=HI();let{object:d=void 0}=e,m=d,{dispose:p=void 0}=e;const g=Ki(t0);Fa(s,g,y=>t(7,i=y));const v=Mi(p??i??!0);Fa(s,v,y=>t(6,n=y)),Ui(t0,v);let M=n?l(d):[];return u(M),Mn(()=>{h(M)}),s.$$set=y=>{"object"in y&&t(2,d=y.object),"dispose"in y&&t(3,p=y.dispose),"$$scope"in y&&t(8,o=y.$$scope)},s.$$.update=()=>{s.$$.dirty&136&&v.set(p??i??!0),s.$$.dirty&116&&d!==m&&(h(M),t(5,M=n?l(d):[]),u(M),t(4,m=d))},[g,v,d,p,m,M,n,i,o,r]}class VI extends Si{constructor(e){super(),bi(this,e,GI,kI,Ei,{object:2,dispose:3})}}function WI(s,e){const t=Mi(s);let n=s;const i=t.subscribe(l=>n=l);return Mn(i),{...t,set:l=>{if((l==null?void 0:l.uuid)===(n==null?void 0:n.uuid))return;const u=n;t.set(l),e==null||e(l,u)},update:l=>{const u=l(n);if((u==null?void 0:u.uuid)===(n==null?void 0:n.uuid))return;const h=n;t.set(u),e==null||e(u,h)}}}const yl=()=>Ki("threlte"),_y=()=>Ki("threlte-hierarchical-parent-context");function XI(s){let e;const t=s[8].default,n=Os(t,s,s[7],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,[r]){n&&n.p&&(!e||r&128)&&Fs(n,t,i,i[7],e?zs(t,i[7],r,null):Bs(i[7]),null)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}const qI=()=>({onChildMount:Ki("threlte-hierarchical-object-on-mount"),onChildDestroy:Ki("threlte-hierarchical-object-on-destroy")});function YI(s,e,t){var _;let n,{$$slots:i={},$$scope:r}=e,{object:o=void 0}=e,{children:l=[]}=e,{onChildMount:u=void 0}=e;const h=b=>{l.push(b),t(1,l),u==null||u(b)};let{onChildDestroy:d=void 0}=e;const m=b=>{const S=l.findIndex(w=>w.uuid===b.uuid);S!==-1&&l.splice(S,1),t(1,l),d==null||d(b)},{invalidate:p}=yl(),g=_y();Fa(s,g,b=>t(6,n=b));let{parent:v=n}=e;const M=qI();o&&((_=M.onChildMount)==null||_.call(M,o),p("HierarchicalObject: object added"));const y=WI(o,(b,S)=>{var w,T;S&&((w=M.onChildDestroy)==null||w.call(M,S),p("HierarchicalObject: object added")),b&&((T=M.onChildMount)==null||T.call(M,b),p("HierarchicalObject: object removed"))});return Mn(()=>{var b;o&&((b=M.onChildDestroy)==null||b.call(M,o),p("HierarchicalObject: object removed"))}),Ui("threlte-hierarchical-object-on-mount",h),Ui("threlte-hierarchical-object-on-destroy",m),Ui("threlte-hierarchical-parent-context",y),s.$$set=b=>{"object"in b&&t(3,o=b.object),"children"in b&&t(1,l=b.children),"onChildMount"in b&&t(4,u=b.onChildMount),"onChildDestroy"in b&&t(5,d=b.onChildDestroy),"parent"in b&&t(2,v=b.parent),"$$scope"in b&&t(7,r=b.$$scope)},s.$$.update=()=>{s.$$.dirty&64&&t(2,v=n),s.$$.dirty&8&&y.set(o)},[g,l,v,o,u,d,n,r,i]}class ZI extends Si{constructor(e){super(),bi(this,e,YI,XI,Ei,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function KI(s){let e;const t=s[1].default,n=Os(t,s,s[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&16)&&Fs(n,t,i,i[4],e?zs(t,i[4],r,null):Bs(i[4]),null)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}function JI(s){let e,t;return e=new ZI({props:{object:s[0],onChildMount:s[2],onChildDestroy:s[3],$$slots:{default:[KI]},$$scope:{ctx:s}}}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},p(n,[i]){const r={};i&1&&(r.object=n[0]),i&1&&(r.onChildMount=n[2]),i&1&&(r.onChildDestroy=n[3]),i&16&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}function $I(s,e,t){let{$$slots:n={},$$scope:i}=e,{object:r}=e;const o=u=>r.add(u),l=u=>r.remove(u);return s.$$set=u=>{"object"in u&&t(0,r=u.object),"$$scope"in u&&t(4,i=u.$$scope)},[r,n,o,l,i]}class QI extends Si{constructor(e){super(),bi(this,e,$I,JI,Ei,{object:0})}}const vy=(s,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)s=s[t[i]];return{target:s,key:n}}else return{target:s,key:e}},Ef=Symbol("initialValueBeforeAttach"),jI=()=>{const{invalidate:s}=yl();let e=!1,t=Ef,n,i,r;const o=(u,h,d)=>{if(l(),!d){const m=u;((m==null?void 0:m.isMaterial)||!1)&&(d="material"),((m==null?void 0:m.isBufferGeometry)||(m==null?void 0:m.isGeometry)||!1)&&(d="geometry")}if(d){if(typeof d=="function")n=d(h,u);else{const{target:m,key:p}=vy(h,d);t=m[p],m[p]=u,i=m,r=p}e=!0,s()}},l=()=>{e&&(n?(n(),n=void 0):i&&r&&t!==Ef&&(i[r]=t,t=Ef,i=void 0,r=void 0),e=!1,s())};return Mn(()=>{l()}),{update:o}},eU=s=>s&&s.isCamera,yy=s=>s&&s.isOrthographicCamera,xy=s=>s&&s.isPerspectiveCamera,tU=s=>xy(s)||yy(s),nU=()=>{const{invalidate:s,size:e,camera:t}=yl();let n,i;Mn(()=>{i==null||i()});const r=u=>{n&&(yy(n)?(n.left=u.width/-2,n.right=u.width/2,n.top=u.height/2,n.bottom=u.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()):xy(n)&&(n.aspect=u.width/u.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),s()))};return{update:(u,h)=>{if(i==null||i(),h||!tU(u)){n=void 0;return}n=u,i=e.subscribe(r)},makeDefaultCamera:(u,h)=>{!eU(u)||!h||(t.set(u),s())}}},My=()=>{const s=md(),e=(n,i)=>{const r=s.$$.callbacks[n];r&&r.forEach(o=>{o(i)})};return Object.defineProperty(e,"hasEventListener",{value:n=>!!s.$$.callbacks[n],enumerable:!0}),e},iU=()=>{const s=My(),e=[];let t,n=!1;const i=()=>{e.forEach(l=>l()),e.length=0,s("create",{ref:t,cleanup:l=>{e.push(l)}})},r=o=>{t=o,n&&i()};return gd(()=>{i(),n=!0}),Mn(()=>{e.forEach(o=>o())}),{updateRef:r}},n0=s=>!!(s!=null&&s.addEventListener),rU=()=>{const s=My(),e=md(),t=p=>{p!=null&&p.type&&s(p.type,p)},n=(p,g)=>{n0(p)&&g.forEach(v=>{p.removeEventListener(v,t)})},i=(p,g)=>{n0(p)&&g.forEach(v=>{p.addEventListener(v,t)})};let r=[],o;const l=Mi([]),u=l.subscribe(p=>{n(o,r),i(o,p),r=p});Mn(u);const h=Mi(),d=h.subscribe(p=>{n(o,r),i(p,r),o=p});return Mn(d),Mn(()=>{n(o,r)}),gd(()=>{l.set(Object.keys(e.$$.callbacks))}),{updateRef:p=>{h.set(p)}}},sU=s=>{const t=Ki("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(h=>h(s)).filter(Boolean),i=n.flatMap(h=>h.pluginProps??[]);let r=[];return Mn(()=>{r.forEach(h=>h())}),{updateRef:h=>{r.forEach(d=>d()),r=[],n.forEach(d=>{var p;const m=(p=d.onRefChange)==null?void 0:p.call(d,h);m&&r.push(m)})},updateProps:h=>{n.forEach(d=>{var m;(m=d.onPropsChange)==null||m.call(d,h)})},updateRestProps:h=>{n.forEach(d=>{var m;(m=d.onRestPropsChange)==null||m.call(d,h)})},pluginsProps:i}},aU=new Set(["$$scope","$$slots","type","args","attach","instance"]),oU=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),lU=s=>typeof s=="string"||typeof s=="number"||typeof s=="boolean"||typeof s>"u"||s===null,cU=()=>{const{invalidate:s}=yl(),e=new Map,t=(i,r,o,l)=>{var d,m;if(lU(o)){const p=e.get(r);if(p&&p.instance===i&&p.value===o)return;e.set(r,{instance:i,value:o})}const{key:u,target:h}=vy(i,r);if(!Array.isArray(o)&&typeof o=="number"&&typeof((d=h[u])==null?void 0:d.setScalar)=="function")h[u].setScalar(o);else if(typeof((m=h[u])==null?void 0:m.set)=="function")Array.isArray(o)?h[u].set(...o):h[u].set(o);else{if(h[u]=o,l.manualCamera)return;oU.has(u)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()}};return{updateProps:(i,r,o)=>{var l;for(const u in r)!aU.has(u)&&!((l=o.pluginsProps)!=null&&l.includes(u))&&t(i,u,r[u],o),s()}}},uU=s=>({ref:s&2}),i0=s=>({ref:s[1]}),hU=s=>({ref:s&2}),r0=s=>({ref:s[1]});function s0(s){let e,t;return e=new VI({props:{object:s[1],dispose:s[0]}}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&1&&(r.dispose=n[0]),e.$set(r)},i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}function fU(s){let e;const t=s[12].default,n=Os(t,s,s[13],i0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8194)&&Fs(n,t,i,i[13],e?zs(t,i[13],r,uU):Bs(i[13]),i0)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}function dU(s){let e,t;return e=new QI({props:{object:s[1],$$slots:{default:[pU]},$$scope:{ctx:s}}}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},p(n,i){const r={};i&2&&(r.object=n[1]),i&8194&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}function pU(s){let e;const t=s[12].default,n=Os(t,s,s[13],r0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&8194)&&Fs(n,t,i,i[13],e?zs(t,i[13],r,hU):Bs(i[13]),r0)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}function mU(s){let e=s[4](s[1]),t,n,i,r,o,l,u=e&&s0(s);const h=[dU,fU],d=[];function m(p,g){return g&2&&(n=null),n==null&&(n=!!p[3](p[1])),n?0:1}return i=m(s,-1),r=d[i]=h[i](s),{c(){u&&u.c(),t=Ro(),r.c(),o=ru()},l(p){u&&u.l(p),t=Co(p),r.l(p),o=ru()},m(p,g){u&&u.m(p,g),Sr(p,t,g),d[i].m(p,g),Sr(p,o,g),l=!0},p(p,[g]){g&2&&(e=p[4](p[1])),e?u?(u.p(p,g),g&2&&Ut(u,1)):(u=s0(p),u.c(),Ut(u,1),u.m(t.parentNode,t)):u&&(Rf(),Ot(u,1,1,()=>{u=null}),Tf());let v=i;i=m(p,g),i===v?d[i].p(p,g):(Rf(),Ot(d[v],1,1,()=>{d[v]=null}),Tf(),r=d[i],r?r.p(p,g):(r=d[i]=h[i](p),r.c()),Ut(r,1),r.m(o.parentNode,o))},i(p){l||(Ut(u),Ut(r),l=!0)},o(p){Ot(u),Ot(r),l=!1},d(p){u&&u.d(p),p&&Tt(t),d[i].d(p),p&&Tt(o)}}}function gU(s,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=su(e,n),r,{$$slots:o={},$$scope:l}=e,{is:u}=e,{args:h=void 0}=e,{attach:d=void 0}=e,{manual:m=void 0}=e,{makeDefault:p=void 0}=e,{dispose:g=void 0}=e;const v=Ki("threlte-hierarchical-parent-context");Fa(s,v,V=>t(11,r=V));const M=V=>typeof V=="function"&&/^\s*class\s+/.test(V.toString()),y=V=>Array.isArray(V),_=iU();let b=M(u)&&y(h)?new u(...h):M(u)?new u:u;_.updateRef(b);let S=!1;const w=()=>{if(!S){S=!0;return}t(1,b=M(u)&&y(h)?new u(...h):M(u)?new u:u),_.updateRef(b)};let{ref:T=b}=e;const L=Mi(b);Ui("threlte-hierarchical-parent-context",L);const O=sU({ref:b,props:e}),N=(O==null?void 0:O.pluginsProps)??[],A=cU(),I=nU(),K=jI(),ne=rU(),X=V=>!!V.isObject3D,G=V=>V.dispose!==void 0;return s.$$set=V=>{t(27,e=Oo(Oo({},e),Af(V))),t(26,i=su(e,n)),"is"in V&&t(6,u=V.is),"args"in V&&t(7,h=V.args),"attach"in V&&t(8,d=V.attach),"manual"in V&&t(9,m=V.manual),"makeDefault"in V&&t(10,p=V.makeDefault),"dispose"in V&&t(0,g=V.dispose),"ref"in V&&t(5,T=V.ref),"$$scope"in V&&t(13,l=V.$$scope)},s.$$.update=()=>{s.$$.dirty&192&&w(),s.$$.dirty&2&&t(5,T=b),s.$$.dirty&2&&L.set(b),A.updateProps(b,i,{manualCamera:m,pluginsProps:N}),s.$$.dirty&514&&I.update(b,m),s.$$.dirty&1026&&I.makeDefaultCamera(b,p),s.$$.dirty&2306&&K.update(b,r,d),s.$$.dirty&2&&ne.updateRef(b),s.$$.dirty&2&&(O==null||O.updateRef(b)),O==null||O.updateProps(e),O==null||O.updateRestProps(i)},e=Af(e),[g,b,v,X,G,T,u,h,d,m,p,r,o,l]}let cp=class extends Si{constructor(e){super(),bi(this,e,gU,mU,Ei,{is:6,args:7,attach:8,manual:9,makeDefault:10,dispose:0,ref:5})}};const Pu=typeof window<"u",_U=()=>{const s=Mi({width:0,height:0});let e={width:0,height:0};const t=s.subscribe(o=>e=o);Mn(t);let n;const i=()=>{const o=e;if(!n||!n.parentElement)return;const{clientWidth:l,clientHeight:u}=n.parentElement;(l!==o.width||u!==o.height)&&s.set({width:l,height:u})},r=o=>{n=o,i(),window.addEventListener("resize",i)};return Pu?(Mn(()=>{window.removeEventListener("resize",i)}),{parentSizeAction:r,parentSize:s}):{parentSize:s,parentSizeAction:r}},vU=()=>{Ui("threlte-cache",[])},Sy=s=>s.userData,yU=()=>{const s=new yn(75,0,.1,1e3);return Sy(s).threlteDefaultCamera=!0,s.position.z=5,s.lookAt(0,0,0),s},xU=s=>{up(s.size,e=>{Sy(b1(s.camera)).threlteDefaultCamera&&s.camera.update(t=>{const n=t;return n.aspect=e.width/e.height,n.updateProjectionMatrix(),s.invalidate("Default camera: aspect ratio changed"),n})})},up=(s,e)=>{const t=_d(s,r=>r);let n;const i=t.subscribe(async r=>{n&&n();const o=await e(r);o&&(n=o)});Mn(()=>{i(),n&&n()})},vr=s=>{const e=Mi(s),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:s};return t},MU=s=>{const e={debugFrameloop:s.debugFrameloop,frame:0,frameInvalidated:!0,invalidations:{},manualFrameHandlers:new Set,autoFrameHandlers:new Set,allFrameHandlers:new Set,renderHandlers:new Set,advance:!1,dispose:async(o=!1)=>{await E1(),!(!e.shouldDispose&&!o)&&(e.disposableObjects.forEach((l,u)=>{var h;(l===0||o)&&((h=u==null?void 0:u.dispose)==null||h.call(u),e.disposableObjects.delete(u))}),e.shouldDispose=!1)},collectDisposableObjects:(o,l)=>{const u=l??[];return o&&(o!=null&&o.dispose&&typeof o.dispose=="function"&&o.type!=="Scene"&&u.push(o),Object.entries(o).forEach(([h,d])=>{if(h==="parent"||h==="children"||typeof d!="object")return;const m=d;m!=null&&m.dispose&&e.collectDisposableObjects(m,u)})),u},addDisposableObjects:o=>{o.forEach(l=>{const u=e.disposableObjects.get(l);u?e.disposableObjects.set(l,u+1):e.disposableObjects.set(l,1)})},removeDisposableObjects:o=>{o.length!==0&&(o.forEach(l=>{const u=e.disposableObjects.get(l);u&&u>0&&e.disposableObjects.set(l,u-1)}),e.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1},t={size:_d([s.userSize,s.parentSize],([o,l])=>o||l),clock:new sp,camera:vr(yU()),scene:new Hd,renderer:void 0,invalidate:o=>{e.frameInvalidated=!0,e.debugFrameloop&&o&&(e.invalidations[o]=e.invalidations[o]?e.invalidations[o]+1:1)},advance:()=>{e.advance=!0},colorSpace:vr(s.colorSpace),toneMapping:vr(s.toneMapping),dpr:vr(s.dpr),useLegacyLights:vr(s.useLegacyLights),shadows:vr(s.shadows),colorManagementEnabled:vr(s.colorManagementEnabled),frameloop:vr(s.frameloop)},n=vr({});return Ui("threlte",t),Ui("threlte-internal-context",e),Ui("threlte-user-context",n),{ctx:t,internalCtx:e,getCtx:()=>t,getInternalCtx:()=>e}},SU=s=>{if(!Pu)return;let e;const t=()=>{s(),e=requestAnimationFrame(t)};t(),Mn(()=>{e&&cancelAnimationFrame(e)})},bU=(s,e,t)=>{if(e.allFrameHandlers.size===0)return;if(e.debugFrameloop){let i=0;e.autoFrameHandlers.forEach(r=>{r.debugFrameloopMessage?e.invalidations[r.debugFrameloopMessage]=r.debugFrameloopMessage in e.invalidations?e.invalidations[r.debugFrameloopMessage]+1:1:++i}),i>0&&(e.invalidations.useFrame=e.autoFrameHandlers.size)}Array.from(e.allFrameHandlers).reduce((i,r)=>r.order?!0:i,!1)?Array.from(e.allFrameHandlers).sort((i,r)=>(i.order??0)>(r.order??0)?1:-1).forEach(i=>i.fn(s,t)):e.allFrameHandlers.forEach(i=>i.fn(s,t))},EU=(s,e,t)=>{if(e.renderHandlers.size===0)return;Array.from(e.renderHandlers).reduce((i,r)=>r.order?!0:i,!1)?Array.from(e.renderHandlers).sort((i,r)=>(i.order??0)>(r.order??0)?1:-1).forEach(i=>i.fn(s,t)):e.renderHandlers.forEach(i=>i.fn(s,t))},wU=s=>{s.debugFrameloop&&(s.frame+=1,console.log(`frame: ${s.frame}${Object.keys(s.invalidations).length>0?", requested by ↴":""}`),Object.keys(s.invalidations).length>0&&console.table(s.invalidations),s.invalidations={})},TU=(s,e)=>s.frameloop.current==="always"||s.frameloop.current==="demand"&&(e.frameInvalidated||e.autoFrameHandlers.size>0)||s.frameloop.current==="never"&&e.advance,AU=(s,e)=>{SU(()=>{e.dispose();const t=s.clock.getDelta();bU(s,e,t),TU(s,e)&&(e.renderHandlers.size>0?EU(s,e,t):s.renderer&&s.camera.current&&s.renderer.render(s.scene,s.camera.current),wU(e),e.frameInvalidated=!1,e.advance=!1)})},RU={srgb:wr,"srgb-linear":Wo,"":Wo},CU=s=>s.outputColorSpace!==void 0,PU=s=>{const e=Mi(void 0),t=(n,i)=>{s.renderer=new zd({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0,...i}),e.set(s.renderer)};return up([e,s.size,s.toneMapping,s.colorSpace,s.dpr,s.shadows,s.colorManagementEnabled,s.useLegacyLights],([n,i,r,o,l,u,h,d])=>{if(!n)return;if(n.setSize(i.width,i.height),n.setPixelRatio(l),CU(n))n.outputColorSpace=o;else{const g=RU[o];g?n.outputEncoding=g:console.warn("No encoding found for colorSpace",o)}n.toneMapping=r,n.shadowMap.enabled=!!u,u&&u!==!0?n.shadowMap.type=u:u===!0&&(n.shadowMap.type=fu);const m=ri;m.enabled!==void 0?m.enabled=h:m.legacyMode!==void 0&&(m.legacyMode=!h);const p=n;d&&p.useLegacyLights!==void 0?p.useLegacyLights=d:p.physicallyCorrectLights!==void 0&&(p.physicallyCorrectLights=!d)}),Mn(()=>{var n;(n=s.renderer)==null||n.dispose()}),{createRenderer:t}};function a0(s){let e,t;return e=new cp({props:{is:s[3].ctx.scene,$$slots:{default:[LU]},$$scope:{ctx:s}}}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},p(n,i){const r={};i&131072&&(r.$$scope={dirty:i,ctx:n}),e.$set(r)},i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}function LU(s){let e;const t=s[15].default,n=Os(t,s,s[17],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&131072)&&Fs(n,t,i,i[17],e?zs(t,i[17],r,null):Bs(i[17]),null)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}function IU(s){let e,t,n,i,r=s[1]&&a0(s);return{c(){e=Xt("canvas"),r&&r.c(),this.h()},l(o){e=qt(o,"CANVAS",{class:!0});var l=f0(e);r&&r.l(l),l.forEach(Tt),this.h()},h(){qe(e,"class","svelte-15bl8wt")},m(o,l){Sr(o,e,l),r&&r.m(e,null),s[16](e),t=!0,n||(i=w1(s[2].call(null,e)),n=!0)},p(o,[l]){o[1]?r?(r.p(o,l),l&2&&Ut(r,1)):(r=a0(o),r.c(),Ut(r,1),r.m(e,null)):r&&(Rf(),Ot(r,1,1,()=>{r=null}),Tf())},i(o){t||(Ut(r),t=!0)},o(o){Ot(r),t=!1},d(o){o&&Tt(e),r&&r.d(),s[16](null),n=!1,i()}}}const o0=new Set;function UU(s,e,t){let{$$slots:n={},$$scope:i}=e,{dpr:r=Pu?window.devicePixelRatio:1}=e,{toneMapping:o=Md}=e,{colorSpace:l="srgb"}=e,{frameloop:u="demand"}=e,{debugFrameloop:h=!1}=e,{shadows:d=fu}=e,{size:m=void 0}=e,{rendererParameters:p=void 0}=e,{colorManagementEnabled:g=!0}=e,{useLegacyLights:v=!0}=e,M,y=!1;const _=Mi(m),{parentSize:b,parentSizeAction:S}=_U(),w=MU({colorSpace:l,toneMapping:o,dpr:r,userSize:_,parentSize:b,debugFrameloop:h,frameloop:u,shadows:d,colorManagementEnabled:g,useLegacyLights:v});vU();const T=w.ctx;xU(T),o0.add(T.invalidate),Mn(()=>{o0.delete(T.invalidate)});const{createRenderer:L}=PU(T);AU(w.ctx,w.internalCtx),gd(()=>{M&&(L(M,p),t(1,y=!0))}),Mn(()=>{w.internalCtx.dispose(!0)});function O(N){d0[N?"unshift":"push"](()=>{M=N,t(0,M)})}return s.$$set=N=>{"dpr"in N&&t(4,r=N.dpr),"toneMapping"in N&&t(5,o=N.toneMapping),"colorSpace"in N&&t(6,l=N.colorSpace),"frameloop"in N&&t(7,u=N.frameloop),"debugFrameloop"in N&&t(8,h=N.debugFrameloop),"shadows"in N&&t(9,d=N.shadows),"size"in N&&t(10,m=N.size),"rendererParameters"in N&&t(11,p=N.rendererParameters),"colorManagementEnabled"in N&&t(12,g=N.colorManagementEnabled),"useLegacyLights"in N&&t(13,v=N.useLegacyLights),"$$scope"in N&&t(17,i=N.$$scope)},s.$$.update=()=>{s.$$.dirty&1024&&_.set(m)},[M,y,S,w,r,o,l,u,h,d,m,p,g,v,T,n,O,i]}class DU extends Si{constructor(e){super(),bi(this,e,UU,IU,Ei,{dpr:4,toneMapping:5,colorSpace:6,frameloop:7,debugFrameloop:8,shadows:9,size:10,rendererParameters:11,colorManagementEnabled:12,useLegacyLights:13,ctx:14})}get ctx(){return this.$$.ctx[14]}}const NU={},OU=(s,e)=>{const t=NU[e]||zI[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...s,props:{...s.props,is:t}}},FU=s=>new Proxy(class{},{construct(e,[t]){const n=t;return new cp(OU(n,s))}}),iu=new Proxy(class{},{construct(s,[e]){const t=e;return new cp(t)},get(s,e){return FU(e)}}),BU=(s,e)=>{if(!Pu)return{start:()=>{},stop:()=>{},started:R1(!1)};const t=(e==null?void 0:e.invalidate)??!0,n=Ki("threlte-internal-context"),i={fn:s,order:e==null?void 0:e.order,debugFrameloopMessage:e==null?void 0:e.debugFrameloopMessage,invalidate:t},r=Mi(!1),o=()=>{t?n.autoFrameHandlers.delete(i):n.manualFrameHandlers.delete(i),n.allFrameHandlers.delete(i),r.set(!1)},l=()=>{t?n.autoFrameHandlers.add(i):n.manualFrameHandlers.add(i),n.allFrameHandlers.add(i),r.set(!0)};return((e==null?void 0:e.autostart)??!0)&&l(),Mn(()=>{o()}),{start:l,stop:o,started:{subscribe:r.subscribe}}};function zU(s,e,t){const n=Ki("threlte-user-context");if(!n)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return s?s&&!e?_d(n,i=>i[s]):(n.update(i=>{if(s in i){if(!t||t.existing==="skip")return i;if(t.existing==="merge")return Object.assign(i[s],e),i}return i[s]=e,i}),n.current[s]):{subscribe:n.subscribe}}const HU=()=>{const s=md(),e=Mi(void 0);return up(e,t=>{t&&Object.entries(s.$$.callbacks).forEach(n=>{const[i,r]=n;i in t.$$.callbacks&&Array.isArray(t.$$.callbacks[i])?t.$$.callbacks[i].push(...r):t.$$.callbacks[i]=r})}),e};new U;new U;new U;var uu={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */uu.exports;(function(s,e){(function(){var t,n="4.17.21",i=200,r="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",o="Expected a function",l="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",h=500,d="__lodash_placeholder__",m=1,p=2,g=4,v=1,M=2,y=1,_=2,b=4,S=8,w=16,T=32,L=64,O=128,N=256,A=512,I=30,K="...",ne=800,X=16,G=1,V=2,fe=3,ie=1/0,le=9007199254740991,me=17976931348623157e292,_e=0/0,we=4294967295,j=we-1,ve=we>>>1,Me=[["ary",O],["bind",y],["bindKey",_],["curry",S],["curryRight",w],["flip",A],["partial",T],["partialRight",L],["rearg",N]],Re="[object Arguments]",Ie="[object Array]",Ge="[object AsyncFunction]",et="[object Boolean]",Ze="[object Date]",At="[object DOMException]",Je="[object Error]",H="[object Function]",Ee="[object GeneratorFunction]",re="[object Map]",Se="[object Number]",de="[object Null]",De="[object Object]",Ue="[object Promise]",Ne="[object Proxy]",Ke="[object RegExp]",it="[object Set]",Lt="[object String]",F="[object Symbol]",P="[object Undefined]",te="[object WeakMap]",be="[object WeakSet]",ye="[object ArrayBuffer]",z="[object DataView]",pe="[object Float32Array]",xe="[object Float64Array]",$="[object Int8Array]",ze="[object Int16Array]",Ye="[object Int32Array]",Ve="[object Uint8Array]",He="[object Uint8ClampedArray]",Fe="[object Uint16Array]",Qe="[object Uint32Array]",xt=/\b__p \+= '';/g,W=/\b(__p \+=) '' \+/g,Ce=/(__e\(.*?\)|\b__t\)) \+\n'';/g,ee=/&(?:amp|lt|gt|quot|#39);/g,Te=/[&<>"']/g,Le=RegExp(ee.source),wt=RegExp(Te.source),Gt=/<%-([\s\S]+?)%>/g,$t=/<%([\s\S]+?)%>/g,zi=/<%=([\s\S]+?)%>/g,Vt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,ci=/^\w*$/,Sn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Vs=/[\\^$.*+?()[\]{}|]/g,xl=RegExp(Vs.source),Ja=/^\s+/,Ws=/\s/,Ml=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Xs=/\{\n\/\* \[wrapped with (.+)\] \*/,Sl=/,? & /,Lu=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Iu=/[()=,{}\[\]\/\s]/,Uu=/\\(\\)?/g,D=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,J=/\w*$/,se=/^[-+]0x[0-9a-f]+$/i,Z=/^0b[01]+$/i,oe=/^\[object .+?Constructor\]$/,ke=/^0o[0-7]+$/i,$e=/^(?:0|[1-9]\d*)$/,st=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,rt=/($^)/,_t=/['\n\r\u2028\u2029\\]/g,at="\\ud800-\\udfff",ut="\\u0300-\\u036f",Ft="\\ufe20-\\ufe2f",Yt="\\u20d0-\\u20ff",Vn=ut+Ft+Yt,ui="\\u2700-\\u27bf",Zt="a-z\\xdf-\\xf6\\xf8-\\xff",St="\\xac\\xb1\\xd7\\xf7",$a="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",cn="\\u2000-\\u206f",er=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Qa="A-Z\\xc0-\\xd6\\xd8-\\xde",Cr="\\ufe0e\\ufe0f",qs=St+$a+cn+er,hn="['’]",tr="["+at+"]",Ys="["+qs+"]",gn="["+Vn+"]",Zs="\\d+",Du="["+ui+"]",ja="["+Zt+"]",hp="[^"+at+qs+Zs+ui+Zt+Qa+"]",Nu="\\ud83c[\\udffb-\\udfff]",by="(?:"+gn+"|"+Nu+")",fp="[^"+at+"]",Ou="(?:\\ud83c[\\udde6-\\uddff]){2}",Fu="[\\ud800-\\udbff][\\udc00-\\udfff]",Ks="["+Qa+"]",dp="\\u200d",pp="(?:"+ja+"|"+hp+")",Ey="(?:"+Ks+"|"+hp+")",mp="(?:"+hn+"(?:d|ll|m|re|s|t|ve))?",gp="(?:"+hn+"(?:D|LL|M|RE|S|T|VE))?",_p=by+"?",vp="["+Cr+"]?",wy="(?:"+dp+"(?:"+[fp,Ou,Fu].join("|")+")"+vp+_p+")*",Ty="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Ay="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",yp=vp+_p+wy,Ry="(?:"+[Du,Ou,Fu].join("|")+")"+yp,Cy="(?:"+[fp+gn+"?",gn,Ou,Fu,tr].join("|")+")",Py=RegExp(hn,"g"),Ly=RegExp(gn,"g"),Bu=RegExp(Nu+"(?="+Nu+")|"+Cy+yp,"g"),Iy=RegExp([Ks+"?"+ja+"+"+mp+"(?="+[Ys,Ks,"$"].join("|")+")",Ey+"+"+gp+"(?="+[Ys,Ks+pp,"$"].join("|")+")",Ks+"?"+pp+"+"+mp,Ks+"+"+gp,Ay,Ty,Zs,Ry].join("|"),"g"),Uy=RegExp("["+dp+at+Vn+Cr+"]"),Dy=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,Ny=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Oy=-1,kt={};kt[pe]=kt[xe]=kt[$]=kt[ze]=kt[Ye]=kt[Ve]=kt[He]=kt[Fe]=kt[Qe]=!0,kt[Re]=kt[Ie]=kt[ye]=kt[et]=kt[z]=kt[Ze]=kt[Je]=kt[H]=kt[re]=kt[Se]=kt[De]=kt[Ke]=kt[it]=kt[Lt]=kt[te]=!1;var Ht={};Ht[Re]=Ht[Ie]=Ht[ye]=Ht[z]=Ht[et]=Ht[Ze]=Ht[pe]=Ht[xe]=Ht[$]=Ht[ze]=Ht[Ye]=Ht[re]=Ht[Se]=Ht[De]=Ht[Ke]=Ht[it]=Ht[Lt]=Ht[F]=Ht[Ve]=Ht[He]=Ht[Fe]=Ht[Qe]=!0,Ht[Je]=Ht[H]=Ht[te]=!1;var Fy={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"},By={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},zy={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Hy={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},ky=parseFloat,Gy=parseInt,xp=typeof yr=="object"&&yr&&yr.Object===Object&&yr,Vy=typeof self=="object"&&self&&self.Object===Object&&self,bn=xp||Vy||Function("return this")(),zu=e&&!e.nodeType&&e,ns=zu&&!0&&s&&!s.nodeType&&s,Mp=ns&&ns.exports===zu,Hu=Mp&&xp.process,hi=function(){try{var q=ns&&ns.require&&ns.require("util").types;return q||Hu&&Hu.binding&&Hu.binding("util")}catch{}}(),Sp=hi&&hi.isArrayBuffer,bp=hi&&hi.isDate,Ep=hi&&hi.isMap,wp=hi&&hi.isRegExp,Tp=hi&&hi.isSet,Ap=hi&&hi.isTypedArray;function Jn(q,ae,Q){switch(Q.length){case 0:return q.call(ae);case 1:return q.call(ae,Q[0]);case 2:return q.call(ae,Q[0],Q[1]);case 3:return q.call(ae,Q[0],Q[1],Q[2])}return q.apply(ae,Q)}function Wy(q,ae,Q,Be){for(var lt=-1,Pt=q==null?0:q.length;++lt<Pt;){var fn=q[lt];ae(Be,fn,Q(fn),q)}return Be}function fi(q,ae){for(var Q=-1,Be=q==null?0:q.length;++Q<Be&&ae(q[Q],Q,q)!==!1;);return q}function Xy(q,ae){for(var Q=q==null?0:q.length;Q--&&ae(q[Q],Q,q)!==!1;);return q}function Rp(q,ae){for(var Q=-1,Be=q==null?0:q.length;++Q<Be;)if(!ae(q[Q],Q,q))return!1;return!0}function Pr(q,ae){for(var Q=-1,Be=q==null?0:q.length,lt=0,Pt=[];++Q<Be;){var fn=q[Q];ae(fn,Q,q)&&(Pt[lt++]=fn)}return Pt}function bl(q,ae){var Q=q==null?0:q.length;return!!Q&&Js(q,ae,0)>-1}function ku(q,ae,Q){for(var Be=-1,lt=q==null?0:q.length;++Be<lt;)if(Q(ae,q[Be]))return!0;return!1}function Wt(q,ae){for(var Q=-1,Be=q==null?0:q.length,lt=Array(Be);++Q<Be;)lt[Q]=ae(q[Q],Q,q);return lt}function Lr(q,ae){for(var Q=-1,Be=ae.length,lt=q.length;++Q<Be;)q[lt+Q]=ae[Q];return q}function Gu(q,ae,Q,Be){var lt=-1,Pt=q==null?0:q.length;for(Be&&Pt&&(Q=q[++lt]);++lt<Pt;)Q=ae(Q,q[lt],lt,q);return Q}function qy(q,ae,Q,Be){var lt=q==null?0:q.length;for(Be&&lt&&(Q=q[--lt]);lt--;)Q=ae(Q,q[lt],lt,q);return Q}function Vu(q,ae){for(var Q=-1,Be=q==null?0:q.length;++Q<Be;)if(ae(q[Q],Q,q))return!0;return!1}var Yy=Wu("length");function Zy(q){return q.split("")}function Ky(q){return q.match(Lu)||[]}function Cp(q,ae,Q){var Be;return Q(q,function(lt,Pt,fn){if(ae(lt,Pt,fn))return Be=Pt,!1}),Be}function El(q,ae,Q,Be){for(var lt=q.length,Pt=Q+(Be?1:-1);Be?Pt--:++Pt<lt;)if(ae(q[Pt],Pt,q))return Pt;return-1}function Js(q,ae,Q){return ae===ae?ox(q,ae,Q):El(q,Pp,Q)}function Jy(q,ae,Q,Be){for(var lt=Q-1,Pt=q.length;++lt<Pt;)if(Be(q[lt],ae))return lt;return-1}function Pp(q){return q!==q}function Lp(q,ae){var Q=q==null?0:q.length;return Q?qu(q,ae)/Q:_e}function Wu(q){return function(ae){return ae==null?t:ae[q]}}function Xu(q){return function(ae){return q==null?t:q[ae]}}function Ip(q,ae,Q,Be,lt){return lt(q,function(Pt,fn,Bt){Q=Be?(Be=!1,Pt):ae(Q,Pt,fn,Bt)}),Q}function $y(q,ae){var Q=q.length;for(q.sort(ae);Q--;)q[Q]=q[Q].value;return q}function qu(q,ae){for(var Q,Be=-1,lt=q.length;++Be<lt;){var Pt=ae(q[Be]);Pt!==t&&(Q=Q===t?Pt:Q+Pt)}return Q}function Yu(q,ae){for(var Q=-1,Be=Array(q);++Q<q;)Be[Q]=ae(Q);return Be}function Qy(q,ae){return Wt(ae,function(Q){return[Q,q[Q]]})}function Up(q){return q&&q.slice(0,Fp(q)+1).replace(Ja,"")}function $n(q){return function(ae){return q(ae)}}function Zu(q,ae){return Wt(ae,function(Q){return q[Q]})}function eo(q,ae){return q.has(ae)}function Dp(q,ae){for(var Q=-1,Be=q.length;++Q<Be&&Js(ae,q[Q],0)>-1;);return Q}function Np(q,ae){for(var Q=q.length;Q--&&Js(ae,q[Q],0)>-1;);return Q}function jy(q,ae){for(var Q=q.length,Be=0;Q--;)q[Q]===ae&&++Be;return Be}var ex=Xu(Fy),tx=Xu(By);function nx(q){return"\\"+Hy[q]}function ix(q,ae){return q==null?t:q[ae]}function $s(q){return Uy.test(q)}function rx(q){return Dy.test(q)}function sx(q){for(var ae,Q=[];!(ae=q.next()).done;)Q.push(ae.value);return Q}function Ku(q){var ae=-1,Q=Array(q.size);return q.forEach(function(Be,lt){Q[++ae]=[lt,Be]}),Q}function Op(q,ae){return function(Q){return q(ae(Q))}}function Ir(q,ae){for(var Q=-1,Be=q.length,lt=0,Pt=[];++Q<Be;){var fn=q[Q];(fn===ae||fn===d)&&(q[Q]=d,Pt[lt++]=Q)}return Pt}function wl(q){var ae=-1,Q=Array(q.size);return q.forEach(function(Be){Q[++ae]=Be}),Q}function ax(q){var ae=-1,Q=Array(q.size);return q.forEach(function(Be){Q[++ae]=[Be,Be]}),Q}function ox(q,ae,Q){for(var Be=Q-1,lt=q.length;++Be<lt;)if(q[Be]===ae)return Be;return-1}function lx(q,ae,Q){for(var Be=Q+1;Be--;)if(q[Be]===ae)return Be;return Be}function Qs(q){return $s(q)?ux(q):Yy(q)}function wi(q){return $s(q)?hx(q):Zy(q)}function Fp(q){for(var ae=q.length;ae--&&Ws.test(q.charAt(ae)););return ae}var cx=Xu(zy);function ux(q){for(var ae=Bu.lastIndex=0;Bu.test(q);)++ae;return ae}function hx(q){return q.match(Bu)||[]}function fx(q){return q.match(Iy)||[]}var dx=function q(ae){ae=ae==null?bn:js.defaults(bn.Object(),ae,js.pick(bn,Ny));var Q=ae.Array,Be=ae.Date,lt=ae.Error,Pt=ae.Function,fn=ae.Math,Bt=ae.Object,Ju=ae.RegExp,px=ae.String,di=ae.TypeError,Tl=Q.prototype,mx=Pt.prototype,ea=Bt.prototype,Al=ae["__core-js_shared__"],Rl=mx.toString,Dt=ea.hasOwnProperty,gx=0,Bp=function(){var a=/[^.]+$/.exec(Al&&Al.keys&&Al.keys.IE_PROTO||"");return a?"Symbol(src)_1."+a:""}(),Cl=ea.toString,_x=Rl.call(Bt),vx=bn._,yx=Ju("^"+Rl.call(Dt).replace(Vs,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Pl=Mp?ae.Buffer:t,Ur=ae.Symbol,Ll=ae.Uint8Array,zp=Pl?Pl.allocUnsafe:t,Il=Op(Bt.getPrototypeOf,Bt),Hp=Bt.create,kp=ea.propertyIsEnumerable,Ul=Tl.splice,Gp=Ur?Ur.isConcatSpreadable:t,to=Ur?Ur.iterator:t,is=Ur?Ur.toStringTag:t,Dl=function(){try{var a=ls(Bt,"defineProperty");return a({},"",{}),a}catch{}}(),xx=ae.clearTimeout!==bn.clearTimeout&&ae.clearTimeout,Mx=Be&&Be.now!==bn.Date.now&&Be.now,Sx=ae.setTimeout!==bn.setTimeout&&ae.setTimeout,Nl=fn.ceil,Ol=fn.floor,$u=Bt.getOwnPropertySymbols,bx=Pl?Pl.isBuffer:t,Vp=ae.isFinite,Ex=Tl.join,wx=Op(Bt.keys,Bt),dn=fn.max,wn=fn.min,Tx=Be.now,Ax=ae.parseInt,Wp=fn.random,Rx=Tl.reverse,Qu=ls(ae,"DataView"),no=ls(ae,"Map"),ju=ls(ae,"Promise"),ta=ls(ae,"Set"),io=ls(ae,"WeakMap"),ro=ls(Bt,"create"),Fl=io&&new io,na={},Cx=cs(Qu),Px=cs(no),Lx=cs(ju),Ix=cs(ta),Ux=cs(io),Bl=Ur?Ur.prototype:t,so=Bl?Bl.valueOf:t,Xp=Bl?Bl.toString:t;function R(a){if(Qt(a)&&!ct(a)&&!(a instanceof bt)){if(a instanceof pi)return a;if(Dt.call(a,"__wrapped__"))return qm(a)}return new pi(a)}var ia=function(){function a(){}return function(c){if(!Kt(c))return{};if(Hp)return Hp(c);a.prototype=c;var f=new a;return a.prototype=t,f}}();function zl(){}function pi(a,c){this.__wrapped__=a,this.__actions__=[],this.__chain__=!!c,this.__index__=0,this.__values__=t}R.templateSettings={escape:Gt,evaluate:$t,interpolate:zi,variable:"",imports:{_:R}},R.prototype=zl.prototype,R.prototype.constructor=R,pi.prototype=ia(zl.prototype),pi.prototype.constructor=pi;function bt(a){this.__wrapped__=a,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=we,this.__views__=[]}function Dx(){var a=new bt(this.__wrapped__);return a.__actions__=Wn(this.__actions__),a.__dir__=this.__dir__,a.__filtered__=this.__filtered__,a.__iteratees__=Wn(this.__iteratees__),a.__takeCount__=this.__takeCount__,a.__views__=Wn(this.__views__),a}function Nx(){if(this.__filtered__){var a=new bt(this);a.__dir__=-1,a.__filtered__=!0}else a=this.clone(),a.__dir__*=-1;return a}function Ox(){var a=this.__wrapped__.value(),c=this.__dir__,f=ct(a),x=c<0,E=f?a.length:0,C=ZM(0,E,this.__views__),B=C.start,k=C.end,Y=k-B,ue=x?k:B-1,he=this.__iteratees__,ge=he.length,Pe=0,Xe=wn(Y,this.__takeCount__);if(!f||!x&&E==Y&&Xe==Y)return mm(a,this.__actions__);var tt=[];e:for(;Y--&&Pe<Xe;){ue+=c;for(var dt=-1,nt=a[ue];++dt<ge;){var Mt=he[dt],Et=Mt.iteratee,ei=Mt.type,Dn=Et(nt);if(ei==V)nt=Dn;else if(!Dn){if(ei==G)continue e;break e}}tt[Pe++]=nt}return tt}bt.prototype=ia(zl.prototype),bt.prototype.constructor=bt;function rs(a){var c=-1,f=a==null?0:a.length;for(this.clear();++c<f;){var x=a[c];this.set(x[0],x[1])}}function Fx(){this.__data__=ro?ro(null):{},this.size=0}function Bx(a){var c=this.has(a)&&delete this.__data__[a];return this.size-=c?1:0,c}function zx(a){var c=this.__data__;if(ro){var f=c[a];return f===u?t:f}return Dt.call(c,a)?c[a]:t}function Hx(a){var c=this.__data__;return ro?c[a]!==t:Dt.call(c,a)}function kx(a,c){var f=this.__data__;return this.size+=this.has(a)?0:1,f[a]=ro&&c===t?u:c,this}rs.prototype.clear=Fx,rs.prototype.delete=Bx,rs.prototype.get=zx,rs.prototype.has=Hx,rs.prototype.set=kx;function nr(a){var c=-1,f=a==null?0:a.length;for(this.clear();++c<f;){var x=a[c];this.set(x[0],x[1])}}function Gx(){this.__data__=[],this.size=0}function Vx(a){var c=this.__data__,f=Hl(c,a);if(f<0)return!1;var x=c.length-1;return f==x?c.pop():Ul.call(c,f,1),--this.size,!0}function Wx(a){var c=this.__data__,f=Hl(c,a);return f<0?t:c[f][1]}function Xx(a){return Hl(this.__data__,a)>-1}function qx(a,c){var f=this.__data__,x=Hl(f,a);return x<0?(++this.size,f.push([a,c])):f[x][1]=c,this}nr.prototype.clear=Gx,nr.prototype.delete=Vx,nr.prototype.get=Wx,nr.prototype.has=Xx,nr.prototype.set=qx;function ir(a){var c=-1,f=a==null?0:a.length;for(this.clear();++c<f;){var x=a[c];this.set(x[0],x[1])}}function Yx(){this.size=0,this.__data__={hash:new rs,map:new(no||nr),string:new rs}}function Zx(a){var c=Ql(this,a).delete(a);return this.size-=c?1:0,c}function Kx(a){return Ql(this,a).get(a)}function Jx(a){return Ql(this,a).has(a)}function $x(a,c){var f=Ql(this,a),x=f.size;return f.set(a,c),this.size+=f.size==x?0:1,this}ir.prototype.clear=Yx,ir.prototype.delete=Zx,ir.prototype.get=Kx,ir.prototype.has=Jx,ir.prototype.set=$x;function ss(a){var c=-1,f=a==null?0:a.length;for(this.__data__=new ir;++c<f;)this.add(a[c])}function Qx(a){return this.__data__.set(a,u),this}function jx(a){return this.__data__.has(a)}ss.prototype.add=ss.prototype.push=Qx,ss.prototype.has=jx;function Ti(a){var c=this.__data__=new nr(a);this.size=c.size}function eM(){this.__data__=new nr,this.size=0}function tM(a){var c=this.__data__,f=c.delete(a);return this.size=c.size,f}function nM(a){return this.__data__.get(a)}function iM(a){return this.__data__.has(a)}function rM(a,c){var f=this.__data__;if(f instanceof nr){var x=f.__data__;if(!no||x.length<i-1)return x.push([a,c]),this.size=++f.size,this;f=this.__data__=new ir(x)}return f.set(a,c),this.size=f.size,this}Ti.prototype.clear=eM,Ti.prototype.delete=tM,Ti.prototype.get=nM,Ti.prototype.has=iM,Ti.prototype.set=rM;function qp(a,c){var f=ct(a),x=!f&&us(a),E=!f&&!x&&Br(a),C=!f&&!x&&!E&&oa(a),B=f||x||E||C,k=B?Yu(a.length,px):[],Y=k.length;for(var ue in a)(c||Dt.call(a,ue))&&!(B&&(ue=="length"||E&&(ue=="offset"||ue=="parent")||C&&(ue=="buffer"||ue=="byteLength"||ue=="byteOffset")||or(ue,Y)))&&k.push(ue);return k}function Yp(a){var c=a.length;return c?a[uh(0,c-1)]:t}function sM(a,c){return jl(Wn(a),as(c,0,a.length))}function aM(a){return jl(Wn(a))}function eh(a,c,f){(f!==t&&!Ai(a[c],f)||f===t&&!(c in a))&&rr(a,c,f)}function ao(a,c,f){var x=a[c];(!(Dt.call(a,c)&&Ai(x,f))||f===t&&!(c in a))&&rr(a,c,f)}function Hl(a,c){for(var f=a.length;f--;)if(Ai(a[f][0],c))return f;return-1}function oM(a,c,f,x){return Dr(a,function(E,C,B){c(x,E,f(E),B)}),x}function Zp(a,c){return a&&ki(c,_n(c),a)}function lM(a,c){return a&&ki(c,qn(c),a)}function rr(a,c,f){c=="__proto__"&&Dl?Dl(a,c,{configurable:!0,enumerable:!0,value:f,writable:!0}):a[c]=f}function th(a,c){for(var f=-1,x=c.length,E=Q(x),C=a==null;++f<x;)E[f]=C?t:Nh(a,c[f]);return E}function as(a,c,f){return a===a&&(f!==t&&(a=a<=f?a:f),c!==t&&(a=a>=c?a:c)),a}function mi(a,c,f,x,E,C){var B,k=c&m,Y=c&p,ue=c&g;if(f&&(B=E?f(a,x,E,C):f(a)),B!==t)return B;if(!Kt(a))return a;var he=ct(a);if(he){if(B=JM(a),!k)return Wn(a,B)}else{var ge=Tn(a),Pe=ge==H||ge==Ee;if(Br(a))return vm(a,k);if(ge==De||ge==Re||Pe&&!E){if(B=Y||Pe?{}:Fm(a),!k)return Y?zM(a,lM(B,a)):BM(a,Zp(B,a))}else{if(!Ht[ge])return E?a:{};B=$M(a,ge,k)}}C||(C=new Ti);var Xe=C.get(a);if(Xe)return Xe;C.set(a,B),fg(a)?a.forEach(function(nt){B.add(mi(nt,c,f,nt,a,C))}):ug(a)&&a.forEach(function(nt,Mt){B.set(Mt,mi(nt,c,f,Mt,a,C))});var tt=ue?Y?Mh:xh:Y?qn:_n,dt=he?t:tt(a);return fi(dt||a,function(nt,Mt){dt&&(Mt=nt,nt=a[Mt]),ao(B,Mt,mi(nt,c,f,Mt,a,C))}),B}function cM(a){var c=_n(a);return function(f){return Kp(f,a,c)}}function Kp(a,c,f){var x=f.length;if(a==null)return!x;for(a=Bt(a);x--;){var E=f[x],C=c[E],B=a[E];if(B===t&&!(E in a)||!C(B))return!1}return!0}function Jp(a,c,f){if(typeof a!="function")throw new di(o);return po(function(){a.apply(t,f)},c)}function oo(a,c,f,x){var E=-1,C=bl,B=!0,k=a.length,Y=[],ue=c.length;if(!k)return Y;f&&(c=Wt(c,$n(f))),x?(C=ku,B=!1):c.length>=i&&(C=eo,B=!1,c=new ss(c));e:for(;++E<k;){var he=a[E],ge=f==null?he:f(he);if(he=x||he!==0?he:0,B&&ge===ge){for(var Pe=ue;Pe--;)if(c[Pe]===ge)continue e;Y.push(he)}else C(c,ge,x)||Y.push(he)}return Y}var Dr=bm(Hi),$p=bm(ih,!0);function uM(a,c){var f=!0;return Dr(a,function(x,E,C){return f=!!c(x,E,C),f}),f}function kl(a,c,f){for(var x=-1,E=a.length;++x<E;){var C=a[x],B=c(C);if(B!=null&&(k===t?B===B&&!jn(B):f(B,k)))var k=B,Y=C}return Y}function hM(a,c,f,x){var E=a.length;for(f=ft(f),f<0&&(f=-f>E?0:E+f),x=x===t||x>E?E:ft(x),x<0&&(x+=E),x=f>x?0:pg(x);f<x;)a[f++]=c;return a}function Qp(a,c){var f=[];return Dr(a,function(x,E,C){c(x,E,C)&&f.push(x)}),f}function En(a,c,f,x,E){var C=-1,B=a.length;for(f||(f=jM),E||(E=[]);++C<B;){var k=a[C];c>0&&f(k)?c>1?En(k,c-1,f,x,E):Lr(E,k):x||(E[E.length]=k)}return E}var nh=Em(),jp=Em(!0);function Hi(a,c){return a&&nh(a,c,_n)}function ih(a,c){return a&&jp(a,c,_n)}function Gl(a,c){return Pr(c,function(f){return lr(a[f])})}function os(a,c){c=Or(c,a);for(var f=0,x=c.length;a!=null&&f<x;)a=a[Gi(c[f++])];return f&&f==x?a:t}function em(a,c,f){var x=c(a);return ct(a)?x:Lr(x,f(a))}function In(a){return a==null?a===t?P:de:is&&is in Bt(a)?YM(a):aS(a)}function rh(a,c){return a>c}function fM(a,c){return a!=null&&Dt.call(a,c)}function dM(a,c){return a!=null&&c in Bt(a)}function pM(a,c,f){return a>=wn(c,f)&&a<dn(c,f)}function sh(a,c,f){for(var x=f?ku:bl,E=a[0].length,C=a.length,B=C,k=Q(C),Y=1/0,ue=[];B--;){var he=a[B];B&&c&&(he=Wt(he,$n(c))),Y=wn(he.length,Y),k[B]=!f&&(c||E>=120&&he.length>=120)?new ss(B&&he):t}he=a[0];var ge=-1,Pe=k[0];e:for(;++ge<E&&ue.length<Y;){var Xe=he[ge],tt=c?c(Xe):Xe;if(Xe=f||Xe!==0?Xe:0,!(Pe?eo(Pe,tt):x(ue,tt,f))){for(B=C;--B;){var dt=k[B];if(!(dt?eo(dt,tt):x(a[B],tt,f)))continue e}Pe&&Pe.push(tt),ue.push(Xe)}}return ue}function mM(a,c,f,x){return Hi(a,function(E,C,B){c(x,f(E),C,B)}),x}function lo(a,c,f){c=Or(c,a),a=km(a,c);var x=a==null?a:a[Gi(_i(c))];return x==null?t:Jn(x,a,f)}function tm(a){return Qt(a)&&In(a)==Re}function gM(a){return Qt(a)&&In(a)==ye}function _M(a){return Qt(a)&&In(a)==Ze}function co(a,c,f,x,E){return a===c?!0:a==null||c==null||!Qt(a)&&!Qt(c)?a!==a&&c!==c:vM(a,c,f,x,co,E)}function vM(a,c,f,x,E,C){var B=ct(a),k=ct(c),Y=B?Ie:Tn(a),ue=k?Ie:Tn(c);Y=Y==Re?De:Y,ue=ue==Re?De:ue;var he=Y==De,ge=ue==De,Pe=Y==ue;if(Pe&&Br(a)){if(!Br(c))return!1;B=!0,he=!1}if(Pe&&!he)return C||(C=new Ti),B||oa(a)?Dm(a,c,f,x,E,C):XM(a,c,Y,f,x,E,C);if(!(f&v)){var Xe=he&&Dt.call(a,"__wrapped__"),tt=ge&&Dt.call(c,"__wrapped__");if(Xe||tt){var dt=Xe?a.value():a,nt=tt?c.value():c;return C||(C=new Ti),E(dt,nt,f,x,C)}}return Pe?(C||(C=new Ti),qM(a,c,f,x,E,C)):!1}function yM(a){return Qt(a)&&Tn(a)==re}function ah(a,c,f,x){var E=f.length,C=E,B=!x;if(a==null)return!C;for(a=Bt(a);E--;){var k=f[E];if(B&&k[2]?k[1]!==a[k[0]]:!(k[0]in a))return!1}for(;++E<C;){k=f[E];var Y=k[0],ue=a[Y],he=k[1];if(B&&k[2]){if(ue===t&&!(Y in a))return!1}else{var ge=new Ti;if(x)var Pe=x(ue,he,Y,a,c,ge);if(!(Pe===t?co(he,ue,v|M,x,ge):Pe))return!1}}return!0}function nm(a){if(!Kt(a)||tS(a))return!1;var c=lr(a)?yx:oe;return c.test(cs(a))}function xM(a){return Qt(a)&&In(a)==Ke}function MM(a){return Qt(a)&&Tn(a)==it}function SM(a){return Qt(a)&&sc(a.length)&&!!kt[In(a)]}function im(a){return typeof a=="function"?a:a==null?Yn:typeof a=="object"?ct(a)?am(a[0],a[1]):sm(a):wg(a)}function oh(a){if(!fo(a))return wx(a);var c=[];for(var f in Bt(a))Dt.call(a,f)&&f!="constructor"&&c.push(f);return c}function bM(a){if(!Kt(a))return sS(a);var c=fo(a),f=[];for(var x in a)x=="constructor"&&(c||!Dt.call(a,x))||f.push(x);return f}function lh(a,c){return a<c}function rm(a,c){var f=-1,x=Xn(a)?Q(a.length):[];return Dr(a,function(E,C,B){x[++f]=c(E,C,B)}),x}function sm(a){var c=bh(a);return c.length==1&&c[0][2]?zm(c[0][0],c[0][1]):function(f){return f===a||ah(f,a,c)}}function am(a,c){return wh(a)&&Bm(c)?zm(Gi(a),c):function(f){var x=Nh(f,a);return x===t&&x===c?Oh(f,a):co(c,x,v|M)}}function Vl(a,c,f,x,E){a!==c&&nh(c,function(C,B){if(E||(E=new Ti),Kt(C))EM(a,c,B,f,Vl,x,E);else{var k=x?x(Ah(a,B),C,B+"",a,c,E):t;k===t&&(k=C),eh(a,B,k)}},qn)}function EM(a,c,f,x,E,C,B){var k=Ah(a,f),Y=Ah(c,f),ue=B.get(Y);if(ue){eh(a,f,ue);return}var he=C?C(k,Y,f+"",a,c,B):t,ge=he===t;if(ge){var Pe=ct(Y),Xe=!Pe&&Br(Y),tt=!Pe&&!Xe&&oa(Y);he=Y,Pe||Xe||tt?ct(k)?he=k:nn(k)?he=Wn(k):Xe?(ge=!1,he=vm(Y,!0)):tt?(ge=!1,he=ym(Y,!0)):he=[]:mo(Y)||us(Y)?(he=k,us(k)?he=mg(k):(!Kt(k)||lr(k))&&(he=Fm(Y))):ge=!1}ge&&(B.set(Y,he),E(he,Y,x,C,B),B.delete(Y)),eh(a,f,he)}function om(a,c){var f=a.length;if(f)return c+=c<0?f:0,or(c,f)?a[c]:t}function lm(a,c,f){c.length?c=Wt(c,function(C){return ct(C)?function(B){return os(B,C.length===1?C[0]:C)}:C}):c=[Yn];var x=-1;c=Wt(c,$n(je()));var E=rm(a,function(C,B,k){var Y=Wt(c,function(ue){return ue(C)});return{criteria:Y,index:++x,value:C}});return $y(E,function(C,B){return FM(C,B,f)})}function wM(a,c){return cm(a,c,function(f,x){return Oh(a,x)})}function cm(a,c,f){for(var x=-1,E=c.length,C={};++x<E;){var B=c[x],k=os(a,B);f(k,B)&&uo(C,Or(B,a),k)}return C}function TM(a){return function(c){return os(c,a)}}function ch(a,c,f,x){var E=x?Jy:Js,C=-1,B=c.length,k=a;for(a===c&&(c=Wn(c)),f&&(k=Wt(a,$n(f)));++C<B;)for(var Y=0,ue=c[C],he=f?f(ue):ue;(Y=E(k,he,Y,x))>-1;)k!==a&&Ul.call(k,Y,1),Ul.call(a,Y,1);return a}function um(a,c){for(var f=a?c.length:0,x=f-1;f--;){var E=c[f];if(f==x||E!==C){var C=E;or(E)?Ul.call(a,E,1):dh(a,E)}}return a}function uh(a,c){return a+Ol(Wp()*(c-a+1))}function AM(a,c,f,x){for(var E=-1,C=dn(Nl((c-a)/(f||1)),0),B=Q(C);C--;)B[x?C:++E]=a,a+=f;return B}function hh(a,c){var f="";if(!a||c<1||c>le)return f;do c%2&&(f+=a),c=Ol(c/2),c&&(a+=a);while(c);return f}function vt(a,c){return Rh(Hm(a,c,Yn),a+"")}function RM(a){return Yp(la(a))}function CM(a,c){var f=la(a);return jl(f,as(c,0,f.length))}function uo(a,c,f,x){if(!Kt(a))return a;c=Or(c,a);for(var E=-1,C=c.length,B=C-1,k=a;k!=null&&++E<C;){var Y=Gi(c[E]),ue=f;if(Y==="__proto__"||Y==="constructor"||Y==="prototype")return a;if(E!=B){var he=k[Y];ue=x?x(he,Y,k):t,ue===t&&(ue=Kt(he)?he:or(c[E+1])?[]:{})}ao(k,Y,ue),k=k[Y]}return a}var hm=Fl?function(a,c){return Fl.set(a,c),a}:Yn,PM=Dl?function(a,c){return Dl(a,"toString",{configurable:!0,enumerable:!1,value:Bh(c),writable:!0})}:Yn;function LM(a){return jl(la(a))}function gi(a,c,f){var x=-1,E=a.length;c<0&&(c=-c>E?0:E+c),f=f>E?E:f,f<0&&(f+=E),E=c>f?0:f-c>>>0,c>>>=0;for(var C=Q(E);++x<E;)C[x]=a[x+c];return C}function IM(a,c){var f;return Dr(a,function(x,E,C){return f=c(x,E,C),!f}),!!f}function Wl(a,c,f){var x=0,E=a==null?x:a.length;if(typeof c=="number"&&c===c&&E<=ve){for(;x<E;){var C=x+E>>>1,B=a[C];B!==null&&!jn(B)&&(f?B<=c:B<c)?x=C+1:E=C}return E}return fh(a,c,Yn,f)}function fh(a,c,f,x){var E=0,C=a==null?0:a.length;if(C===0)return 0;c=f(c);for(var B=c!==c,k=c===null,Y=jn(c),ue=c===t;E<C;){var he=Ol((E+C)/2),ge=f(a[he]),Pe=ge!==t,Xe=ge===null,tt=ge===ge,dt=jn(ge);if(B)var nt=x||tt;else ue?nt=tt&&(x||Pe):k?nt=tt&&Pe&&(x||!Xe):Y?nt=tt&&Pe&&!Xe&&(x||!dt):Xe||dt?nt=!1:nt=x?ge<=c:ge<c;nt?E=he+1:C=he}return wn(C,j)}function fm(a,c){for(var f=-1,x=a.length,E=0,C=[];++f<x;){var B=a[f],k=c?c(B):B;if(!f||!Ai(k,Y)){var Y=k;C[E++]=B===0?0:B}}return C}function dm(a){return typeof a=="number"?a:jn(a)?_e:+a}function Qn(a){if(typeof a=="string")return a;if(ct(a))return Wt(a,Qn)+"";if(jn(a))return Xp?Xp.call(a):"";var c=a+"";return c=="0"&&1/a==-ie?"-0":c}function Nr(a,c,f){var x=-1,E=bl,C=a.length,B=!0,k=[],Y=k;if(f)B=!1,E=ku;else if(C>=i){var ue=c?null:VM(a);if(ue)return wl(ue);B=!1,E=eo,Y=new ss}else Y=c?[]:k;e:for(;++x<C;){var he=a[x],ge=c?c(he):he;if(he=f||he!==0?he:0,B&&ge===ge){for(var Pe=Y.length;Pe--;)if(Y[Pe]===ge)continue e;c&&Y.push(ge),k.push(he)}else E(Y,ge,f)||(Y!==k&&Y.push(ge),k.push(he))}return k}function dh(a,c){return c=Or(c,a),a=km(a,c),a==null||delete a[Gi(_i(c))]}function pm(a,c,f,x){return uo(a,c,f(os(a,c)),x)}function Xl(a,c,f,x){for(var E=a.length,C=x?E:-1;(x?C--:++C<E)&&c(a[C],C,a););return f?gi(a,x?0:C,x?C+1:E):gi(a,x?C+1:0,x?E:C)}function mm(a,c){var f=a;return f instanceof bt&&(f=f.value()),Gu(c,function(x,E){return E.func.apply(E.thisArg,Lr([x],E.args))},f)}function ph(a,c,f){var x=a.length;if(x<2)return x?Nr(a[0]):[];for(var E=-1,C=Q(x);++E<x;)for(var B=a[E],k=-1;++k<x;)k!=E&&(C[E]=oo(C[E]||B,a[k],c,f));return Nr(En(C,1),c,f)}function gm(a,c,f){for(var x=-1,E=a.length,C=c.length,B={};++x<E;){var k=x<C?c[x]:t;f(B,a[x],k)}return B}function mh(a){return nn(a)?a:[]}function gh(a){return typeof a=="function"?a:Yn}function Or(a,c){return ct(a)?a:wh(a,c)?[a]:Xm(It(a))}var UM=vt;function Fr(a,c,f){var x=a.length;return f=f===t?x:f,!c&&f>=x?a:gi(a,c,f)}var _m=xx||function(a){return bn.clearTimeout(a)};function vm(a,c){if(c)return a.slice();var f=a.length,x=zp?zp(f):new a.constructor(f);return a.copy(x),x}function _h(a){var c=new a.constructor(a.byteLength);return new Ll(c).set(new Ll(a)),c}function DM(a,c){var f=c?_h(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.byteLength)}function NM(a){var c=new a.constructor(a.source,J.exec(a));return c.lastIndex=a.lastIndex,c}function OM(a){return so?Bt(so.call(a)):{}}function ym(a,c){var f=c?_h(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.length)}function xm(a,c){if(a!==c){var f=a!==t,x=a===null,E=a===a,C=jn(a),B=c!==t,k=c===null,Y=c===c,ue=jn(c);if(!k&&!ue&&!C&&a>c||C&&B&&Y&&!k&&!ue||x&&B&&Y||!f&&Y||!E)return 1;if(!x&&!C&&!ue&&a<c||ue&&f&&E&&!x&&!C||k&&f&&E||!B&&E||!Y)return-1}return 0}function FM(a,c,f){for(var x=-1,E=a.criteria,C=c.criteria,B=E.length,k=f.length;++x<B;){var Y=xm(E[x],C[x]);if(Y){if(x>=k)return Y;var ue=f[x];return Y*(ue=="desc"?-1:1)}}return a.index-c.index}function Mm(a,c,f,x){for(var E=-1,C=a.length,B=f.length,k=-1,Y=c.length,ue=dn(C-B,0),he=Q(Y+ue),ge=!x;++k<Y;)he[k]=c[k];for(;++E<B;)(ge||E<C)&&(he[f[E]]=a[E]);for(;ue--;)he[k++]=a[E++];return he}function Sm(a,c,f,x){for(var E=-1,C=a.length,B=-1,k=f.length,Y=-1,ue=c.length,he=dn(C-k,0),ge=Q(he+ue),Pe=!x;++E<he;)ge[E]=a[E];for(var Xe=E;++Y<ue;)ge[Xe+Y]=c[Y];for(;++B<k;)(Pe||E<C)&&(ge[Xe+f[B]]=a[E++]);return ge}function Wn(a,c){var f=-1,x=a.length;for(c||(c=Q(x));++f<x;)c[f]=a[f];return c}function ki(a,c,f,x){var E=!f;f||(f={});for(var C=-1,B=c.length;++C<B;){var k=c[C],Y=x?x(f[k],a[k],k,f,a):t;Y===t&&(Y=a[k]),E?rr(f,k,Y):ao(f,k,Y)}return f}function BM(a,c){return ki(a,Eh(a),c)}function zM(a,c){return ki(a,Nm(a),c)}function ql(a,c){return function(f,x){var E=ct(f)?Wy:oM,C=c?c():{};return E(f,a,je(x,2),C)}}function ra(a){return vt(function(c,f){var x=-1,E=f.length,C=E>1?f[E-1]:t,B=E>2?f[2]:t;for(C=a.length>3&&typeof C=="function"?(E--,C):t,B&&Un(f[0],f[1],B)&&(C=E<3?t:C,E=1),c=Bt(c);++x<E;){var k=f[x];k&&a(c,k,x,C)}return c})}function bm(a,c){return function(f,x){if(f==null)return f;if(!Xn(f))return a(f,x);for(var E=f.length,C=c?E:-1,B=Bt(f);(c?C--:++C<E)&&x(B[C],C,B)!==!1;);return f}}function Em(a){return function(c,f,x){for(var E=-1,C=Bt(c),B=x(c),k=B.length;k--;){var Y=B[a?k:++E];if(f(C[Y],Y,C)===!1)break}return c}}function HM(a,c,f){var x=c&y,E=ho(a);function C(){var B=this&&this!==bn&&this instanceof C?E:a;return B.apply(x?f:this,arguments)}return C}function wm(a){return function(c){c=It(c);var f=$s(c)?wi(c):t,x=f?f[0]:c.charAt(0),E=f?Fr(f,1).join(""):c.slice(1);return x[a]()+E}}function sa(a){return function(c){return Gu(bg(Sg(c).replace(Py,"")),a,"")}}function ho(a){return function(){var c=arguments;switch(c.length){case 0:return new a;case 1:return new a(c[0]);case 2:return new a(c[0],c[1]);case 3:return new a(c[0],c[1],c[2]);case 4:return new a(c[0],c[1],c[2],c[3]);case 5:return new a(c[0],c[1],c[2],c[3],c[4]);case 6:return new a(c[0],c[1],c[2],c[3],c[4],c[5]);case 7:return new a(c[0],c[1],c[2],c[3],c[4],c[5],c[6])}var f=ia(a.prototype),x=a.apply(f,c);return Kt(x)?x:f}}function kM(a,c,f){var x=ho(a);function E(){for(var C=arguments.length,B=Q(C),k=C,Y=aa(E);k--;)B[k]=arguments[k];var ue=C<3&&B[0]!==Y&&B[C-1]!==Y?[]:Ir(B,Y);if(C-=ue.length,C<f)return Pm(a,c,Yl,E.placeholder,t,B,ue,t,t,f-C);var he=this&&this!==bn&&this instanceof E?x:a;return Jn(he,this,B)}return E}function Tm(a){return function(c,f,x){var E=Bt(c);if(!Xn(c)){var C=je(f,3);c=_n(c),f=function(k){return C(E[k],k,E)}}var B=a(c,f,x);return B>-1?E[C?c[B]:B]:t}}function Am(a){return ar(function(c){var f=c.length,x=f,E=pi.prototype.thru;for(a&&c.reverse();x--;){var C=c[x];if(typeof C!="function")throw new di(o);if(E&&!B&&$l(C)=="wrapper")var B=new pi([],!0)}for(x=B?x:f;++x<f;){C=c[x];var k=$l(C),Y=k=="wrapper"?Sh(C):t;Y&&Th(Y[0])&&Y[1]==(O|S|T|N)&&!Y[4].length&&Y[9]==1?B=B[$l(Y[0])].apply(B,Y[3]):B=C.length==1&&Th(C)?B[k]():B.thru(C)}return function(){var ue=arguments,he=ue[0];if(B&&ue.length==1&&ct(he))return B.plant(he).value();for(var ge=0,Pe=f?c[ge].apply(this,ue):he;++ge<f;)Pe=c[ge].call(this,Pe);return Pe}})}function Yl(a,c,f,x,E,C,B,k,Y,ue){var he=c&O,ge=c&y,Pe=c&_,Xe=c&(S|w),tt=c&A,dt=Pe?t:ho(a);function nt(){for(var Mt=arguments.length,Et=Q(Mt),ei=Mt;ei--;)Et[ei]=arguments[ei];if(Xe)var Dn=aa(nt),ti=jy(Et,Dn);if(x&&(Et=Mm(Et,x,E,Xe)),C&&(Et=Sm(Et,C,B,Xe)),Mt-=ti,Xe&&Mt<ue){var rn=Ir(Et,Dn);return Pm(a,c,Yl,nt.placeholder,f,Et,rn,k,Y,ue-Mt)}var Ri=ge?f:this,ur=Pe?Ri[a]:a;return Mt=Et.length,k?Et=oS(Et,k):tt&&Mt>1&&Et.reverse(),he&&Y<Mt&&(Et.length=Y),this&&this!==bn&&this instanceof nt&&(ur=dt||ho(ur)),ur.apply(Ri,Et)}return nt}function Rm(a,c){return function(f,x){return mM(f,a,c(x),{})}}function Zl(a,c){return function(f,x){var E;if(f===t&&x===t)return c;if(f!==t&&(E=f),x!==t){if(E===t)return x;typeof f=="string"||typeof x=="string"?(f=Qn(f),x=Qn(x)):(f=dm(f),x=dm(x)),E=a(f,x)}return E}}function vh(a){return ar(function(c){return c=Wt(c,$n(je())),vt(function(f){var x=this;return a(c,function(E){return Jn(E,x,f)})})})}function Kl(a,c){c=c===t?" ":Qn(c);var f=c.length;if(f<2)return f?hh(c,a):c;var x=hh(c,Nl(a/Qs(c)));return $s(c)?Fr(wi(x),0,a).join(""):x.slice(0,a)}function GM(a,c,f,x){var E=c&y,C=ho(a);function B(){for(var k=-1,Y=arguments.length,ue=-1,he=x.length,ge=Q(he+Y),Pe=this&&this!==bn&&this instanceof B?C:a;++ue<he;)ge[ue]=x[ue];for(;Y--;)ge[ue++]=arguments[++k];return Jn(Pe,E?f:this,ge)}return B}function Cm(a){return function(c,f,x){return x&&typeof x!="number"&&Un(c,f,x)&&(f=x=t),c=cr(c),f===t?(f=c,c=0):f=cr(f),x=x===t?c<f?1:-1:cr(x),AM(c,f,x,a)}}function Jl(a){return function(c,f){return typeof c=="string"&&typeof f=="string"||(c=vi(c),f=vi(f)),a(c,f)}}function Pm(a,c,f,x,E,C,B,k,Y,ue){var he=c&S,ge=he?B:t,Pe=he?t:B,Xe=he?C:t,tt=he?t:C;c|=he?T:L,c&=~(he?L:T),c&b||(c&=~(y|_));var dt=[a,c,E,Xe,ge,tt,Pe,k,Y,ue],nt=f.apply(t,dt);return Th(a)&&Gm(nt,dt),nt.placeholder=x,Vm(nt,a,c)}function yh(a){var c=fn[a];return function(f,x){if(f=vi(f),x=x==null?0:wn(ft(x),292),x&&Vp(f)){var E=(It(f)+"e").split("e"),C=c(E[0]+"e"+(+E[1]+x));return E=(It(C)+"e").split("e"),+(E[0]+"e"+(+E[1]-x))}return c(f)}}var VM=ta&&1/wl(new ta([,-0]))[1]==ie?function(a){return new ta(a)}:kh;function Lm(a){return function(c){var f=Tn(c);return f==re?Ku(c):f==it?ax(c):Qy(c,a(c))}}function sr(a,c,f,x,E,C,B,k){var Y=c&_;if(!Y&&typeof a!="function")throw new di(o);var ue=x?x.length:0;if(ue||(c&=~(T|L),x=E=t),B=B===t?B:dn(ft(B),0),k=k===t?k:ft(k),ue-=E?E.length:0,c&L){var he=x,ge=E;x=E=t}var Pe=Y?t:Sh(a),Xe=[a,c,f,x,E,he,ge,C,B,k];if(Pe&&rS(Xe,Pe),a=Xe[0],c=Xe[1],f=Xe[2],x=Xe[3],E=Xe[4],k=Xe[9]=Xe[9]===t?Y?0:a.length:dn(Xe[9]-ue,0),!k&&c&(S|w)&&(c&=~(S|w)),!c||c==y)var tt=HM(a,c,f);else c==S||c==w?tt=kM(a,c,k):(c==T||c==(y|T))&&!E.length?tt=GM(a,c,f,x):tt=Yl.apply(t,Xe);var dt=Pe?hm:Gm;return Vm(dt(tt,Xe),a,c)}function Im(a,c,f,x){return a===t||Ai(a,ea[f])&&!Dt.call(x,f)?c:a}function Um(a,c,f,x,E,C){return Kt(a)&&Kt(c)&&(C.set(c,a),Vl(a,c,t,Um,C),C.delete(c)),a}function WM(a){return mo(a)?t:a}function Dm(a,c,f,x,E,C){var B=f&v,k=a.length,Y=c.length;if(k!=Y&&!(B&&Y>k))return!1;var ue=C.get(a),he=C.get(c);if(ue&&he)return ue==c&&he==a;var ge=-1,Pe=!0,Xe=f&M?new ss:t;for(C.set(a,c),C.set(c,a);++ge<k;){var tt=a[ge],dt=c[ge];if(x)var nt=B?x(dt,tt,ge,c,a,C):x(tt,dt,ge,a,c,C);if(nt!==t){if(nt)continue;Pe=!1;break}if(Xe){if(!Vu(c,function(Mt,Et){if(!eo(Xe,Et)&&(tt===Mt||E(tt,Mt,f,x,C)))return Xe.push(Et)})){Pe=!1;break}}else if(!(tt===dt||E(tt,dt,f,x,C))){Pe=!1;break}}return C.delete(a),C.delete(c),Pe}function XM(a,c,f,x,E,C,B){switch(f){case z:if(a.byteLength!=c.byteLength||a.byteOffset!=c.byteOffset)return!1;a=a.buffer,c=c.buffer;case ye:return!(a.byteLength!=c.byteLength||!C(new Ll(a),new Ll(c)));case et:case Ze:case Se:return Ai(+a,+c);case Je:return a.name==c.name&&a.message==c.message;case Ke:case Lt:return a==c+"";case re:var k=Ku;case it:var Y=x&v;if(k||(k=wl),a.size!=c.size&&!Y)return!1;var ue=B.get(a);if(ue)return ue==c;x|=M,B.set(a,c);var he=Dm(k(a),k(c),x,E,C,B);return B.delete(a),he;case F:if(so)return so.call(a)==so.call(c)}return!1}function qM(a,c,f,x,E,C){var B=f&v,k=xh(a),Y=k.length,ue=xh(c),he=ue.length;if(Y!=he&&!B)return!1;for(var ge=Y;ge--;){var Pe=k[ge];if(!(B?Pe in c:Dt.call(c,Pe)))return!1}var Xe=C.get(a),tt=C.get(c);if(Xe&&tt)return Xe==c&&tt==a;var dt=!0;C.set(a,c),C.set(c,a);for(var nt=B;++ge<Y;){Pe=k[ge];var Mt=a[Pe],Et=c[Pe];if(x)var ei=B?x(Et,Mt,Pe,c,a,C):x(Mt,Et,Pe,a,c,C);if(!(ei===t?Mt===Et||E(Mt,Et,f,x,C):ei)){dt=!1;break}nt||(nt=Pe=="constructor")}if(dt&&!nt){var Dn=a.constructor,ti=c.constructor;Dn!=ti&&"constructor"in a&&"constructor"in c&&!(typeof Dn=="function"&&Dn instanceof Dn&&typeof ti=="function"&&ti instanceof ti)&&(dt=!1)}return C.delete(a),C.delete(c),dt}function ar(a){return Rh(Hm(a,t,Km),a+"")}function xh(a){return em(a,_n,Eh)}function Mh(a){return em(a,qn,Nm)}var Sh=Fl?function(a){return Fl.get(a)}:kh;function $l(a){for(var c=a.name+"",f=na[c],x=Dt.call(na,c)?f.length:0;x--;){var E=f[x],C=E.func;if(C==null||C==a)return E.name}return c}function aa(a){var c=Dt.call(R,"placeholder")?R:a;return c.placeholder}function je(){var a=R.iteratee||zh;return a=a===zh?im:a,arguments.length?a(arguments[0],arguments[1]):a}function Ql(a,c){var f=a.__data__;return eS(c)?f[typeof c=="string"?"string":"hash"]:f.map}function bh(a){for(var c=_n(a),f=c.length;f--;){var x=c[f],E=a[x];c[f]=[x,E,Bm(E)]}return c}function ls(a,c){var f=ix(a,c);return nm(f)?f:t}function YM(a){var c=Dt.call(a,is),f=a[is];try{a[is]=t;var x=!0}catch{}var E=Cl.call(a);return x&&(c?a[is]=f:delete a[is]),E}var Eh=$u?function(a){return a==null?[]:(a=Bt(a),Pr($u(a),function(c){return kp.call(a,c)}))}:Gh,Nm=$u?function(a){for(var c=[];a;)Lr(c,Eh(a)),a=Il(a);return c}:Gh,Tn=In;(Qu&&Tn(new Qu(new ArrayBuffer(1)))!=z||no&&Tn(new no)!=re||ju&&Tn(ju.resolve())!=Ue||ta&&Tn(new ta)!=it||io&&Tn(new io)!=te)&&(Tn=function(a){var c=In(a),f=c==De?a.constructor:t,x=f?cs(f):"";if(x)switch(x){case Cx:return z;case Px:return re;case Lx:return Ue;case Ix:return it;case Ux:return te}return c});function ZM(a,c,f){for(var x=-1,E=f.length;++x<E;){var C=f[x],B=C.size;switch(C.type){case"drop":a+=B;break;case"dropRight":c-=B;break;case"take":c=wn(c,a+B);break;case"takeRight":a=dn(a,c-B);break}}return{start:a,end:c}}function KM(a){var c=a.match(Xs);return c?c[1].split(Sl):[]}function Om(a,c,f){c=Or(c,a);for(var x=-1,E=c.length,C=!1;++x<E;){var B=Gi(c[x]);if(!(C=a!=null&&f(a,B)))break;a=a[B]}return C||++x!=E?C:(E=a==null?0:a.length,!!E&&sc(E)&&or(B,E)&&(ct(a)||us(a)))}function JM(a){var c=a.length,f=new a.constructor(c);return c&&typeof a[0]=="string"&&Dt.call(a,"index")&&(f.index=a.index,f.input=a.input),f}function Fm(a){return typeof a.constructor=="function"&&!fo(a)?ia(Il(a)):{}}function $M(a,c,f){var x=a.constructor;switch(c){case ye:return _h(a);case et:case Ze:return new x(+a);case z:return DM(a,f);case pe:case xe:case $:case ze:case Ye:case Ve:case He:case Fe:case Qe:return ym(a,f);case re:return new x;case Se:case Lt:return new x(a);case Ke:return NM(a);case it:return new x;case F:return OM(a)}}function QM(a,c){var f=c.length;if(!f)return a;var x=f-1;return c[x]=(f>1?"& ":"")+c[x],c=c.join(f>2?", ":" "),a.replace(Ml,`{
/* [wrapped with `+c+`] */
`)}function jM(a){return ct(a)||us(a)||!!(Gp&&a&&a[Gp])}function or(a,c){var f=typeof a;return c=c??le,!!c&&(f=="number"||f!="symbol"&&$e.test(a))&&a>-1&&a%1==0&&a<c}function Un(a,c,f){if(!Kt(f))return!1;var x=typeof c;return(x=="number"?Xn(f)&&or(c,f.length):x=="string"&&c in f)?Ai(f[c],a):!1}function wh(a,c){if(ct(a))return!1;var f=typeof a;return f=="number"||f=="symbol"||f=="boolean"||a==null||jn(a)?!0:ci.test(a)||!Vt.test(a)||c!=null&&a in Bt(c)}function eS(a){var c=typeof a;return c=="string"||c=="number"||c=="symbol"||c=="boolean"?a!=="__proto__":a===null}function Th(a){var c=$l(a),f=R[c];if(typeof f!="function"||!(c in bt.prototype))return!1;if(a===f)return!0;var x=Sh(f);return!!x&&a===x[0]}function tS(a){return!!Bp&&Bp in a}var nS=Al?lr:Vh;function fo(a){var c=a&&a.constructor,f=typeof c=="function"&&c.prototype||ea;return a===f}function Bm(a){return a===a&&!Kt(a)}function zm(a,c){return function(f){return f==null?!1:f[a]===c&&(c!==t||a in Bt(f))}}function iS(a){var c=ic(a,function(x){return f.size===h&&f.clear(),x}),f=c.cache;return c}function rS(a,c){var f=a[1],x=c[1],E=f|x,C=E<(y|_|O),B=x==O&&f==S||x==O&&f==N&&a[7].length<=c[8]||x==(O|N)&&c[7].length<=c[8]&&f==S;if(!(C||B))return a;x&y&&(a[2]=c[2],E|=f&y?0:b);var k=c[3];if(k){var Y=a[3];a[3]=Y?Mm(Y,k,c[4]):k,a[4]=Y?Ir(a[3],d):c[4]}return k=c[5],k&&(Y=a[5],a[5]=Y?Sm(Y,k,c[6]):k,a[6]=Y?Ir(a[5],d):c[6]),k=c[7],k&&(a[7]=k),x&O&&(a[8]=a[8]==null?c[8]:wn(a[8],c[8])),a[9]==null&&(a[9]=c[9]),a[0]=c[0],a[1]=E,a}function sS(a){var c=[];if(a!=null)for(var f in Bt(a))c.push(f);return c}function aS(a){return Cl.call(a)}function Hm(a,c,f){return c=dn(c===t?a.length-1:c,0),function(){for(var x=arguments,E=-1,C=dn(x.length-c,0),B=Q(C);++E<C;)B[E]=x[c+E];E=-1;for(var k=Q(c+1);++E<c;)k[E]=x[E];return k[c]=f(B),Jn(a,this,k)}}function km(a,c){return c.length<2?a:os(a,gi(c,0,-1))}function oS(a,c){for(var f=a.length,x=wn(c.length,f),E=Wn(a);x--;){var C=c[x];a[x]=or(C,f)?E[C]:t}return a}function Ah(a,c){if(!(c==="constructor"&&typeof a[c]=="function")&&c!="__proto__")return a[c]}var Gm=Wm(hm),po=Sx||function(a,c){return bn.setTimeout(a,c)},Rh=Wm(PM);function Vm(a,c,f){var x=c+"";return Rh(a,QM(x,lS(KM(x),f)))}function Wm(a){var c=0,f=0;return function(){var x=Tx(),E=X-(x-f);if(f=x,E>0){if(++c>=ne)return arguments[0]}else c=0;return a.apply(t,arguments)}}function jl(a,c){var f=-1,x=a.length,E=x-1;for(c=c===t?x:c;++f<c;){var C=uh(f,E),B=a[C];a[C]=a[f],a[f]=B}return a.length=c,a}var Xm=iS(function(a){var c=[];return a.charCodeAt(0)===46&&c.push(""),a.replace(Sn,function(f,x,E,C){c.push(E?C.replace(Uu,"$1"):x||f)}),c});function Gi(a){if(typeof a=="string"||jn(a))return a;var c=a+"";return c=="0"&&1/a==-ie?"-0":c}function cs(a){if(a!=null){try{return Rl.call(a)}catch{}try{return a+""}catch{}}return""}function lS(a,c){return fi(Me,function(f){var x="_."+f[0];c&f[1]&&!bl(a,x)&&a.push(x)}),a.sort()}function qm(a){if(a instanceof bt)return a.clone();var c=new pi(a.__wrapped__,a.__chain__);return c.__actions__=Wn(a.__actions__),c.__index__=a.__index__,c.__values__=a.__values__,c}function cS(a,c,f){(f?Un(a,c,f):c===t)?c=1:c=dn(ft(c),0);var x=a==null?0:a.length;if(!x||c<1)return[];for(var E=0,C=0,B=Q(Nl(x/c));E<x;)B[C++]=gi(a,E,E+=c);return B}function uS(a){for(var c=-1,f=a==null?0:a.length,x=0,E=[];++c<f;){var C=a[c];C&&(E[x++]=C)}return E}function hS(){var a=arguments.length;if(!a)return[];for(var c=Q(a-1),f=arguments[0],x=a;x--;)c[x-1]=arguments[x];return Lr(ct(f)?Wn(f):[f],En(c,1))}var fS=vt(function(a,c){return nn(a)?oo(a,En(c,1,nn,!0)):[]}),dS=vt(function(a,c){var f=_i(c);return nn(f)&&(f=t),nn(a)?oo(a,En(c,1,nn,!0),je(f,2)):[]}),pS=vt(function(a,c){var f=_i(c);return nn(f)&&(f=t),nn(a)?oo(a,En(c,1,nn,!0),t,f):[]});function mS(a,c,f){var x=a==null?0:a.length;return x?(c=f||c===t?1:ft(c),gi(a,c<0?0:c,x)):[]}function gS(a,c,f){var x=a==null?0:a.length;return x?(c=f||c===t?1:ft(c),c=x-c,gi(a,0,c<0?0:c)):[]}function _S(a,c){return a&&a.length?Xl(a,je(c,3),!0,!0):[]}function vS(a,c){return a&&a.length?Xl(a,je(c,3),!0):[]}function yS(a,c,f,x){var E=a==null?0:a.length;return E?(f&&typeof f!="number"&&Un(a,c,f)&&(f=0,x=E),hM(a,c,f,x)):[]}function Ym(a,c,f){var x=a==null?0:a.length;if(!x)return-1;var E=f==null?0:ft(f);return E<0&&(E=dn(x+E,0)),El(a,je(c,3),E)}function Zm(a,c,f){var x=a==null?0:a.length;if(!x)return-1;var E=x-1;return f!==t&&(E=ft(f),E=f<0?dn(x+E,0):wn(E,x-1)),El(a,je(c,3),E,!0)}function Km(a){var c=a==null?0:a.length;return c?En(a,1):[]}function xS(a){var c=a==null?0:a.length;return c?En(a,ie):[]}function MS(a,c){var f=a==null?0:a.length;return f?(c=c===t?1:ft(c),En(a,c)):[]}function SS(a){for(var c=-1,f=a==null?0:a.length,x={};++c<f;){var E=a[c];x[E[0]]=E[1]}return x}function Jm(a){return a&&a.length?a[0]:t}function bS(a,c,f){var x=a==null?0:a.length;if(!x)return-1;var E=f==null?0:ft(f);return E<0&&(E=dn(x+E,0)),Js(a,c,E)}function ES(a){var c=a==null?0:a.length;return c?gi(a,0,-1):[]}var wS=vt(function(a){var c=Wt(a,mh);return c.length&&c[0]===a[0]?sh(c):[]}),TS=vt(function(a){var c=_i(a),f=Wt(a,mh);return c===_i(f)?c=t:f.pop(),f.length&&f[0]===a[0]?sh(f,je(c,2)):[]}),AS=vt(function(a){var c=_i(a),f=Wt(a,mh);return c=typeof c=="function"?c:t,c&&f.pop(),f.length&&f[0]===a[0]?sh(f,t,c):[]});function RS(a,c){return a==null?"":Ex.call(a,c)}function _i(a){var c=a==null?0:a.length;return c?a[c-1]:t}function CS(a,c,f){var x=a==null?0:a.length;if(!x)return-1;var E=x;return f!==t&&(E=ft(f),E=E<0?dn(x+E,0):wn(E,x-1)),c===c?lx(a,c,E):El(a,Pp,E,!0)}function PS(a,c){return a&&a.length?om(a,ft(c)):t}var LS=vt($m);function $m(a,c){return a&&a.length&&c&&c.length?ch(a,c):a}function IS(a,c,f){return a&&a.length&&c&&c.length?ch(a,c,je(f,2)):a}function US(a,c,f){return a&&a.length&&c&&c.length?ch(a,c,t,f):a}var DS=ar(function(a,c){var f=a==null?0:a.length,x=th(a,c);return um(a,Wt(c,function(E){return or(E,f)?+E:E}).sort(xm)),x});function NS(a,c){var f=[];if(!(a&&a.length))return f;var x=-1,E=[],C=a.length;for(c=je(c,3);++x<C;){var B=a[x];c(B,x,a)&&(f.push(B),E.push(x))}return um(a,E),f}function Ch(a){return a==null?a:Rx.call(a)}function OS(a,c,f){var x=a==null?0:a.length;return x?(f&&typeof f!="number"&&Un(a,c,f)?(c=0,f=x):(c=c==null?0:ft(c),f=f===t?x:ft(f)),gi(a,c,f)):[]}function FS(a,c){return Wl(a,c)}function BS(a,c,f){return fh(a,c,je(f,2))}function zS(a,c){var f=a==null?0:a.length;if(f){var x=Wl(a,c);if(x<f&&Ai(a[x],c))return x}return-1}function HS(a,c){return Wl(a,c,!0)}function kS(a,c,f){return fh(a,c,je(f,2),!0)}function GS(a,c){var f=a==null?0:a.length;if(f){var x=Wl(a,c,!0)-1;if(Ai(a[x],c))return x}return-1}function VS(a){return a&&a.length?fm(a):[]}function WS(a,c){return a&&a.length?fm(a,je(c,2)):[]}function XS(a){var c=a==null?0:a.length;return c?gi(a,1,c):[]}function qS(a,c,f){return a&&a.length?(c=f||c===t?1:ft(c),gi(a,0,c<0?0:c)):[]}function YS(a,c,f){var x=a==null?0:a.length;return x?(c=f||c===t?1:ft(c),c=x-c,gi(a,c<0?0:c,x)):[]}function ZS(a,c){return a&&a.length?Xl(a,je(c,3),!1,!0):[]}function KS(a,c){return a&&a.length?Xl(a,je(c,3)):[]}var JS=vt(function(a){return Nr(En(a,1,nn,!0))}),$S=vt(function(a){var c=_i(a);return nn(c)&&(c=t),Nr(En(a,1,nn,!0),je(c,2))}),QS=vt(function(a){var c=_i(a);return c=typeof c=="function"?c:t,Nr(En(a,1,nn,!0),t,c)});function jS(a){return a&&a.length?Nr(a):[]}function eb(a,c){return a&&a.length?Nr(a,je(c,2)):[]}function tb(a,c){return c=typeof c=="function"?c:t,a&&a.length?Nr(a,t,c):[]}function Ph(a){if(!(a&&a.length))return[];var c=0;return a=Pr(a,function(f){if(nn(f))return c=dn(f.length,c),!0}),Yu(c,function(f){return Wt(a,Wu(f))})}function Qm(a,c){if(!(a&&a.length))return[];var f=Ph(a);return c==null?f:Wt(f,function(x){return Jn(c,t,x)})}var nb=vt(function(a,c){return nn(a)?oo(a,c):[]}),ib=vt(function(a){return ph(Pr(a,nn))}),rb=vt(function(a){var c=_i(a);return nn(c)&&(c=t),ph(Pr(a,nn),je(c,2))}),sb=vt(function(a){var c=_i(a);return c=typeof c=="function"?c:t,ph(Pr(a,nn),t,c)}),ab=vt(Ph);function ob(a,c){return gm(a||[],c||[],ao)}function lb(a,c){return gm(a||[],c||[],uo)}var cb=vt(function(a){var c=a.length,f=c>1?a[c-1]:t;return f=typeof f=="function"?(a.pop(),f):t,Qm(a,f)});function jm(a){var c=R(a);return c.__chain__=!0,c}function ub(a,c){return c(a),a}function ec(a,c){return c(a)}var hb=ar(function(a){var c=a.length,f=c?a[0]:0,x=this.__wrapped__,E=function(C){return th(C,a)};return c>1||this.__actions__.length||!(x instanceof bt)||!or(f)?this.thru(E):(x=x.slice(f,+f+(c?1:0)),x.__actions__.push({func:ec,args:[E],thisArg:t}),new pi(x,this.__chain__).thru(function(C){return c&&!C.length&&C.push(t),C}))});function fb(){return jm(this)}function db(){return new pi(this.value(),this.__chain__)}function pb(){this.__values__===t&&(this.__values__=dg(this.value()));var a=this.__index__>=this.__values__.length,c=a?t:this.__values__[this.__index__++];return{done:a,value:c}}function mb(){return this}function gb(a){for(var c,f=this;f instanceof zl;){var x=qm(f);x.__index__=0,x.__values__=t,c?E.__wrapped__=x:c=x;var E=x;f=f.__wrapped__}return E.__wrapped__=a,c}function _b(){var a=this.__wrapped__;if(a instanceof bt){var c=a;return this.__actions__.length&&(c=new bt(this)),c=c.reverse(),c.__actions__.push({func:ec,args:[Ch],thisArg:t}),new pi(c,this.__chain__)}return this.thru(Ch)}function vb(){return mm(this.__wrapped__,this.__actions__)}var yb=ql(function(a,c,f){Dt.call(a,f)?++a[f]:rr(a,f,1)});function xb(a,c,f){var x=ct(a)?Rp:uM;return f&&Un(a,c,f)&&(c=t),x(a,je(c,3))}function Mb(a,c){var f=ct(a)?Pr:Qp;return f(a,je(c,3))}var Sb=Tm(Ym),bb=Tm(Zm);function Eb(a,c){return En(tc(a,c),1)}function wb(a,c){return En(tc(a,c),ie)}function Tb(a,c,f){return f=f===t?1:ft(f),En(tc(a,c),f)}function eg(a,c){var f=ct(a)?fi:Dr;return f(a,je(c,3))}function tg(a,c){var f=ct(a)?Xy:$p;return f(a,je(c,3))}var Ab=ql(function(a,c,f){Dt.call(a,f)?a[f].push(c):rr(a,f,[c])});function Rb(a,c,f,x){a=Xn(a)?a:la(a),f=f&&!x?ft(f):0;var E=a.length;return f<0&&(f=dn(E+f,0)),ac(a)?f<=E&&a.indexOf(c,f)>-1:!!E&&Js(a,c,f)>-1}var Cb=vt(function(a,c,f){var x=-1,E=typeof c=="function",C=Xn(a)?Q(a.length):[];return Dr(a,function(B){C[++x]=E?Jn(c,B,f):lo(B,c,f)}),C}),Pb=ql(function(a,c,f){rr(a,f,c)});function tc(a,c){var f=ct(a)?Wt:rm;return f(a,je(c,3))}function Lb(a,c,f,x){return a==null?[]:(ct(c)||(c=c==null?[]:[c]),f=x?t:f,ct(f)||(f=f==null?[]:[f]),lm(a,c,f))}var Ib=ql(function(a,c,f){a[f?0:1].push(c)},function(){return[[],[]]});function Ub(a,c,f){var x=ct(a)?Gu:Ip,E=arguments.length<3;return x(a,je(c,4),f,E,Dr)}function Db(a,c,f){var x=ct(a)?qy:Ip,E=arguments.length<3;return x(a,je(c,4),f,E,$p)}function Nb(a,c){var f=ct(a)?Pr:Qp;return f(a,rc(je(c,3)))}function Ob(a){var c=ct(a)?Yp:RM;return c(a)}function Fb(a,c,f){(f?Un(a,c,f):c===t)?c=1:c=ft(c);var x=ct(a)?sM:CM;return x(a,c)}function Bb(a){var c=ct(a)?aM:LM;return c(a)}function zb(a){if(a==null)return 0;if(Xn(a))return ac(a)?Qs(a):a.length;var c=Tn(a);return c==re||c==it?a.size:oh(a).length}function Hb(a,c,f){var x=ct(a)?Vu:IM;return f&&Un(a,c,f)&&(c=t),x(a,je(c,3))}var kb=vt(function(a,c){if(a==null)return[];var f=c.length;return f>1&&Un(a,c[0],c[1])?c=[]:f>2&&Un(c[0],c[1],c[2])&&(c=[c[0]]),lm(a,En(c,1),[])}),nc=Mx||function(){return bn.Date.now()};function Gb(a,c){if(typeof c!="function")throw new di(o);return a=ft(a),function(){if(--a<1)return c.apply(this,arguments)}}function ng(a,c,f){return c=f?t:c,c=a&&c==null?a.length:c,sr(a,O,t,t,t,t,c)}function ig(a,c){var f;if(typeof c!="function")throw new di(o);return a=ft(a),function(){return--a>0&&(f=c.apply(this,arguments)),a<=1&&(c=t),f}}var Lh=vt(function(a,c,f){var x=y;if(f.length){var E=Ir(f,aa(Lh));x|=T}return sr(a,x,c,f,E)}),rg=vt(function(a,c,f){var x=y|_;if(f.length){var E=Ir(f,aa(rg));x|=T}return sr(c,x,a,f,E)});function sg(a,c,f){c=f?t:c;var x=sr(a,S,t,t,t,t,t,c);return x.placeholder=sg.placeholder,x}function ag(a,c,f){c=f?t:c;var x=sr(a,w,t,t,t,t,t,c);return x.placeholder=ag.placeholder,x}function og(a,c,f){var x,E,C,B,k,Y,ue=0,he=!1,ge=!1,Pe=!0;if(typeof a!="function")throw new di(o);c=vi(c)||0,Kt(f)&&(he=!!f.leading,ge="maxWait"in f,C=ge?dn(vi(f.maxWait)||0,c):C,Pe="trailing"in f?!!f.trailing:Pe);function Xe(rn){var Ri=x,ur=E;return x=E=t,ue=rn,B=a.apply(ur,Ri),B}function tt(rn){return ue=rn,k=po(Mt,c),he?Xe(rn):B}function dt(rn){var Ri=rn-Y,ur=rn-ue,Tg=c-Ri;return ge?wn(Tg,C-ur):Tg}function nt(rn){var Ri=rn-Y,ur=rn-ue;return Y===t||Ri>=c||Ri<0||ge&&ur>=C}function Mt(){var rn=nc();if(nt(rn))return Et(rn);k=po(Mt,dt(rn))}function Et(rn){return k=t,Pe&&x?Xe(rn):(x=E=t,B)}function ei(){k!==t&&_m(k),ue=0,x=Y=E=k=t}function Dn(){return k===t?B:Et(nc())}function ti(){var rn=nc(),Ri=nt(rn);if(x=arguments,E=this,Y=rn,Ri){if(k===t)return tt(Y);if(ge)return _m(k),k=po(Mt,c),Xe(Y)}return k===t&&(k=po(Mt,c)),B}return ti.cancel=ei,ti.flush=Dn,ti}var Vb=vt(function(a,c){return Jp(a,1,c)}),Wb=vt(function(a,c,f){return Jp(a,vi(c)||0,f)});function Xb(a){return sr(a,A)}function ic(a,c){if(typeof a!="function"||c!=null&&typeof c!="function")throw new di(o);var f=function(){var x=arguments,E=c?c.apply(this,x):x[0],C=f.cache;if(C.has(E))return C.get(E);var B=a.apply(this,x);return f.cache=C.set(E,B)||C,B};return f.cache=new(ic.Cache||ir),f}ic.Cache=ir;function rc(a){if(typeof a!="function")throw new di(o);return function(){var c=arguments;switch(c.length){case 0:return!a.call(this);case 1:return!a.call(this,c[0]);case 2:return!a.call(this,c[0],c[1]);case 3:return!a.call(this,c[0],c[1],c[2])}return!a.apply(this,c)}}function qb(a){return ig(2,a)}var Yb=UM(function(a,c){c=c.length==1&&ct(c[0])?Wt(c[0],$n(je())):Wt(En(c,1),$n(je()));var f=c.length;return vt(function(x){for(var E=-1,C=wn(x.length,f);++E<C;)x[E]=c[E].call(this,x[E]);return Jn(a,this,x)})}),Ih=vt(function(a,c){var f=Ir(c,aa(Ih));return sr(a,T,t,c,f)}),lg=vt(function(a,c){var f=Ir(c,aa(lg));return sr(a,L,t,c,f)}),Zb=ar(function(a,c){return sr(a,N,t,t,t,c)});function Kb(a,c){if(typeof a!="function")throw new di(o);return c=c===t?c:ft(c),vt(a,c)}function Jb(a,c){if(typeof a!="function")throw new di(o);return c=c==null?0:dn(ft(c),0),vt(function(f){var x=f[c],E=Fr(f,0,c);return x&&Lr(E,x),Jn(a,this,E)})}function $b(a,c,f){var x=!0,E=!0;if(typeof a!="function")throw new di(o);return Kt(f)&&(x="leading"in f?!!f.leading:x,E="trailing"in f?!!f.trailing:E),og(a,c,{leading:x,maxWait:c,trailing:E})}function Qb(a){return ng(a,1)}function jb(a,c){return Ih(gh(c),a)}function eE(){if(!arguments.length)return[];var a=arguments[0];return ct(a)?a:[a]}function tE(a){return mi(a,g)}function nE(a,c){return c=typeof c=="function"?c:t,mi(a,g,c)}function iE(a){return mi(a,m|g)}function rE(a,c){return c=typeof c=="function"?c:t,mi(a,m|g,c)}function sE(a,c){return c==null||Kp(a,c,_n(c))}function Ai(a,c){return a===c||a!==a&&c!==c}var aE=Jl(rh),oE=Jl(function(a,c){return a>=c}),us=tm(function(){return arguments}())?tm:function(a){return Qt(a)&&Dt.call(a,"callee")&&!kp.call(a,"callee")},ct=Q.isArray,lE=Sp?$n(Sp):gM;function Xn(a){return a!=null&&sc(a.length)&&!lr(a)}function nn(a){return Qt(a)&&Xn(a)}function cE(a){return a===!0||a===!1||Qt(a)&&In(a)==et}var Br=bx||Vh,uE=bp?$n(bp):_M;function hE(a){return Qt(a)&&a.nodeType===1&&!mo(a)}function fE(a){if(a==null)return!0;if(Xn(a)&&(ct(a)||typeof a=="string"||typeof a.splice=="function"||Br(a)||oa(a)||us(a)))return!a.length;var c=Tn(a);if(c==re||c==it)return!a.size;if(fo(a))return!oh(a).length;for(var f in a)if(Dt.call(a,f))return!1;return!0}function dE(a,c){return co(a,c)}function pE(a,c,f){f=typeof f=="function"?f:t;var x=f?f(a,c):t;return x===t?co(a,c,t,f):!!x}function Uh(a){if(!Qt(a))return!1;var c=In(a);return c==Je||c==At||typeof a.message=="string"&&typeof a.name=="string"&&!mo(a)}function mE(a){return typeof a=="number"&&Vp(a)}function lr(a){if(!Kt(a))return!1;var c=In(a);return c==H||c==Ee||c==Ge||c==Ne}function cg(a){return typeof a=="number"&&a==ft(a)}function sc(a){return typeof a=="number"&&a>-1&&a%1==0&&a<=le}function Kt(a){var c=typeof a;return a!=null&&(c=="object"||c=="function")}function Qt(a){return a!=null&&typeof a=="object"}var ug=Ep?$n(Ep):yM;function gE(a,c){return a===c||ah(a,c,bh(c))}function _E(a,c,f){return f=typeof f=="function"?f:t,ah(a,c,bh(c),f)}function vE(a){return hg(a)&&a!=+a}function yE(a){if(nS(a))throw new lt(r);return nm(a)}function xE(a){return a===null}function ME(a){return a==null}function hg(a){return typeof a=="number"||Qt(a)&&In(a)==Se}function mo(a){if(!Qt(a)||In(a)!=De)return!1;var c=Il(a);if(c===null)return!0;var f=Dt.call(c,"constructor")&&c.constructor;return typeof f=="function"&&f instanceof f&&Rl.call(f)==_x}var Dh=wp?$n(wp):xM;function SE(a){return cg(a)&&a>=-le&&a<=le}var fg=Tp?$n(Tp):MM;function ac(a){return typeof a=="string"||!ct(a)&&Qt(a)&&In(a)==Lt}function jn(a){return typeof a=="symbol"||Qt(a)&&In(a)==F}var oa=Ap?$n(Ap):SM;function bE(a){return a===t}function EE(a){return Qt(a)&&Tn(a)==te}function wE(a){return Qt(a)&&In(a)==be}var TE=Jl(lh),AE=Jl(function(a,c){return a<=c});function dg(a){if(!a)return[];if(Xn(a))return ac(a)?wi(a):Wn(a);if(to&&a[to])return sx(a[to]());var c=Tn(a),f=c==re?Ku:c==it?wl:la;return f(a)}function cr(a){if(!a)return a===0?a:0;if(a=vi(a),a===ie||a===-ie){var c=a<0?-1:1;return c*me}return a===a?a:0}function ft(a){var c=cr(a),f=c%1;return c===c?f?c-f:c:0}function pg(a){return a?as(ft(a),0,we):0}function vi(a){if(typeof a=="number")return a;if(jn(a))return _e;if(Kt(a)){var c=typeof a.valueOf=="function"?a.valueOf():a;a=Kt(c)?c+"":c}if(typeof a!="string")return a===0?a:+a;a=Up(a);var f=Z.test(a);return f||ke.test(a)?Gy(a.slice(2),f?2:8):se.test(a)?_e:+a}function mg(a){return ki(a,qn(a))}function RE(a){return a?as(ft(a),-le,le):a===0?a:0}function It(a){return a==null?"":Qn(a)}var CE=ra(function(a,c){if(fo(c)||Xn(c)){ki(c,_n(c),a);return}for(var f in c)Dt.call(c,f)&&ao(a,f,c[f])}),gg=ra(function(a,c){ki(c,qn(c),a)}),oc=ra(function(a,c,f,x){ki(c,qn(c),a,x)}),PE=ra(function(a,c,f,x){ki(c,_n(c),a,x)}),LE=ar(th);function IE(a,c){var f=ia(a);return c==null?f:Zp(f,c)}var UE=vt(function(a,c){a=Bt(a);var f=-1,x=c.length,E=x>2?c[2]:t;for(E&&Un(c[0],c[1],E)&&(x=1);++f<x;)for(var C=c[f],B=qn(C),k=-1,Y=B.length;++k<Y;){var ue=B[k],he=a[ue];(he===t||Ai(he,ea[ue])&&!Dt.call(a,ue))&&(a[ue]=C[ue])}return a}),DE=vt(function(a){return a.push(t,Um),Jn(_g,t,a)});function NE(a,c){return Cp(a,je(c,3),Hi)}function OE(a,c){return Cp(a,je(c,3),ih)}function FE(a,c){return a==null?a:nh(a,je(c,3),qn)}function BE(a,c){return a==null?a:jp(a,je(c,3),qn)}function zE(a,c){return a&&Hi(a,je(c,3))}function HE(a,c){return a&&ih(a,je(c,3))}function kE(a){return a==null?[]:Gl(a,_n(a))}function GE(a){return a==null?[]:Gl(a,qn(a))}function Nh(a,c,f){var x=a==null?t:os(a,c);return x===t?f:x}function VE(a,c){return a!=null&&Om(a,c,fM)}function Oh(a,c){return a!=null&&Om(a,c,dM)}var WE=Rm(function(a,c,f){c!=null&&typeof c.toString!="function"&&(c=Cl.call(c)),a[c]=f},Bh(Yn)),XE=Rm(function(a,c,f){c!=null&&typeof c.toString!="function"&&(c=Cl.call(c)),Dt.call(a,c)?a[c].push(f):a[c]=[f]},je),qE=vt(lo);function _n(a){return Xn(a)?qp(a):oh(a)}function qn(a){return Xn(a)?qp(a,!0):bM(a)}function YE(a,c){var f={};return c=je(c,3),Hi(a,function(x,E,C){rr(f,c(x,E,C),x)}),f}function ZE(a,c){var f={};return c=je(c,3),Hi(a,function(x,E,C){rr(f,E,c(x,E,C))}),f}var KE=ra(function(a,c,f){Vl(a,c,f)}),_g=ra(function(a,c,f,x){Vl(a,c,f,x)}),JE=ar(function(a,c){var f={};if(a==null)return f;var x=!1;c=Wt(c,function(C){return C=Or(C,a),x||(x=C.length>1),C}),ki(a,Mh(a),f),x&&(f=mi(f,m|p|g,WM));for(var E=c.length;E--;)dh(f,c[E]);return f});function $E(a,c){return vg(a,rc(je(c)))}var QE=ar(function(a,c){return a==null?{}:wM(a,c)});function vg(a,c){if(a==null)return{};var f=Wt(Mh(a),function(x){return[x]});return c=je(c),cm(a,f,function(x,E){return c(x,E[0])})}function jE(a,c,f){c=Or(c,a);var x=-1,E=c.length;for(E||(E=1,a=t);++x<E;){var C=a==null?t:a[Gi(c[x])];C===t&&(x=E,C=f),a=lr(C)?C.call(a):C}return a}function ew(a,c,f){return a==null?a:uo(a,c,f)}function tw(a,c,f,x){return x=typeof x=="function"?x:t,a==null?a:uo(a,c,f,x)}var yg=Lm(_n),xg=Lm(qn);function nw(a,c,f){var x=ct(a),E=x||Br(a)||oa(a);if(c=je(c,4),f==null){var C=a&&a.constructor;E?f=x?new C:[]:Kt(a)?f=lr(C)?ia(Il(a)):{}:f={}}return(E?fi:Hi)(a,function(B,k,Y){return c(f,B,k,Y)}),f}function iw(a,c){return a==null?!0:dh(a,c)}function rw(a,c,f){return a==null?a:pm(a,c,gh(f))}function sw(a,c,f,x){return x=typeof x=="function"?x:t,a==null?a:pm(a,c,gh(f),x)}function la(a){return a==null?[]:Zu(a,_n(a))}function aw(a){return a==null?[]:Zu(a,qn(a))}function ow(a,c,f){return f===t&&(f=c,c=t),f!==t&&(f=vi(f),f=f===f?f:0),c!==t&&(c=vi(c),c=c===c?c:0),as(vi(a),c,f)}function lw(a,c,f){return c=cr(c),f===t?(f=c,c=0):f=cr(f),a=vi(a),pM(a,c,f)}function cw(a,c,f){if(f&&typeof f!="boolean"&&Un(a,c,f)&&(c=f=t),f===t&&(typeof c=="boolean"?(f=c,c=t):typeof a=="boolean"&&(f=a,a=t)),a===t&&c===t?(a=0,c=1):(a=cr(a),c===t?(c=a,a=0):c=cr(c)),a>c){var x=a;a=c,c=x}if(f||a%1||c%1){var E=Wp();return wn(a+E*(c-a+ky("1e-"+((E+"").length-1))),c)}return uh(a,c)}var uw=sa(function(a,c,f){return c=c.toLowerCase(),a+(f?Mg(c):c)});function Mg(a){return Fh(It(a).toLowerCase())}function Sg(a){return a=It(a),a&&a.replace(st,ex).replace(Ly,"")}function hw(a,c,f){a=It(a),c=Qn(c);var x=a.length;f=f===t?x:as(ft(f),0,x);var E=f;return f-=c.length,f>=0&&a.slice(f,E)==c}function fw(a){return a=It(a),a&&wt.test(a)?a.replace(Te,tx):a}function dw(a){return a=It(a),a&&xl.test(a)?a.replace(Vs,"\\$&"):a}var pw=sa(function(a,c,f){return a+(f?"-":"")+c.toLowerCase()}),mw=sa(function(a,c,f){return a+(f?" ":"")+c.toLowerCase()}),gw=wm("toLowerCase");function _w(a,c,f){a=It(a),c=ft(c);var x=c?Qs(a):0;if(!c||x>=c)return a;var E=(c-x)/2;return Kl(Ol(E),f)+a+Kl(Nl(E),f)}function vw(a,c,f){a=It(a),c=ft(c);var x=c?Qs(a):0;return c&&x<c?a+Kl(c-x,f):a}function yw(a,c,f){a=It(a),c=ft(c);var x=c?Qs(a):0;return c&&x<c?Kl(c-x,f)+a:a}function xw(a,c,f){return f||c==null?c=0:c&&(c=+c),Ax(It(a).replace(Ja,""),c||0)}function Mw(a,c,f){return(f?Un(a,c,f):c===t)?c=1:c=ft(c),hh(It(a),c)}function Sw(){var a=arguments,c=It(a[0]);return a.length<3?c:c.replace(a[1],a[2])}var bw=sa(function(a,c,f){return a+(f?"_":"")+c.toLowerCase()});function Ew(a,c,f){return f&&typeof f!="number"&&Un(a,c,f)&&(c=f=t),f=f===t?we:f>>>0,f?(a=It(a),a&&(typeof c=="string"||c!=null&&!Dh(c))&&(c=Qn(c),!c&&$s(a))?Fr(wi(a),0,f):a.split(c,f)):[]}var ww=sa(function(a,c,f){return a+(f?" ":"")+Fh(c)});function Tw(a,c,f){return a=It(a),f=f==null?0:as(ft(f),0,a.length),c=Qn(c),a.slice(f,f+c.length)==c}function Aw(a,c,f){var x=R.templateSettings;f&&Un(a,c,f)&&(c=t),a=It(a),c=oc({},c,x,Im);var E=oc({},c.imports,x.imports,Im),C=_n(E),B=Zu(E,C),k,Y,ue=0,he=c.interpolate||rt,ge="__p += '",Pe=Ju((c.escape||rt).source+"|"+he.source+"|"+(he===zi?D:rt).source+"|"+(c.evaluate||rt).source+"|$","g"),Xe="//# sourceURL="+(Dt.call(c,"sourceURL")?(c.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Oy+"]")+`
`;a.replace(Pe,function(nt,Mt,Et,ei,Dn,ti){return Et||(Et=ei),ge+=a.slice(ue,ti).replace(_t,nx),Mt&&(k=!0,ge+=`' +
__e(`+Mt+`) +
'`),Dn&&(Y=!0,ge+=`';
`+Dn+`;
__p += '`),Et&&(ge+=`' +
((__t = (`+Et+`)) == null ? '' : __t) +
'`),ue=ti+nt.length,nt}),ge+=`';
`;var tt=Dt.call(c,"variable")&&c.variable;if(!tt)ge=`with (obj) {
`+ge+`
}
`;else if(Iu.test(tt))throw new lt(l);ge=(Y?ge.replace(xt,""):ge).replace(W,"$1").replace(Ce,"$1;"),ge="function("+(tt||"obj")+`) {
`+(tt?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(k?", __e = _.escape":"")+(Y?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+ge+`return __p
}`;var dt=Eg(function(){return Pt(C,Xe+"return "+ge).apply(t,B)});if(dt.source=ge,Uh(dt))throw dt;return dt}function Rw(a){return It(a).toLowerCase()}function Cw(a){return It(a).toUpperCase()}function Pw(a,c,f){if(a=It(a),a&&(f||c===t))return Up(a);if(!a||!(c=Qn(c)))return a;var x=wi(a),E=wi(c),C=Dp(x,E),B=Np(x,E)+1;return Fr(x,C,B).join("")}function Lw(a,c,f){if(a=It(a),a&&(f||c===t))return a.slice(0,Fp(a)+1);if(!a||!(c=Qn(c)))return a;var x=wi(a),E=Np(x,wi(c))+1;return Fr(x,0,E).join("")}function Iw(a,c,f){if(a=It(a),a&&(f||c===t))return a.replace(Ja,"");if(!a||!(c=Qn(c)))return a;var x=wi(a),E=Dp(x,wi(c));return Fr(x,E).join("")}function Uw(a,c){var f=I,x=K;if(Kt(c)){var E="separator"in c?c.separator:E;f="length"in c?ft(c.length):f,x="omission"in c?Qn(c.omission):x}a=It(a);var C=a.length;if($s(a)){var B=wi(a);C=B.length}if(f>=C)return a;var k=f-Qs(x);if(k<1)return x;var Y=B?Fr(B,0,k).join(""):a.slice(0,k);if(E===t)return Y+x;if(B&&(k+=Y.length-k),Dh(E)){if(a.slice(k).search(E)){var ue,he=Y;for(E.global||(E=Ju(E.source,It(J.exec(E))+"g")),E.lastIndex=0;ue=E.exec(he);)var ge=ue.index;Y=Y.slice(0,ge===t?k:ge)}}else if(a.indexOf(Qn(E),k)!=k){var Pe=Y.lastIndexOf(E);Pe>-1&&(Y=Y.slice(0,Pe))}return Y+x}function Dw(a){return a=It(a),a&&Le.test(a)?a.replace(ee,cx):a}var Nw=sa(function(a,c,f){return a+(f?" ":"")+c.toUpperCase()}),Fh=wm("toUpperCase");function bg(a,c,f){return a=It(a),c=f?t:c,c===t?rx(a)?fx(a):Ky(a):a.match(c)||[]}var Eg=vt(function(a,c){try{return Jn(a,t,c)}catch(f){return Uh(f)?f:new lt(f)}}),Ow=ar(function(a,c){return fi(c,function(f){f=Gi(f),rr(a,f,Lh(a[f],a))}),a});function Fw(a){var c=a==null?0:a.length,f=je();return a=c?Wt(a,function(x){if(typeof x[1]!="function")throw new di(o);return[f(x[0]),x[1]]}):[],vt(function(x){for(var E=-1;++E<c;){var C=a[E];if(Jn(C[0],this,x))return Jn(C[1],this,x)}})}function Bw(a){return cM(mi(a,m))}function Bh(a){return function(){return a}}function zw(a,c){return a==null||a!==a?c:a}var Hw=Am(),kw=Am(!0);function Yn(a){return a}function zh(a){return im(typeof a=="function"?a:mi(a,m))}function Gw(a){return sm(mi(a,m))}function Vw(a,c){return am(a,mi(c,m))}var Ww=vt(function(a,c){return function(f){return lo(f,a,c)}}),Xw=vt(function(a,c){return function(f){return lo(a,f,c)}});function Hh(a,c,f){var x=_n(c),E=Gl(c,x);f==null&&!(Kt(c)&&(E.length||!x.length))&&(f=c,c=a,a=this,E=Gl(c,_n(c)));var C=!(Kt(f)&&"chain"in f)||!!f.chain,B=lr(a);return fi(E,function(k){var Y=c[k];a[k]=Y,B&&(a.prototype[k]=function(){var ue=this.__chain__;if(C||ue){var he=a(this.__wrapped__),ge=he.__actions__=Wn(this.__actions__);return ge.push({func:Y,args:arguments,thisArg:a}),he.__chain__=ue,he}return Y.apply(a,Lr([this.value()],arguments))})}),a}function qw(){return bn._===this&&(bn._=vx),this}function kh(){}function Yw(a){return a=ft(a),vt(function(c){return om(c,a)})}var Zw=vh(Wt),Kw=vh(Rp),Jw=vh(Vu);function wg(a){return wh(a)?Wu(Gi(a)):TM(a)}function $w(a){return function(c){return a==null?t:os(a,c)}}var Qw=Cm(),jw=Cm(!0);function Gh(){return[]}function Vh(){return!1}function e1(){return{}}function t1(){return""}function n1(){return!0}function i1(a,c){if(a=ft(a),a<1||a>le)return[];var f=we,x=wn(a,we);c=je(c),a-=we;for(var E=Yu(x,c);++f<a;)c(f);return E}function r1(a){return ct(a)?Wt(a,Gi):jn(a)?[a]:Wn(Xm(It(a)))}function s1(a){var c=++gx;return It(a)+c}var a1=Zl(function(a,c){return a+c},0),o1=yh("ceil"),l1=Zl(function(a,c){return a/c},1),c1=yh("floor");function u1(a){return a&&a.length?kl(a,Yn,rh):t}function h1(a,c){return a&&a.length?kl(a,je(c,2),rh):t}function f1(a){return Lp(a,Yn)}function d1(a,c){return Lp(a,je(c,2))}function p1(a){return a&&a.length?kl(a,Yn,lh):t}function m1(a,c){return a&&a.length?kl(a,je(c,2),lh):t}var g1=Zl(function(a,c){return a*c},1),_1=yh("round"),v1=Zl(function(a,c){return a-c},0);function y1(a){return a&&a.length?qu(a,Yn):0}function x1(a,c){return a&&a.length?qu(a,je(c,2)):0}return R.after=Gb,R.ary=ng,R.assign=CE,R.assignIn=gg,R.assignInWith=oc,R.assignWith=PE,R.at=LE,R.before=ig,R.bind=Lh,R.bindAll=Ow,R.bindKey=rg,R.castArray=eE,R.chain=jm,R.chunk=cS,R.compact=uS,R.concat=hS,R.cond=Fw,R.conforms=Bw,R.constant=Bh,R.countBy=yb,R.create=IE,R.curry=sg,R.curryRight=ag,R.debounce=og,R.defaults=UE,R.defaultsDeep=DE,R.defer=Vb,R.delay=Wb,R.difference=fS,R.differenceBy=dS,R.differenceWith=pS,R.drop=mS,R.dropRight=gS,R.dropRightWhile=_S,R.dropWhile=vS,R.fill=yS,R.filter=Mb,R.flatMap=Eb,R.flatMapDeep=wb,R.flatMapDepth=Tb,R.flatten=Km,R.flattenDeep=xS,R.flattenDepth=MS,R.flip=Xb,R.flow=Hw,R.flowRight=kw,R.fromPairs=SS,R.functions=kE,R.functionsIn=GE,R.groupBy=Ab,R.initial=ES,R.intersection=wS,R.intersectionBy=TS,R.intersectionWith=AS,R.invert=WE,R.invertBy=XE,R.invokeMap=Cb,R.iteratee=zh,R.keyBy=Pb,R.keys=_n,R.keysIn=qn,R.map=tc,R.mapKeys=YE,R.mapValues=ZE,R.matches=Gw,R.matchesProperty=Vw,R.memoize=ic,R.merge=KE,R.mergeWith=_g,R.method=Ww,R.methodOf=Xw,R.mixin=Hh,R.negate=rc,R.nthArg=Yw,R.omit=JE,R.omitBy=$E,R.once=qb,R.orderBy=Lb,R.over=Zw,R.overArgs=Yb,R.overEvery=Kw,R.overSome=Jw,R.partial=Ih,R.partialRight=lg,R.partition=Ib,R.pick=QE,R.pickBy=vg,R.property=wg,R.propertyOf=$w,R.pull=LS,R.pullAll=$m,R.pullAllBy=IS,R.pullAllWith=US,R.pullAt=DS,R.range=Qw,R.rangeRight=jw,R.rearg=Zb,R.reject=Nb,R.remove=NS,R.rest=Kb,R.reverse=Ch,R.sampleSize=Fb,R.set=ew,R.setWith=tw,R.shuffle=Bb,R.slice=OS,R.sortBy=kb,R.sortedUniq=VS,R.sortedUniqBy=WS,R.split=Ew,R.spread=Jb,R.tail=XS,R.take=qS,R.takeRight=YS,R.takeRightWhile=ZS,R.takeWhile=KS,R.tap=ub,R.throttle=$b,R.thru=ec,R.toArray=dg,R.toPairs=yg,R.toPairsIn=xg,R.toPath=r1,R.toPlainObject=mg,R.transform=nw,R.unary=Qb,R.union=JS,R.unionBy=$S,R.unionWith=QS,R.uniq=jS,R.uniqBy=eb,R.uniqWith=tb,R.unset=iw,R.unzip=Ph,R.unzipWith=Qm,R.update=rw,R.updateWith=sw,R.values=la,R.valuesIn=aw,R.without=nb,R.words=bg,R.wrap=jb,R.xor=ib,R.xorBy=rb,R.xorWith=sb,R.zip=ab,R.zipObject=ob,R.zipObjectDeep=lb,R.zipWith=cb,R.entries=yg,R.entriesIn=xg,R.extend=gg,R.extendWith=oc,Hh(R,R),R.add=a1,R.attempt=Eg,R.camelCase=uw,R.capitalize=Mg,R.ceil=o1,R.clamp=ow,R.clone=tE,R.cloneDeep=iE,R.cloneDeepWith=rE,R.cloneWith=nE,R.conformsTo=sE,R.deburr=Sg,R.defaultTo=zw,R.divide=l1,R.endsWith=hw,R.eq=Ai,R.escape=fw,R.escapeRegExp=dw,R.every=xb,R.find=Sb,R.findIndex=Ym,R.findKey=NE,R.findLast=bb,R.findLastIndex=Zm,R.findLastKey=OE,R.floor=c1,R.forEach=eg,R.forEachRight=tg,R.forIn=FE,R.forInRight=BE,R.forOwn=zE,R.forOwnRight=HE,R.get=Nh,R.gt=aE,R.gte=oE,R.has=VE,R.hasIn=Oh,R.head=Jm,R.identity=Yn,R.includes=Rb,R.indexOf=bS,R.inRange=lw,R.invoke=qE,R.isArguments=us,R.isArray=ct,R.isArrayBuffer=lE,R.isArrayLike=Xn,R.isArrayLikeObject=nn,R.isBoolean=cE,R.isBuffer=Br,R.isDate=uE,R.isElement=hE,R.isEmpty=fE,R.isEqual=dE,R.isEqualWith=pE,R.isError=Uh,R.isFinite=mE,R.isFunction=lr,R.isInteger=cg,R.isLength=sc,R.isMap=ug,R.isMatch=gE,R.isMatchWith=_E,R.isNaN=vE,R.isNative=yE,R.isNil=ME,R.isNull=xE,R.isNumber=hg,R.isObject=Kt,R.isObjectLike=Qt,R.isPlainObject=mo,R.isRegExp=Dh,R.isSafeInteger=SE,R.isSet=fg,R.isString=ac,R.isSymbol=jn,R.isTypedArray=oa,R.isUndefined=bE,R.isWeakMap=EE,R.isWeakSet=wE,R.join=RS,R.kebabCase=pw,R.last=_i,R.lastIndexOf=CS,R.lowerCase=mw,R.lowerFirst=gw,R.lt=TE,R.lte=AE,R.max=u1,R.maxBy=h1,R.mean=f1,R.meanBy=d1,R.min=p1,R.minBy=m1,R.stubArray=Gh,R.stubFalse=Vh,R.stubObject=e1,R.stubString=t1,R.stubTrue=n1,R.multiply=g1,R.nth=PS,R.noConflict=qw,R.noop=kh,R.now=nc,R.pad=_w,R.padEnd=vw,R.padStart=yw,R.parseInt=xw,R.random=cw,R.reduce=Ub,R.reduceRight=Db,R.repeat=Mw,R.replace=Sw,R.result=jE,R.round=_1,R.runInContext=q,R.sample=Ob,R.size=zb,R.snakeCase=bw,R.some=Hb,R.sortedIndex=FS,R.sortedIndexBy=BS,R.sortedIndexOf=zS,R.sortedLastIndex=HS,R.sortedLastIndexBy=kS,R.sortedLastIndexOf=GS,R.startCase=ww,R.startsWith=Tw,R.subtract=v1,R.sum=y1,R.sumBy=x1,R.template=Aw,R.times=i1,R.toFinite=cr,R.toInteger=ft,R.toLength=pg,R.toLower=Rw,R.toNumber=vi,R.toSafeInteger=RE,R.toString=It,R.toUpper=Cw,R.trim=Pw,R.trimEnd=Lw,R.trimStart=Iw,R.truncate=Uw,R.unescape=Dw,R.uniqueId=s1,R.upperCase=Nw,R.upperFirst=Fh,R.each=eg,R.eachRight=tg,R.first=Jm,Hh(R,function(){var a={};return Hi(R,function(c,f){Dt.call(R.prototype,f)||(a[f]=c)}),a}(),{chain:!1}),R.VERSION=n,fi(["bind","bindKey","curry","curryRight","partial","partialRight"],function(a){R[a].placeholder=R}),fi(["drop","take"],function(a,c){bt.prototype[a]=function(f){f=f===t?1:dn(ft(f),0);var x=this.__filtered__&&!c?new bt(this):this.clone();return x.__filtered__?x.__takeCount__=wn(f,x.__takeCount__):x.__views__.push({size:wn(f,we),type:a+(x.__dir__<0?"Right":"")}),x},bt.prototype[a+"Right"]=function(f){return this.reverse()[a](f).reverse()}}),fi(["filter","map","takeWhile"],function(a,c){var f=c+1,x=f==G||f==fe;bt.prototype[a]=function(E){var C=this.clone();return C.__iteratees__.push({iteratee:je(E,3),type:f}),C.__filtered__=C.__filtered__||x,C}}),fi(["head","last"],function(a,c){var f="take"+(c?"Right":"");bt.prototype[a]=function(){return this[f](1).value()[0]}}),fi(["initial","tail"],function(a,c){var f="drop"+(c?"":"Right");bt.prototype[a]=function(){return this.__filtered__?new bt(this):this[f](1)}}),bt.prototype.compact=function(){return this.filter(Yn)},bt.prototype.find=function(a){return this.filter(a).head()},bt.prototype.findLast=function(a){return this.reverse().find(a)},bt.prototype.invokeMap=vt(function(a,c){return typeof a=="function"?new bt(this):this.map(function(f){return lo(f,a,c)})}),bt.prototype.reject=function(a){return this.filter(rc(je(a)))},bt.prototype.slice=function(a,c){a=ft(a);var f=this;return f.__filtered__&&(a>0||c<0)?new bt(f):(a<0?f=f.takeRight(-a):a&&(f=f.drop(a)),c!==t&&(c=ft(c),f=c<0?f.dropRight(-c):f.take(c-a)),f)},bt.prototype.takeRightWhile=function(a){return this.reverse().takeWhile(a).reverse()},bt.prototype.toArray=function(){return this.take(we)},Hi(bt.prototype,function(a,c){var f=/^(?:filter|find|map|reject)|While$/.test(c),x=/^(?:head|last)$/.test(c),E=R[x?"take"+(c=="last"?"Right":""):c],C=x||/^find/.test(c);E&&(R.prototype[c]=function(){var B=this.__wrapped__,k=x?[1]:arguments,Y=B instanceof bt,ue=k[0],he=Y||ct(B),ge=function(Mt){var Et=E.apply(R,Lr([Mt],k));return x&&Pe?Et[0]:Et};he&&f&&typeof ue=="function"&&ue.length!=1&&(Y=he=!1);var Pe=this.__chain__,Xe=!!this.__actions__.length,tt=C&&!Pe,dt=Y&&!Xe;if(!C&&he){B=dt?B:new bt(this);var nt=a.apply(B,k);return nt.__actions__.push({func:ec,args:[ge],thisArg:t}),new pi(nt,Pe)}return tt&&dt?a.apply(this,k):(nt=this.thru(ge),tt?x?nt.value()[0]:nt.value():nt)})}),fi(["pop","push","shift","sort","splice","unshift"],function(a){var c=Tl[a],f=/^(?:push|sort|unshift)$/.test(a)?"tap":"thru",x=/^(?:pop|shift)$/.test(a);R.prototype[a]=function(){var E=arguments;if(x&&!this.__chain__){var C=this.value();return c.apply(ct(C)?C:[],E)}return this[f](function(B){return c.apply(ct(B)?B:[],E)})}}),Hi(bt.prototype,function(a,c){var f=R[c];if(f){var x=f.name+"";Dt.call(na,x)||(na[x]=[]),na[x].push({name:c,func:f})}}),na[Yl(t,_).name]=[{name:"wrapper",func:t}],bt.prototype.clone=Dx,bt.prototype.reverse=Nx,bt.prototype.value=Ox,R.prototype.at=hb,R.prototype.chain=fb,R.prototype.commit=db,R.prototype.next=pb,R.prototype.plant=gb,R.prototype.reverse=_b,R.prototype.toJSON=R.prototype.valueOf=R.prototype.value=vb,R.prototype.first=R.prototype.head,to&&(R.prototype[to]=mb),R},js=dx();ns?((ns.exports=js)._=js,zu._=js):bn._=js}).call(yr)})(uu,uu.exports);uu.exports;const kU=()=>zU("threlte-controls",{orbitControls:Mi(void 0)}),l0={type:"change"},wf={type:"start"},c0={type:"end"};let GU=class extends $i{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new U,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:xs.ROTATE,MIDDLE:xs.DOLLY,RIGHT:xs.PAN},this.touches={ONE:Ms.ROTATE,TWO:Ms.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return l.phi},this.getAzimuthalAngle=function(){return l.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(z){z.addEventListener("keydown",Ke),this._domElementKeyEvents=z},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Ke),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(l0),n.update(),r=i.NONE},this.update=function(){const z=new U,pe=new Pn().setFromUnitVectors(e.up,new U(0,1,0)),xe=pe.clone().invert(),$=new U,ze=new Pn,Ye=new U,Ve=2*Math.PI;return function(){const Fe=n.object.position;z.copy(Fe).sub(n.target),z.applyQuaternion(pe),l.setFromVector3(z),n.autoRotate&&r===i.NONE&&A(O()),n.enableDamping?(l.theta+=u.theta*n.dampingFactor,l.phi+=u.phi*n.dampingFactor):(l.theta+=u.theta,l.phi+=u.phi);let Qe=n.minAzimuthAngle,xt=n.maxAzimuthAngle;return isFinite(Qe)&&isFinite(xt)&&(Qe<-Math.PI?Qe+=Ve:Qe>Math.PI&&(Qe-=Ve),xt<-Math.PI?xt+=Ve:xt>Math.PI&&(xt-=Ve),Qe<=xt?l.theta=Math.max(Qe,Math.min(xt,l.theta)):l.theta=l.theta>(Qe+xt)/2?Math.max(Qe,l.theta):Math.min(xt,l.theta)),l.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,l.phi)),l.makeSafe(),l.radius*=h,l.radius=Math.max(n.minDistance,Math.min(n.maxDistance,l.radius)),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),z.setFromSpherical(l),z.applyQuaternion(xe),Fe.copy(n.target).add(z),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),d.set(0,0,0)),h=1,m||$.distanceToSquared(n.object.position)>o||8*(1-ze.dot(n.object.quaternion))>o||Ye.distanceToSquared(n.target)>0?(n.dispatchEvent(l0),$.copy(n.object.position),ze.copy(n.object.quaternion),Ye.copy(n.target),m=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",F),n.domElement.removeEventListener("pointerdown",re),n.domElement.removeEventListener("pointercancel",de),n.domElement.removeEventListener("wheel",Ne),n.domElement.removeEventListener("pointermove",Se),n.domElement.removeEventListener("pointerup",de),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",Ke),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let r=i.NONE;const o=1e-6,l=new pd,u=new pd;let h=1;const d=new U;let m=!1;const p=new ce,g=new ce,v=new ce,M=new ce,y=new ce,_=new ce,b=new ce,S=new ce,w=new ce,T=[],L={};function O(){return 2*Math.PI/60/60*n.autoRotateSpeed}function N(){return Math.pow(.95,n.zoomSpeed)}function A(z){u.theta-=z}function I(z){u.phi-=z}const K=function(){const z=new U;return function(xe,$){z.setFromMatrixColumn($,0),z.multiplyScalar(-xe),d.add(z)}}(),ne=function(){const z=new U;return function(xe,$){n.screenSpacePanning===!0?z.setFromMatrixColumn($,1):(z.setFromMatrixColumn($,0),z.crossVectors(n.object.up,z)),z.multiplyScalar(xe),d.add(z)}}(),X=function(){const z=new U;return function(xe,$){const ze=n.domElement;if(n.object.isPerspectiveCamera){const Ye=n.object.position;z.copy(Ye).sub(n.target);let Ve=z.length();Ve*=Math.tan(n.object.fov/2*Math.PI/180),K(2*xe*Ve/ze.clientHeight,n.object.matrix),ne(2*$*Ve/ze.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(K(xe*(n.object.right-n.object.left)/n.object.zoom/ze.clientWidth,n.object.matrix),ne($*(n.object.top-n.object.bottom)/n.object.zoom/ze.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function G(z){n.object.isPerspectiveCamera?h/=z:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*z)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function V(z){n.object.isPerspectiveCamera?h*=z:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/z)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function fe(z){p.set(z.clientX,z.clientY)}function ie(z){b.set(z.clientX,z.clientY)}function le(z){M.set(z.clientX,z.clientY)}function me(z){g.set(z.clientX,z.clientY),v.subVectors(g,p).multiplyScalar(n.rotateSpeed);const pe=n.domElement;A(2*Math.PI*v.x/pe.clientHeight),I(2*Math.PI*v.y/pe.clientHeight),p.copy(g),n.update()}function _e(z){S.set(z.clientX,z.clientY),w.subVectors(S,b),w.y>0?G(N()):w.y<0&&V(N()),b.copy(S),n.update()}function we(z){y.set(z.clientX,z.clientY),_.subVectors(y,M).multiplyScalar(n.panSpeed),X(_.x,_.y),M.copy(y),n.update()}function j(z){z.deltaY<0?V(N()):z.deltaY>0&&G(N()),n.update()}function ve(z){let pe=!1;switch(z.code){case n.keys.UP:z.ctrlKey||z.metaKey||z.shiftKey?I(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):X(0,n.keyPanSpeed),pe=!0;break;case n.keys.BOTTOM:z.ctrlKey||z.metaKey||z.shiftKey?I(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):X(0,-n.keyPanSpeed),pe=!0;break;case n.keys.LEFT:z.ctrlKey||z.metaKey||z.shiftKey?A(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):X(n.keyPanSpeed,0),pe=!0;break;case n.keys.RIGHT:z.ctrlKey||z.metaKey||z.shiftKey?A(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):X(-n.keyPanSpeed,0),pe=!0;break}pe&&(z.preventDefault(),n.update())}function Me(){if(T.length===1)p.set(T[0].pageX,T[0].pageY);else{const z=.5*(T[0].pageX+T[1].pageX),pe=.5*(T[0].pageY+T[1].pageY);p.set(z,pe)}}function Re(){if(T.length===1)M.set(T[0].pageX,T[0].pageY);else{const z=.5*(T[0].pageX+T[1].pageX),pe=.5*(T[0].pageY+T[1].pageY);M.set(z,pe)}}function Ie(){const z=T[0].pageX-T[1].pageX,pe=T[0].pageY-T[1].pageY,xe=Math.sqrt(z*z+pe*pe);b.set(0,xe)}function Ge(){n.enableZoom&&Ie(),n.enablePan&&Re()}function et(){n.enableZoom&&Ie(),n.enableRotate&&Me()}function Ze(z){if(T.length==1)g.set(z.pageX,z.pageY);else{const xe=ye(z),$=.5*(z.pageX+xe.x),ze=.5*(z.pageY+xe.y);g.set($,ze)}v.subVectors(g,p).multiplyScalar(n.rotateSpeed);const pe=n.domElement;A(2*Math.PI*v.x/pe.clientHeight),I(2*Math.PI*v.y/pe.clientHeight),p.copy(g)}function At(z){if(T.length===1)y.set(z.pageX,z.pageY);else{const pe=ye(z),xe=.5*(z.pageX+pe.x),$=.5*(z.pageY+pe.y);y.set(xe,$)}_.subVectors(y,M).multiplyScalar(n.panSpeed),X(_.x,_.y),M.copy(y)}function Je(z){const pe=ye(z),xe=z.pageX-pe.x,$=z.pageY-pe.y,ze=Math.sqrt(xe*xe+$*$);S.set(0,ze),w.set(0,Math.pow(S.y/b.y,n.zoomSpeed)),G(w.y),b.copy(S)}function H(z){n.enableZoom&&Je(z),n.enablePan&&At(z)}function Ee(z){n.enableZoom&&Je(z),n.enableRotate&&Ze(z)}function re(z){n.enabled!==!1&&(T.length===0&&(n.domElement.setPointerCapture(z.pointerId),n.domElement.addEventListener("pointermove",Se),n.domElement.addEventListener("pointerup",de)),P(z),z.pointerType==="touch"?it(z):De(z))}function Se(z){n.enabled!==!1&&(z.pointerType==="touch"?Lt(z):Ue(z))}function de(z){te(z),T.length===0&&(n.domElement.releasePointerCapture(z.pointerId),n.domElement.removeEventListener("pointermove",Se),n.domElement.removeEventListener("pointerup",de)),n.dispatchEvent(c0),r=i.NONE}function De(z){let pe;switch(z.button){case 0:pe=n.mouseButtons.LEFT;break;case 1:pe=n.mouseButtons.MIDDLE;break;case 2:pe=n.mouseButtons.RIGHT;break;default:pe=-1}switch(pe){case xs.DOLLY:if(n.enableZoom===!1)return;ie(z),r=i.DOLLY;break;case xs.ROTATE:if(z.ctrlKey||z.metaKey||z.shiftKey){if(n.enablePan===!1)return;le(z),r=i.PAN}else{if(n.enableRotate===!1)return;fe(z),r=i.ROTATE}break;case xs.PAN:if(z.ctrlKey||z.metaKey||z.shiftKey){if(n.enableRotate===!1)return;fe(z),r=i.ROTATE}else{if(n.enablePan===!1)return;le(z),r=i.PAN}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(wf)}function Ue(z){switch(r){case i.ROTATE:if(n.enableRotate===!1)return;me(z);break;case i.DOLLY:if(n.enableZoom===!1)return;_e(z);break;case i.PAN:if(n.enablePan===!1)return;we(z);break}}function Ne(z){n.enabled===!1||n.enableZoom===!1||r!==i.NONE||(z.preventDefault(),n.dispatchEvent(wf),j(z),n.dispatchEvent(c0))}function Ke(z){n.enabled===!1||n.enablePan===!1||ve(z)}function it(z){switch(be(z),T.length){case 1:switch(n.touches.ONE){case Ms.ROTATE:if(n.enableRotate===!1)return;Me(),r=i.TOUCH_ROTATE;break;case Ms.PAN:if(n.enablePan===!1)return;Re(),r=i.TOUCH_PAN;break;default:r=i.NONE}break;case 2:switch(n.touches.TWO){case Ms.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ge(),r=i.TOUCH_DOLLY_PAN;break;case Ms.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;et(),r=i.TOUCH_DOLLY_ROTATE;break;default:r=i.NONE}break;default:r=i.NONE}r!==i.NONE&&n.dispatchEvent(wf)}function Lt(z){switch(be(z),r){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ze(z),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;At(z),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;H(z),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ee(z),n.update();break;default:r=i.NONE}}function F(z){n.enabled!==!1&&z.preventDefault()}function P(z){T.push(z)}function te(z){delete L[z.pointerId];for(let pe=0;pe<T.length;pe++)if(T[pe].pointerId==z.pointerId){T.splice(pe,1);return}}function be(z){let pe=L[z.pointerId];pe===void 0&&(pe=new ce,L[z.pointerId]=pe),pe.set(z.pageX,z.pageY)}function ye(z){const pe=z.pointerId===T[0].pointerId?T[1]:T[0];return L[pe.pointerId]}n.domElement.addEventListener("contextmenu",F),n.domElement.addEventListener("pointerdown",re),n.domElement.addEventListener("pointercancel",de),n.domElement.addEventListener("wheel",Ne,{passive:!1}),this.update()}};const VU=s=>({ref:s&1}),u0=s=>({ref:s[0]});function WU(s){let e;const t=s[7].default,n=Os(t,s,s[10],u0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,r){n&&n.m(i,r),e=!0},p(i,r){n&&n.p&&(!e||r&1025)&&Fs(n,t,i,i[10],e?zs(t,i[10],r,VU):Bs(i[10]),u0)},i(i){e||(Ut(n,i),e=!0)},o(i){Ot(n,i),e=!1},d(i){n&&n.d(i)}}}function XU(s){let e,t;const n=[{is:s[0]},s[6]];let i={$$slots:{default:[WU,({ref:r})=>({0:r}),({ref:r})=>r?1:0]},$$scope:{ctx:s}};for(let r=0;r<n.length;r+=1)i=Oo(i,n[r]);return e=new iu({props:i}),s[8](e),e.$on("change",s[3]),e.$on("create",s[9]),{c(){Fn(e.$$.fragment)},l(r){Bn(e.$$.fragment,r)},m(r,o){zn(e,r,o),t=!0},p(r,[o]){const l=o&65?T1(n,[o&1&&{is:r[0]},o&64&&A1(r[6])]):{};o&1025&&(l.$$scope={dirty:o,ctx:r}),e.$set(l)},i(r){t||(Ut(e.$$.fragment,r),t=!0)},o(r){Ot(e.$$.fragment,r),t=!1},d(r){s[8](null),Hn(e,r)}}}function qU(s,e,t){const n=["ref"];let i=su(e,n),r,o,{$$slots:l={},$$scope:u}=e;const h=_y();Fa(s,h,S=>t(11,r=S));const{renderer:d,invalidate:m}=yl();if(!d)throw new Error("Threlte Context missing: Is <OrbitControls> a child of <Canvas>?");if(!(r instanceof rl))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const p=new GU(r,d.domElement),{start:g,stop:v}=BU(()=>p.update(),{autostart:!1,debugFrameloopMessage:"OrbitControls: updating controls"}),M=HU();Fa(s,M,S=>t(1,o=S));const{orbitControls:y}=kU();function _(S){d0[S?"unshift":"push"](()=>{o=S,M.set(o)})}const b=({ref:S,cleanup:w})=>{y.set(S),w(()=>{y.set(void 0)})};return s.$$set=S=>{e=Oo(Oo({},e),Af(S)),t(6,i=su(e,n)),"$$scope"in S&&t(10,u=S.$$scope)},s.$$.update=()=>{i.autoRotate||i.enableDamping?g():v()},[p,o,h,m,M,y,i,l,_,b,u]}class YU extends Si{constructor(e){super(),bi(this,e,qU,XU,Ei,{ref:0})}get ref(){return this.$$.ctx[0]}}new ot;new ot;new xn;function ZU(s,e,t){let{data:n}=e;return s.$$set=i=>{"data"in i&&t(0,n=i.data)},[n]}class KU extends Si{constructor(e){super(),bi(this,e,ZU,null,Ei,{data:0})}}function JU(s){let e,t;return e=new YU({props:{enableDamping:!0}}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},p:No,i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}function $U(s){let e,t,n,i,r,o,l,u;return e=new iu.PerspectiveCamera({props:{makeDefault:!0,position:[0,0,80],$$slots:{default:[JU]},$$scope:{ctx:s}}}),n=new iu.AmbientLight({props:{color:"#ffffff",intensity:.1}}),r=new iu.HemisphereLight({props:{color:"#ffffff",skyColor:"#ffffbb",groundColor:"#080820",intensity:1}}),l=new KU({}),{c(){Fn(e.$$.fragment),t=Ro(),Fn(n.$$.fragment),i=Ro(),Fn(r.$$.fragment),o=Ro(),Fn(l.$$.fragment)},l(h){Bn(e.$$.fragment,h),t=Co(h),Bn(n.$$.fragment,h),i=Co(h),Bn(r.$$.fragment,h),o=Co(h),Bn(l.$$.fragment,h)},m(h,d){zn(e,h,d),Sr(h,t,d),zn(n,h,d),Sr(h,i,d),zn(r,h,d),Sr(h,o,d),zn(l,h,d),u=!0},p(h,[d]){const m={};d&1&&(m.$$scope={dirty:d,ctx:h}),e.$set(m)},i(h){u||(Ut(e.$$.fragment,h),Ut(n.$$.fragment,h),Ut(r.$$.fragment,h),Ut(l.$$.fragment,h),u=!0)},o(h){Ot(e.$$.fragment,h),Ot(n.$$.fragment,h),Ot(r.$$.fragment,h),Ot(l.$$.fragment,h),u=!1},d(h){Hn(e,h),h&&Tt(t),Hn(n,h),h&&Tt(i),Hn(r,h),h&&Tt(o),Hn(l,h)}}}class QU extends Si{constructor(e){super(),bi(this,e,null,$U,Ei,{})}}function jU(s){let e,t;return e=new QU({}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}function eD(s){let e,t,n;return t=new DU({props:{$$slots:{default:[jU]},$$scope:{ctx:s}}}),{c(){e=Xt("div"),Fn(t.$$.fragment),this.h()},l(i){e=qt(i,"DIV",{class:!0});var r=f0(e);Bn(t.$$.fragment,r),r.forEach(Tt),this.h()},h(){qe(e,"class","wrapper svelte-dn6fab")},m(i,r){Sr(i,e,r),zn(t,e,null),n=!0},p(i,[r]){const o={};r&1&&(o.$$scope={dirty:r,ctx:i}),t.$set(o)},i(i){n||(Ut(t.$$.fragment,i),n=!0)},o(i){Ot(t.$$.fragment,i),n=!1},d(i){i&&Tt(e),Hn(t)}}}class tD extends Si{constructor(e){super(),bi(this,e,null,eD,Ei,{})}}function nD(s){let e,t;return e=new tD({}),{c(){Fn(e.$$.fragment)},l(n){Bn(e.$$.fragment,n)},m(n,i){zn(e,n,i),t=!0},p:No,i(n){t||(Ut(e.$$.fragment,n),t=!0)},o(n){Ot(e.$$.fragment,n),t=!1},d(n){Hn(e,n)}}}class iD extends Si{constructor(e){super(),bi(this,e,null,nD,Ei,{})}}const rD="Title TK",sD="Description tk.",h0={title:rD,description:sD};function aD(){console.log("--- --- --- --- --- ---"),console.log("svelte-starter: 5.10.0"),console.log("build: 2023-06-28-15:39"),console.log("--- --- --- --- --- ---")}function oD(s){let e,t,n,i;return e=new L1({props:{title:s[1],description:s[2],url:s[3],preloadFont:s[0],keywords:s[4]}}),n=new iD({}),{c(){Fn(e.$$.fragment),t=Ro(),Fn(n.$$.fragment)},l(r){Bn(e.$$.fragment,r),t=Co(r),Bn(n.$$.fragment,r)},m(r,o){zn(e,r,o),Sr(r,t,o),zn(n,r,o),i=!0},p:No,i(r){i||(Ut(e.$$.fragment,r),Ut(n.$$.fragment,r),i=!0)},o(r){Ot(e.$$.fragment,r),Ot(n.$$.fragment,r),i=!1},d(r){Hn(e,r),r&&Tt(t),Hn(n,r)}}}function lD(s,e,t){let{data:n}=e;aD();const i=["https://pudding.cool/assets/fonts/tiempos/TiemposTextWeb-Regular.woff2","https://pudding.cool/assets/fonts/tiempos/TiemposTextWeb-Bold.woff2","https://pudding.cool/assets/fonts/national/National2Web-Regular.woff2","https://pudding.cool/assets/fonts/national/National2Web-Bold.woff2"],{title:r,description:o,url:l,keywords:u}=h0;return Ui("copy",h0),Ui("data",n),console.log(n.iris),s.$$set=h=>{"data"in h&&t(5,n=h.data)},[i,r,o,l,u,n]}class mD extends Si{constructor(e){super(),bi(this,e,lD,oD,Ei,{data:5})}}export{mD as component};
